{
  "id" : "api/router/RouterModule",
  "title" : "RouterModule",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"routermodule\">RouterModule</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/router\">@angular/router</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a> } from <a href=\"api/router\">'@angular/router'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/router/src/router_module.ts#L71-L178\">router/src/router_module.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c80z25g750c38ynx838qgdeev\">添加路由指令和提供者。</p>\n\n</div>\n\n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ivgu86loww6mg4fq1brezlnd\"><i class=\"material-icons\">link</i>概览</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a> {\n  <a class=\"code-anchor\" href=\"api/router/RouterModule#constructor()\">constructor(guard: any, router: Router)</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterModule#forRoot\">static forRoot(routes: Routes, config?: ExtraOptions): ModuleWithProviders</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterModule#forChild\">static forChild(routes: Routes): ModuleWithProviders</a>\n}\n</code-example>\n</section>\n\n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cflu95twzi71qd095ghj9h0y7\"><i class=\"material-icons\">link</i>使用方法</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eluai5krx290gtingps6imr3i\"><code>RouterModule</code> 可以被多次导入：每个惰性加载的捆绑包一次。 由于路由器处理的是全局共享资源（位置），因此我们不能让多个路由器服务同时处于活动状态。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dgtlyw45o86y7pwh3bljn3110\">这就是为什么创建此模块有两种方式：\n<code>RouterModule.forRoot</code> 和 \n<code>RouterModule.forChild</code>。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5l9b6c6tb2uii0k5z1qw4jttb\"><code>forRoot</code> 创建一个包含所有指令、给定路由和路由器服务本身的模块。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ahfchzviseei7e5gbj94abo32\"><code>forChild</code> 创建一个包含所有指令和给定路由的模块，但不包含路由器服务。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cjl3snxbu7ddshr2ffm5kohz5\">在根目录注册时，此模块应按如下方式使用</p>\n<code-example>\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [RouterModule.forRoot(<a href=\"api/router/ROUTES\" class=\"code-anchor\">ROUTES</a>)]\n})\nclass MyNgModule {}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3isthdmflkmyheevk3ihnvq83\">对于子模块和惰性加载的子模块，此模块应按如下方式使用：</p>\n<code-example>\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [RouterModule.forChild(<a href=\"api/router/ROUTES\" class=\"code-anchor\">ROUTES</a>)]\n})\nclass MyNgModule {}\n</code-example>\n\n</section>\n\n\n  \n\n\n<section class=\"description\">\n  <h2 id=\"description\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ar5q09mdsagdppsbze96eagxl\"><i class=\"material-icons\">link</i>说明</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eh5zgqa17gw2ku4h5yu1xznk2\">管理状态转换是构建应用程序中最难的部分之一。这在 Web 上尤其如此，因为你还需要确保状态反映在 URL 中。 此外，我们通常希望将应用程序拆分为多个捆绑包，并按需加载它们。 透明地做到这一点并不容易。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6wfow10ec63gnirzmn4d8mn9\">Angular 路由器解决了这些问题。使用路由器，你可以声明性地指定应用程序状态，管理状态转换，同时处理 URL，并按需加载捆绑包。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ypobh6b9zu0brjk4ye18rp30\"><a href=\"https://angular.io/docs/ts/latest/guide/router.html\">阅读此开发者指南</a> 以了解如何使用路由器。</p>\n\n</section>\n\n\n  \n  \n\n\n\n<section class=\"static-members\">\n  <h2 id=\"static-members\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ixh78z2dfifcy2khe8k014ge\"><i class=\"material-icons\">link</i>静态成员</h2>\n  \n    <div class=\"static-member\">\n  <a id=\"forRoot\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> forRoot(routes: <a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a>, config?: <a href=\"api/router/ExtraOptions\" class=\"code-anchor\">ExtraOptions</a>): <a href=\"api/core/ModuleWithProviders\" class=\"code-anchor\">ModuleWithProviders</a></code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7wtwwpo9r7d3ejk2cqmmsz8eo\">创建一个包含所有路由器提供者和指令的模块。它还可以选择设置应用程序监听器以执行初始导航。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"defoq6d82nx5ohqst2kc3ecwb\">选项（参见 \n<a href=\"api/router/ExtraOptions\"><code>ExtraOptions</code></a>）：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"228utwuj5rc4de97bv6znj7ng\"><code>enableTracing</code> 使路由器将所有内部事件记录到控制台。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"czocka5gzuwrue7eajy0dpk1p\"><code>useHash</code> 启用使用 URL 片段而不是历史 API 的位置策略。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6dwva0g9mm24qzg2z1rdgstcv\"><code>initialNavigation</code> 禁用初始导航。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3luc9garkg59gqbvsb7azejqz\"><code>errorHandler</code> 提供自定义错误处理程序。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"btzjy8bjkje2mpgzfubqyn7pl\"><code>preloadingStrategy</code> 配置预加载策略（参见 \n<a href=\"api/router/PreloadAllModules\"><code>PreloadAllModules</code></a>）。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9hxdvlqf3hr90t0izkzhuweza\"><code>onSameUrlNavigation</code> 配置路由器如何处理导航到当前 URL。有关更多详细信息，请参见 \n<a href=\"api/router/ExtraOptions\"><code>ExtraOptions</code></a>。</li>\n</ul>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"static-member\">\n  <a id=\"forChild\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> forChild(routes: <a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a>): <a href=\"api/core/ModuleWithProviders\" class=\"code-anchor\">ModuleWithProviders</a></code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9c7aibgamynv7fn5xirqs7igx\">创建一个包含所有路由器指令和注册路由的提供者的模块。</p>\n\n  </div>\n\n    \n    \n  \n</section>\n\n\n\n\n<section class=\"constructors\">\n  <h2 id=\"constructor\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"64p310lbzdqiret0qyhhannvq\"><i class=\"material-icons\">link</i>构造函数</h2>\n  \n    <div class=\"constructor\">\n  <a id=\"constructor()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">constructor(guard: any, router: <a href=\"api/router/Router\" class=\"code-anchor\">Router</a>)</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n\n<section class=\"annotations\">\n  <h2 id=\"annotations\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ptfpgifdyh5hp4kme5clquv2\"><i class=\"material-icons\">link</i>注解</h2>\n    <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES })</code-example>\n    \n  \n</section>\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/router\n - api/router/Router\n - api/router/RouterLink\n - api/router/RouterLinkActive\n - api/router/RouterLinkWithHref\n - api/router/RouterOutlet\n - api/router/testing/RouterTestingModule\n - guide/aot-compiler\n - guide/cheatsheet\n - guide/frequent-ngmodules\n - guide/lazy-loading-ngmodules\n - guide/module-types\n - guide/ngmodule-faq\n - guide/ngmodules\n - guide/router\n - guide/singleton-services\n - guide/styleguide\n - guide/testing\n - guide/upgrade\n - tutorial/toh-pt5\n-->\n<!-- links from this doc:\n - api/core/ModuleWithProviders\n - api/core/NgModule\n - api/router\n - api/router/ExtraOptions\n - api/router/PreloadAllModules\n - api/router/ROUTES\n - api/router/Router\n - api/router/RouterModule#annotations\n - api/router/RouterModule#constructor\n - api/router/RouterModule#constructor()\n - api/router/RouterModule#description\n - api/router/RouterModule#forChild\n - api/router/RouterModule#forRoot\n - api/router/RouterModule#how-to-use\n - api/router/RouterModule#overview\n - api/router/RouterModule#routermodule\n - api/router/RouterModule#static-members\n - api/router/Routes\n - api/upgrade/static\n - https://angular.io/docs/ts/latest/guide/router.html\n - https://github.com/angular/angular/tree/5.2.11/packages/router/src/router_module.ts#L71-L178\n - https://www.npmjs.com/package/@angular/router\n-->"
}