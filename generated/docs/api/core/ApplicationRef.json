{
  "id" : "api/core/ApplicationRef",
  "title" : "ApplicationRef",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"applicationref\">ApplicationRef</h1>\n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a> } from <a href=\"api/core\">'@angular/core'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/core/src/application_ref.ts#L361-L579\">core/src/application_ref.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"interface-overview\">\n<h2 id=\"interface-overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"15ffnfvjx5orhxzfayretyfy4\"><i class=\"material-icons\">link</i>接口概览</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a> { \n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#componentTypes\">get componentTypes: Type&lt;any&gt;[]</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#components\">get components: ComponentRef&lt;any&gt;[]</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#isStable\">get isStable: Observable&lt;boolean&gt;</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#bootstrap\">bootstrap&lt;C&gt;(componentOrFactory: ComponentFactory&lt;C&gt; | Type&lt;C&gt;, rootSelectorOrNode?: string | any): ComponentRef&lt;C&gt;</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#tick\">tick(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#attachView\">attachView(viewRef: ViewRef): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#detachView\">detachView(viewRef: ViewRef): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#viewCount\">get viewCount</a>\n}\n</code-example>\n</section>\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ar5q09mdsagdppsbze96eagxl\"><i class=\"material-icons\">link</i>说明</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"7rscrgt3ut9qra3k2gfu9sjkh\">对页面上运行的 Angular 应用程序的引用。</p>\n\n</section>\n\n  \n  \n  \n\n  \n  \n  \n\n  \n\n<section class=\"instance-members\">\n  <h2 id=\"members\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e62kgm2ztk7rgk6auybfiv91o\"><i class=\"material-icons\">link</i>成员</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"componentTypes\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get componentTypes: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt;[]</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"bzu353rzumqqijfzitap3lhb3\">获取注册到该应用程序的组件类型的列表。在创建组件之前，会填充此列表。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"components\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get components: <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&lt;any&gt;[]</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"epqxxz9dwki2ez4pru63x3rcq\">获取已注册到该应用中的组件的列表。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"isStable\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get isStable: Observable&lt;boolean&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"cku67efooxu4mky6q509os8us\">返回一个 Observable，指示应用程序何时变得稳定或不稳定。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"bootstrap\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">bootstrap&lt;C&gt;(componentOrFactory: <a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a>&lt;C&gt; | <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;C&gt;, rootSelectorOrNode?: string | any): <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&lt;C&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"g8qeavw3hwipimhp2d3riso7\">在应用的根级别引导一个新的组件。</p>\n<h3 id=\"bootstrap-process\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"9zflwojio2e3gumkrspb9c1hj\"><i class=\"material-icons\">link</i>引导过程</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"emio70mkcfun4ipbxiujdymiw\">在将新的根组件引导到应用中时，Angular 会将指定的应用组件安装到由 [componentType] 的选择器标识的 DOM 元素上，并启动自动变更检测以完成组件的初始化。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"822unwsdw3w8ap6c5tb27w8jh\">可选地，组件可以安装到与 [componentType] 的选择器不匹配的 DOM 元素上。</p>\n<h3 id=\"example\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\"><i class=\"material-icons\">link</i>范例</h3>\n<code-example>\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({selector: 'my-app', template: 'Hello World'})\nclass MyApp {\n}\n\nconst myPlatformFactory = <a href=\"api/core/createPlatformFactory\" class=\"code-anchor\">createPlatformFactory</a>(<a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a>, 'myPlatform');\nmyPlatformFactory().bootstrapModule(MyApp);\n\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"tick\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>(): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ezkzu863laro99f5s2upacbgr\">调用此方法可以显式处理变更检测及其副作用。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9xwxfk0ang1yj3kvmdmbm3dxm\">在开发模式下，\n<code><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>()</code> 还会执行第二次变更检测循环，以确保没有进一步的变更被检测到。如果在此第二次循环中检测到额外的变更，则应用中的绑定具有无法在单次变更检测过程中解决的副作用。在这种情况下，Angular 会抛出一个错误，因为 Angular 应用只能有一次变更检测过程，在此过程中所有变更检测都必须完成。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"attachView\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">attachView(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"2kuchdtlabzyiroo9050p14na\">附加视图，以便对其进行脏检查。视图销毁后将自动分离。如果视图已附加到 ViewContainer，则会抛出此错误。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"detachView\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">detachView(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"2v8gt4jpuil5zsbtqsyaybvy9\">再次从脏检查中分离视图。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"viewCount\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get viewCount</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"6pc62n9jit9xxfa60cbkvvfid\">返回已附加视图的数量。</p>\n\n  </div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/core\n - api/core/ApplicationModule\n-->\n<!-- links from this doc:\n - api/core\n - api/core/ApplicationRef#applicationref\n - api/core/ApplicationRef#attachView\n - api/core/ApplicationRef#bootstrap\n - api/core/ApplicationRef#bootstrap-process\n - api/core/ApplicationRef#componentTypes\n - api/core/ApplicationRef#components\n - api/core/ApplicationRef#description\n - api/core/ApplicationRef#detachView\n - api/core/ApplicationRef#example\n - api/core/ApplicationRef#interface-overview\n - api/core/ApplicationRef#isStable\n - api/core/ApplicationRef#members\n - api/core/ApplicationRef#tick\n - api/core/ApplicationRef#viewCount\n - api/core/Component\n - api/core/ComponentFactory\n - api/core/ComponentRef\n - api/core/Type\n - api/core/ViewRef\n - api/core/createPlatformFactory\n - api/core/testing/tick\n - api/platform-browser-dynamic/platformBrowserDynamic\n - https://github.com/angular/angular/tree/5.2.11/packages/core/src/application_ref.ts#L361-L579\n - https://www.npmjs.com/package/@angular/core\n-->"
}