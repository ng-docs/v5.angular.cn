{
  "id": "api/core/ApplicationRef",
  "title": "ApplicationRef",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"applicationref\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#applicationref\"><i class=\"material-icons\">link</i></a>ApplicationRef</h1>\n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a> } from <a href=\"api/core\">'@angular/core'</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/core/src/application_ref.ts#L361-L579\">core/src/application_ref.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"interface-overview\">\n<h2 id=\"interface-overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#interface-overview\"><i class=\"material-icons\">link</i></a>Interface Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a> { \n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#componentTypes\">get componentTypes: Type&#x3C;any>[]</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#components\">get components: ComponentRef&#x3C;any>[]</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#isStable\">get isStable: Observable&#x3C;boolean></a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#bootstrap\">bootstrap&#x3C;C>(componentOrFactory: ComponentFactory&#x3C;C> | Type&#x3C;C>, rootSelectorOrNode?: string | any): ComponentRef&#x3C;C></a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#tick\">tick(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#attachView\">attachView(viewRef: ViewRef): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#detachView\">detachView(viewRef: ViewRef): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#viewCount\">get viewCount</a>\n}\n</code-example>\n</section>\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p>A reference to an Angular application running on a page.</p>\n\n</section>\n\n  \n  \n  \n\n  \n  \n  \n\n  \n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"componentTypes\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get componentTypes: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;any>[]</code-example>\n  <p>Get a list of component types registered to this application.\nThis list is populated even before the component is created.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"components\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get components: <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&#x3C;any>[]</code-example>\n  <p>Get a list of components registered to this application.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"isStable\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get isStable: Observable&#x3C;boolean></code-example>\n  <p>Returns an Observable that indicates when the application is stable or unstable.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"bootstrap\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">bootstrap&#x3C;C>(componentOrFactory: <a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a>&#x3C;C> | <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;C>, rootSelectorOrNode?: string | any): <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&#x3C;C></code-example>\n  <p>Bootstrap a new component at the root level of the application.</p>\n<h3 id=\"bootstrap-process\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#bootstrap-process\"><i class=\"material-icons\">link</i></a>Bootstrap process</h3>\n<p>When bootstrapping a new root component into an application, Angular mounts the\nspecified application component onto DOM elements identified by the [componentType]'s\nselector and kicks off automatic change detection to finish initializing the component.</p>\n<p>Optionally, a component can be mounted onto a DOM element that does not match the\n[componentType]'s selector.</p>\n<h3 id=\"example\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#example\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({selector: 'my-app', template: 'Hello World'})\nclass MyApp {\n}\n\nconst myPlatformFactory = <a href=\"api/core/createPlatformFactory\" class=\"code-anchor\">createPlatformFactory</a>(<a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a>, 'myPlatform');\nmyPlatformFactory().bootstrapModule(MyApp);\n\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"tick\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>(): void</code-example>\n  <p>Invoke this method to explicitly process change detection and its side-effects.</p>\n<p>In development mode, <code><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>()</code> also performs a second change detection cycle to ensure that no\nfurther changes are detected. If additional changes are picked up during this second cycle,\nbindings in the app have side-effects that cannot be resolved in a single change detection\npass.\nIn this case, Angular throws an error, since an Angular application can only have one change\ndetection pass during which all change detection must complete.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"attachView\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">attachView(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>): void</code-example>\n  <p>Attaches a view so that it will be dirty checked.\nThe view will be automatically detached when it is destroyed.\nThis will throw if the view is already attached to a ViewContainer.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"detachView\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">detachView(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>): void</code-example>\n  <p>Detaches a view from dirty checking again.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"viewCount\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get viewCount</code-example>\n  <p>Returns the number of attached views.</p>\n\n  </div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/core\n - api/core/ApplicationModule\n-->\n<!-- links from this doc:\n - api/core\n - api/core/ApplicationRef#applicationref\n - api/core/ApplicationRef#attachView\n - api/core/ApplicationRef#bootstrap\n - api/core/ApplicationRef#bootstrap-process\n - api/core/ApplicationRef#componentTypes\n - api/core/ApplicationRef#components\n - api/core/ApplicationRef#description\n - api/core/ApplicationRef#detachView\n - api/core/ApplicationRef#example\n - api/core/ApplicationRef#interface-overview\n - api/core/ApplicationRef#isStable\n - api/core/ApplicationRef#members\n - api/core/ApplicationRef#tick\n - api/core/ApplicationRef#viewCount\n - api/core/Component\n - api/core/ComponentFactory\n - api/core/ComponentRef\n - api/core/Type\n - api/core/ViewRef\n - api/core/createPlatformFactory\n - api/core/testing/tick\n - api/platform-browser-dynamic/platformBrowserDynamic\n - https://github.com/angular/angular/tree/5.2.11/packages/core/src/application_ref.ts#L361-L579\n - https://www.npmjs.com/package/@angular/core\n-->"
}