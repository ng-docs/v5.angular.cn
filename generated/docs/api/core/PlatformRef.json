{
  "id" : "api/core/PlatformRef",
  "title" : "PlatformRef",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"platformref\">PlatformRef</h1>\n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/core/PlatformRef\" class=\"code-anchor\">PlatformRef</a> } from <a href=\"api/core\">'@angular/core'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/core/src/application_ref.ts#L178-L319\">core/src/application_ref.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"interface-overview\">\n<h2 id=\"interface-overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"15ffnfvjx5orhxzfayretyfy4\"><i class=\"material-icons\">link</i>接口概览</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/core/PlatformRef\" class=\"code-anchor\">PlatformRef</a> { \n  <a class=\"code-anchor\" href=\"api/core/PlatformRef#bootstrapModuleFactory\">bootstrapModuleFactory&lt;M&gt;(moduleFactory: NgModuleFactory&lt;M&gt;, options?: BootstrapOptions): Promise&lt;NgModuleRef&lt;M&gt;&gt;</a>\n  <a class=\"code-anchor\" href=\"api/core/PlatformRef#bootstrapModule\">bootstrapModule&lt;M&gt;(moduleType: Type&lt;M&gt;, compilerOptions: (CompilerOptions &amp; BootstrapOptions) | Array&lt;CompilerOptions &amp; BootstrapOptions&gt; = []): Promise&lt;NgModuleRef&lt;M&gt;&gt;</a>\n  <a class=\"code-anchor\" href=\"api/core/PlatformRef#onDestroy\">onDestroy(callback: () =&gt; void): void</a>\n  <a class=\"code-anchor\" href=\"api/core/PlatformRef#injector\">get injector: Injector</a>\n  <a class=\"code-anchor\" href=\"api/core/PlatformRef#destroy\">destroy()</a>\n  <a class=\"code-anchor\" href=\"api/core/PlatformRef#destroyed\">get destroyed</a>\n}\n</code-example>\n</section>\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ar5q09mdsagdppsbze96eagxl\"><i class=\"material-icons\">link</i>说明</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3fw1z5uuuo6l7aen0nevvgdf4\">Angular 平台是 Angular 在网页上的入口点。每个页面只有一个平台，并且服务（例如反射）在该平台的范围内绑定，这些服务对于在该页面上运行的每个 Angular 应用都是通用的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cg2jl7iipx08cbg1wo977035i\">当通过平台工厂（例如 \n<a href=\"api/platform-browser/platformBrowser\"><code>platformBrowser</code></a>）创建平台，或通过调用 \n<a href=\"api/core/createPlatform\"><code>createPlatform</code></a> 函数显式创建平台时，页面的平台会隐式初始化。</p>\n\n</section>\n\n  \n  \n  \n\n  \n  \n  \n\n  \n\n<section class=\"instance-members\">\n  <h2 id=\"members\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e62kgm2ztk7rgk6auybfiv91o\"><i class=\"material-icons\">link</i>成员</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"bootstrapModuleFactory\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">bootstrapModuleFactory&lt;M&gt;(moduleFactory: <a href=\"api/core/NgModuleFactory\" class=\"code-anchor\">NgModuleFactory</a>&lt;M&gt;, options?: BootstrapOptions): Promise&lt;<a href=\"api/core/NgModuleRef\" class=\"code-anchor\">NgModuleRef</a>&lt;M&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8elignclu57s03tvu2qug2sh0\">为给定平台创建 \n<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的实例，用于离线编译。</p>\n<h2 id=\"simple-example\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"e0ehtrqzapj0lv5nn6iutlmhe\"><i class=\"material-icons\">link</i>简单的例子</h2>\n<code-example language=\"typescript\">\nmy_module.ts:\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [<a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>]\n})\nclass MyModule {}\n\nmain.ts:\nimport {MyModuleNgFactory} from './my_module.ngfactory';\nimport {<a href=\"api/platform-browser/platformBrowser\" class=\"code-anchor\">platformBrowser</a>} from '@angular/platform-browser';\n\nlet moduleRef = <a href=\"api/platform-browser/platformBrowser\" class=\"code-anchor\">platformBrowser</a>().bootstrapModuleFactory(MyModuleNgFactory);\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"bootstrapModule\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">bootstrapModule&lt;M&gt;(moduleType: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;M&gt;, compilerOptions: (<a href=\"api/core/CompilerOptions\" class=\"code-anchor\">CompilerOptions</a> &amp; BootstrapOptions) | Array&lt;<a href=\"api/core/CompilerOptions\" class=\"code-anchor\">CompilerOptions</a> &amp; BootstrapOptions&gt; = []): Promise&lt;<a href=\"api/core/NgModuleRef\" class=\"code-anchor\">NgModuleRef</a>&lt;M&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bn927szf4tja6sutonlhak5s4\">使用给定的运行时编译器为给定平台创建 \n<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的实例。</p>\n<h2 id=\"simple-example-1\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"e0ehtrqzapj0lv5nn6iutlmhe\"><i class=\"material-icons\">link</i>简单的例子</h2>\n<code-example language=\"typescript\">\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [<a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>]\n})\nclass MyModule {}\n\nlet moduleRef = <a href=\"api/platform-browser/platformBrowser\" class=\"code-anchor\">platformBrowser</a>().bootstrapModule(MyModule);\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"onDestroy\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">onDestroy(callback: () =&gt; void): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c3rw4idz26vl28snah1we858p\">注册一个监听器，在平台被销毁时调用。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"injector\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get injector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"904x259o9q2ilqnfk7btieuoa\">检索平台 \n<a href=\"api/core/Injector\"><code>Injector</code></a>，它是页面上每个 Angular 应用的父注入器，并提供单例提供者。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"destroy\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">destroy()</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2fsuslurt4puxoc1jznkyotzk\">销毁 Angular 平台和页面上的所有 Angular 应用。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"destroyed\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get destroyed</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/core\n - api/core/assertPlatform\n - api/core/createPlatform\n - api/core/createPlatformFactory\n - api/core/getPlatform\n - api/core/testing/TestBed\n - api/platform-webworker/bootstrapWorkerUi\n - guide/testing\n-->\n<!-- links from this doc:\n - api/core\n - api/core/CompilerOptions\n - api/core/Injector\n - api/core/NgModule\n - api/core/NgModuleFactory\n - api/core/NgModuleRef\n - api/core/PlatformRef#bootstrapModule\n - api/core/PlatformRef#bootstrapModuleFactory\n - api/core/PlatformRef#description\n - api/core/PlatformRef#destroy\n - api/core/PlatformRef#destroyed\n - api/core/PlatformRef#injector\n - api/core/PlatformRef#interface-overview\n - api/core/PlatformRef#members\n - api/core/PlatformRef#onDestroy\n - api/core/PlatformRef#platformref\n - api/core/PlatformRef#simple-example\n - api/core/PlatformRef#simple-example-1\n - api/core/Type\n - api/core/createPlatform\n - api/platform-browser/BrowserModule\n - api/platform-browser/platformBrowser\n - https://github.com/angular/angular/tree/5.2.11/packages/core/src/application_ref.ts#L178-L319\n - https://www.npmjs.com/package/@angular/core\n-->"
}