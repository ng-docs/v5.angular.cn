{
  "id": "api/core/Injector",
  "title": "Injector",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"injector\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#injector\"><i class=\"material-icons\">link</i></a>Injector</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a> } from <a href=\"api/core\">'@angular/core'</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/core/src/di/injector.ts#L28-L90\">core/src/di/injector.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p>Injector interface</p>\n\n</div>\n\n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a> {\n  <a class=\"code-anchor\" href=\"api/core/Injector#THROW_IF_NOT_FOUND\">static THROW_IF_NOT_FOUND: _THROW_IF_NOT_FOUND</a>\n  <a class=\"code-anchor\" href=\"api/core/Injector#NULL\">static NULL: Injector</a>\n  <a class=\"code-anchor\" href=\"api/core/Injector#create\">static create(options: StaticProvider[] | {...}, parent?: Injector): Injector</a>\n  <a class=\"code-anchor\" href=\"api/core/Injector#get\">get&#x3C;T>(token: Type&#x3C;T> | InjectionToken&#x3C;T>, notFoundValue?: T): T</a>\n}\n</code-example>\n</section>\n\n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#how-to-use\"><i class=\"material-icons\">link</i></a>How To Use</h2>\n  <code-example>\nconst injector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a> = ...;\ninjector.get(...);\n</code-example>\n\n</section>\n\n\n  \n\n\n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p>For more details, see the <a href=\"guide/dependency-injection\">\"Dependency Injection Guide\"</a>.</p>\n<h3 id=\"example\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#example\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\nconst injector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a> =\n    ReflectiveInjector.resolveAndCreate([{provide: 'validToken', useValue: 'Value'}]);\nexpect(injector.get('validToken')).toEqual('Value');\nexpect(() => injector.get('invalidToken')).toThrowError();\nexpect(injector.get('invalidToken', 'notFound')).toEqual('notFound');\n\n</code-example>\n<p><code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> returns itself when given <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> as a token:\n<code-example>\nconst injector = ReflectiveInjector.resolveAndCreate([]);\nexpect(injector.get(<a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>)).toBe(injector);\n\n</code-example></p>\n\n</section>\n\n\n  \n  \n  <h2 id=\"subclasses\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#subclasses\"><i class=\"material-icons\">link</i></a>Subclasses</h2>\n  <ul class=\"descendants class\">\n  \n    <li>\n      <pre class=\"prettyprint lang-ts\"><code><a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a></code></pre>\n      \n  \n  \n\n    </li>\n  \n    <li>\n      <pre class=\"prettyprint lang-ts\"><code><a href=\"api/core/testing/TestBed\" class=\"code-anchor\">TestBed</a></code></pre>\n      \n  \n  \n\n    </li>\n  \n  </ul>\n  \n\n\n\n<section class=\"static-members\">\n  <h2 id=\"static-members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#static-members\"><i class=\"material-icons\">link</i></a>Static Members</h2>\n  \n    <div class=\"static-member\">\n  <a id=\"THROW_IF_NOT_FOUND\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> THROW_IF_NOT_FOUND: _THROW_IF_NOT_FOUND</code-example>\n  \n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"static-member\">\n  <a id=\"NULL\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> NULL: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code-example>\n  \n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"static-member\">\n  <a id=\"create\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> create(options: <a href=\"api/core/StaticProvider\" class=\"code-anchor\">StaticProvider</a>[] | {\n    providers: <a href=\"api/core/StaticProvider\" class=\"code-anchor\">StaticProvider</a>[];\n    parent?: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>;\n    name?: string;\n}, parent?: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>): <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code-example>\n  <p>Create a new Injector which is configure using <code><a href=\"api/core/StaticProvider\" class=\"code-anchor\">StaticProvider</a></code>s.</p>\n<h3 id=\"example-1\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#example-1\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\nclass Square {\n  name = 'square';\n}\n\nconst injector = Injector.create({providers: [{provide: Square, deps: []}]});\n\nconst shape: Square = injector.get(Square);\nexpect(shape.name).toEqual('square');\nexpect(shape instanceof Square).toBe(true);\n\n</code-example>\n\n  </div>\n\n    \n    <details class=\"overloads\">\n      <summary>Overloads</summary>\n      <div class=\"detail-contents\">\n        \n        <div class=\"static-member-overload\">\n  <a id=\"create()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> create(providers: <a href=\"api/core/StaticProvider\" class=\"code-anchor\">StaticProvider</a>[], parent?: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>): <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code-example>\n  \n  </div>\n\n        <hr>\n        \n        <div class=\"static-member-overload\">\n  <a id=\"create_1()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> create(options: {\n    providers: <a href=\"api/core/StaticProvider\" class=\"code-anchor\">StaticProvider</a>[];\n    parent?: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>;\n    name?: string;\n}): <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code-example>\n  \n  </div>\n\n        \n        \n      </div>\n    </details>\n    \n    \n  \n</section>\n\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"get\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get&#x3C;T>(token: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;T> | <a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a>&#x3C;T>, notFoundValue?: T): T</code-example>\n  <p>Retrieves an instance from the injector based on the provided token.\nIf not found:</p>\n<ul>\n<li>Throws an error if no <code>notFoundValue</code> that is not equal to\nInjector.THROW_IF_NOT_FOUND is given</li>\n<li>Returns the <code>notFoundValue</code> otherwise</li>\n</ul>\n\n  </div>\n\n    \n    <details class=\"overloads\">\n      <summary>Overloads</summary>\n      <div class=\"detail-contents\">\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_1()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(token: any, notFoundValue?: any): any</code-example>\n  \n  </div>\n\n        \n        \n      </div>\n    </details>\n    \n    \n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/common/NgComponentOutlet\n - api/core\n - api/core/APP_ID\n - api/core/ClassProvider\n - api/core/ComponentFactory\n - api/core/ComponentRef\n - api/core/DebugNode\n - api/core/ExistingProvider\n - api/core/FactoryProvider\n - api/core/Inject\n - api/core/InjectDecorator\n - api/core/Injectable\n - api/core/InjectableDecorator\n - api/core/NgModuleFactory\n - api/core/NgModuleRef\n - api/core/Optional\n - api/core/PlatformRef\n - api/core/Provider\n - api/core/ReflectiveInjector\n - api/core/ResolvedReflectiveProvider\n - api/core/Self\n - api/core/StaticProvider\n - api/core/TypeProvider\n - api/core/ValueProvider\n - api/core/ViewContainerRef\n - api/core/createPlatform\n - api/core/testing/TestBed\n - api/forms/RadioControlValueAccessor\n - api/http/BaseRequestOptions\n - api/http/BaseResponseOptions\n - api/http/Request\n - api/http/testing/MockBackend\n - api/router/Router\n - api/router/RouterPreloader\n - api/router/testing/RouterTestingModule\n - api/router/testing/setupTestingRouter\n - api/upgrade/UpgradeAdapterRef\n - api/upgrade/static/UpgradeComponent\n - api/upgrade/static/UpgradeModule\n - guide/dependency-injection\n - guide/glossary\n - guide/router\n - guide/upgrade\n-->\n<!-- links from this doc:\n - api/core\n - api/core/InjectionToken\n - api/core/Injector#NULL\n - api/core/Injector#THROW_IF_NOT_FOUND\n - api/core/Injector#create\n - api/core/Injector#description\n - api/core/Injector#example\n - api/core/Injector#example-1\n - api/core/Injector#get\n - api/core/Injector#how-to-use\n - api/core/Injector#injector\n - api/core/Injector#members\n - api/core/Injector#overview\n - api/core/Injector#static-members\n - api/core/Injector#subclasses\n - api/core/ReflectiveInjector\n - api/core/StaticProvider\n - api/core/Type\n - api/core/testing/TestBed\n - api/upgrade/static\n - guide/dependency-injection\n - https://github.com/angular/angular/tree/5.2.11/packages/core/src/di/injector.ts#L28-L90\n - https://www.npmjs.com/package/@angular/core\n-->"
}