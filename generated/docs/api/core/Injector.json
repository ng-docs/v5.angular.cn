{
  "id" : "api/core/Injector",
  "title" : "注入器",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"injector\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"fb5vyru4fe5pzxandbpk8dir\"><i class=\"material-icons\">link</i>注入器</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a> } from <a href=\"api/core\">'@angular/core'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/core/src/di/injector.ts#L28-L90\">core/src/di/injector.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"duwwnws0qlsyemlvr3b2l4fwn\">注入器接口</p>\n\n</div>\n\n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ivgu86loww6mg4fq1brezlnd\"><i class=\"material-icons\">link</i>概览</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a> {\n  <a class=\"code-anchor\" href=\"api/core/Injector#THROW_IF_NOT_FOUND\">static THROW_IF_NOT_FOUND: _THROW_IF_NOT_FOUND</a>\n  <a class=\"code-anchor\" href=\"api/core/Injector#NULL\">static NULL: Injector</a>\n  <a class=\"code-anchor\" href=\"api/core/Injector#create\">static create(options: StaticProvider[] | {...}, parent?: Injector): Injector</a>\n  <a class=\"code-anchor\" href=\"api/core/Injector#get\">get&lt;T&gt;(token: Type&lt;T&gt; | InjectionToken&lt;T&gt;, notFoundValue?: T): T</a>\n}\n</code-example>\n</section>\n\n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cflu95twzi71qd095ghj9h0y7\"><i class=\"material-icons\">link</i>使用方法</h2>\n  <code-example>\nconst injector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a> = ...;\ninjector.get(...);\n</code-example>\n\n</section>\n\n\n  \n\n\n<section class=\"description\">\n  <h2 id=\"description\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ar5q09mdsagdppsbze96eagxl\"><i class=\"material-icons\">link</i>说明</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4grakl5pmvnvlfpjq2d6me1du\">有关更多详细信息，请参见 \n<a href=\"guide/dependency-injection\">\"依赖项注入指南\"</a>。</p>\n<h3 id=\"example\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\"><i class=\"material-icons\">link</i>范例</h3>\n<code-example>\nconst injector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a> =\n    ReflectiveInjector.resolveAndCreate([{provide: 'validToken', useValue: 'Value'}]);\nexpect(injector.get('validToken')).toEqual('Value');\nexpect(() =&gt; injector.get('invalidToken')).toThrowError();\nexpect(injector.get('invalidToken', 'notFound')).toEqual('notFound');\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"az7ntqeqee5uhod75qskx5zo6\"><code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 在给定 \n<code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 作为令牌时返回自身： \n<code-example>\n  const injector = ReflectiveInjector.resolveAndCreate([]); expect(injector.get(\n <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>)).toBe(injector); \n</code-example></p>\n\n</section>\n\n\n  \n  \n  <h2 id=\"subclasses\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2it4mtkmwb3l20bsr7l1ok8c8\"><i class=\"material-icons\">link</i>子类</h2>\n  <ul class=\"descendants class\">\n  \n    <li>\n      <pre class=\"prettyprint lang-ts\"><code><a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a></code></pre>\n      \n  \n  \n\n    </li>\n  \n    <li>\n      <pre class=\"prettyprint lang-ts\"><code><a href=\"api/core/testing/TestBed\" class=\"code-anchor\">TestBed</a></code></pre>\n      \n  \n  \n\n    </li>\n  \n  </ul>\n  \n\n\n\n<section class=\"static-members\">\n  <h2 id=\"static-members\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ixh78z2dfifcy2khe8k014ge\"><i class=\"material-icons\">link</i>静态成员</h2>\n  \n    <div class=\"static-member\">\n  <a id=\"THROW_IF_NOT_FOUND\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> THROW_IF_NOT_FOUND: _THROW_IF_NOT_FOUND</code-example>\n  \n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"static-member\">\n  <a id=\"NULL\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> NULL: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code-example>\n  \n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"static-member\">\n  <a id=\"create\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> create(options: <a href=\"api/core/StaticProvider\" class=\"code-anchor\">StaticProvider</a>[] | {\n    providers: <a href=\"api/core/StaticProvider\" class=\"code-anchor\">StaticProvider</a>[];\n    parent?: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>;\n    name?: string;\n}, parent?: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>): <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a01kfwivo545kibdp16y7zvhs\">创建一个新的注入器，使用 \n<code><a href=\"api/core/StaticProvider\" class=\"code-anchor\">StaticProvider</a></code> 进行配置。</p>\n<h3 id=\"example-1\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\"><i class=\"material-icons\">link</i>范例</h3>\n<code-example>\nclass Square {\n  name = 'square';\n}\n\nconst injector = Injector.create({providers: [{provide: Square, deps: []}]});\n\nconst shape: Square = injector.get(Square);\nexpect(shape.name).toEqual('square');\nexpect(shape instanceof Square).toBe(true);\n\n</code-example>\n\n  </div>\n\n    \n    <details class=\"overloads\">\n      <summary>Overloads</summary>\n      <div class=\"detail-contents\">\n        \n        <div class=\"static-member-overload\">\n  <a id=\"create()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> create(providers: <a href=\"api/core/StaticProvider\" class=\"code-anchor\">StaticProvider</a>[], parent?: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>): <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code-example>\n  \n  </div>\n\n        <hr>\n        \n        <div class=\"static-member-overload\">\n  <a id=\"create_1()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> create(options: {\n    providers: <a href=\"api/core/StaticProvider\" class=\"code-anchor\">StaticProvider</a>[];\n    parent?: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>;\n    name?: string;\n}): <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code-example>\n  \n  </div>\n\n        \n        \n      </div>\n    </details>\n    \n    \n  \n</section>\n\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e62kgm2ztk7rgk6auybfiv91o\"><i class=\"material-icons\">link</i>成员</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"get\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get&lt;T&gt;(token: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;T&gt; | <a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a>&lt;T&gt;, notFoundValue?: T): T</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6o2zq8q4uu4ljkuwj9jlktmxy\">根据提供的令牌从注入器中检索实例。 如果未找到：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1bfuey4iuh2m5ybv36126vvzf\">如果未提供不等于 \n<code>Injector.THROW_IF_NOT_FOUND</code> 的 \n<code>notFoundValue</code>，则抛出错误</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aay0uqcao2ac7ob7jkbxn9rnl\">否则返回 \n<code>notFoundValue</code></li>\n</ul>\n\n  </div>\n\n    \n    <details class=\"overloads\">\n      <summary>Overloads</summary>\n      <div class=\"detail-contents\">\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_1()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(token: any, notFoundValue?: any): any</code-example>\n  \n  </div>\n\n        \n        \n      </div>\n    </details>\n    \n    \n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/common/NgComponentOutlet\n - api/core\n - api/core/APP_ID\n - api/core/ClassProvider\n - api/core/ComponentFactory\n - api/core/ComponentRef\n - api/core/DebugNode\n - api/core/ExistingProvider\n - api/core/FactoryProvider\n - api/core/Inject\n - api/core/InjectDecorator\n - api/core/Injectable\n - api/core/InjectableDecorator\n - api/core/NgModuleFactory\n - api/core/NgModuleRef\n - api/core/Optional\n - api/core/PlatformRef\n - api/core/Provider\n - api/core/ReflectiveInjector\n - api/core/ResolvedReflectiveProvider\n - api/core/Self\n - api/core/StaticProvider\n - api/core/TypeProvider\n - api/core/ValueProvider\n - api/core/ViewContainerRef\n - api/core/createPlatform\n - api/core/testing/TestBed\n - api/forms/RadioControlValueAccessor\n - api/http/BaseRequestOptions\n - api/http/BaseResponseOptions\n - api/http/Request\n - api/http/testing/MockBackend\n - api/router/Router\n - api/router/RouterPreloader\n - api/router/testing/RouterTestingModule\n - api/router/testing/setupTestingRouter\n - api/upgrade/UpgradeAdapterRef\n - api/upgrade/static/UpgradeComponent\n - api/upgrade/static/UpgradeModule\n - guide/dependency-injection\n - guide/glossary\n - guide/router\n - guide/upgrade\n-->\n<!-- links from this doc:\n - api/core\n - api/core/InjectionToken\n - api/core/Injector#NULL\n - api/core/Injector#THROW_IF_NOT_FOUND\n - api/core/Injector#create\n - api/core/Injector#description\n - api/core/Injector#example\n - api/core/Injector#example-1\n - api/core/Injector#get\n - api/core/Injector#how-to-use\n - api/core/Injector#injector\n - api/core/Injector#members\n - api/core/Injector#overview\n - api/core/Injector#static-members\n - api/core/Injector#subclasses\n - api/core/ReflectiveInjector\n - api/core/StaticProvider\n - api/core/Type\n - api/core/testing/TestBed\n - api/upgrade/static\n - guide/dependency-injection\n - https://github.com/angular/angular/tree/5.2.11/packages/core/src/di/injector.ts#L28-L90\n - https://www.npmjs.com/package/@angular/core\n-->"
}