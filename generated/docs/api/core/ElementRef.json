{
  "id" : "api/core/ElementRef",
  "title" : "ElementRef",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"elementref\">ElementRef</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a> } from <a href=\"api/core\">'@angular/core'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/core/src/linker/element_ref.ts#L1-L49\">core/src/linker/element_ref.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n<section &#x22;security&#x22;=\"\">\n  <h2 id=\"security-risk\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7krfnqmhr5xnkj124ob1bid2\"><i class=\"material-icons\">link</i>安全风险</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5l3h63ljjd809dn7r3y1boweq\">允许直接访问 DOM 会使你的应用更容易受到 XSS 攻击。仔细检查代码中任何使用 \n<code><a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code> 的地方。有关更多详细信息，请参阅 \n<a href=\"http://g.co/ng/security\">安全指南</a>。</p>\n\n</section>\n\n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ivgu86loww6mg4fq1brezlnd\"><i class=\"material-icons\">link</i>概览</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a> {\n  <a class=\"code-anchor\" href=\"api/core/ElementRef#constructor()\">constructor(nativeElement: any)</a>\n  <a class=\"code-anchor\" href=\"api/core/ElementRef#nativeElement\">nativeElement: any</a>\n}\n</code-example>\n</section>\n\n  \n\n  \n\n\n\n  \n  \n\n\n\n\n\n\n<section class=\"constructors\">\n  <h2 id=\"constructor\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"64p310lbzdqiret0qyhhannvq\"><i class=\"material-icons\">link</i>构造函数</h2>\n  \n    <div class=\"constructor\">\n  <a id=\"constructor()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">constructor(nativeElement: any)</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e62kgm2ztk7rgk6auybfiv91o\"><i class=\"material-icons\">link</i>成员</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"nativeElement\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">nativeElement: any</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"etsb5wjksydldxdlk6djth5z5\">底层原生元素，如果不支持直接访问原生元素（例如，当应用在 Web Worker 中运行时），则为 \n<code>null</code>。</p>\n<div class=\"callout is-critical\">\n  <header data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8yq0xa44fx2xysx2fhqhl0y9\">谨慎使用</header>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6w20rpxml037y8jgbnceo90w8\">仅在需要直接访问 DOM 时才使用此 API。使用 Angular 提供的模板和数据绑定。或者，你可以查看 \n<a href=\"api/core/Renderer2\"><code>Renderer2</code></a>，它提供了即使在不支持直接访问原生元素的情况下也能安全使用的 API。</p>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6yd3o5l1cylqrbwh4jdkk9b4n\">依赖直接 DOM 访问会创建应用和渲染层之间的紧密耦合，这将使分离两者并将其部署到 Web Worker 变得不可能。</p>\n</div>\n\n  </div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/common/NgClass\n - api/common/NgStyle\n - api/core\n - api/core/ComponentRef\n - api/core/TemplateRef\n - api/core/ViewContainerRef\n - api/core/testing/ComponentFixture\n - api/forms/CheckboxControlValueAccessor\n - api/forms/DefaultValueAccessor\n - api/forms/NgSelectOption\n - api/forms/RadioControlValueAccessor\n - api/forms/SelectControlValueAccessor\n - api/forms/SelectMultipleControlValueAccessor\n - api/router/RouterLink\n - api/router/RouterLinkActive\n - api/upgrade/static/UpgradeComponent\n - guide/attribute-directives\n - guide/dependency-injection-in-action\n - guide/security\n - guide/styleguide\n - guide/testing\n - guide/upgrade\n-->\n<!-- links from this doc:\n - api/core\n - api/core/ElementRef#constructor\n - api/core/ElementRef#constructor()\n - api/core/ElementRef#elementref\n - api/core/ElementRef#members\n - api/core/ElementRef#nativeElement\n - api/core/ElementRef#overview\n - api/core/ElementRef#security-risk\n - api/core/Renderer2\n - http://g.co/ng/security\n - https://github.com/angular/angular/tree/5.2.11/packages/core/src/linker/element_ref.ts#L1-L49\n - https://www.npmjs.com/package/@angular/core\n-->"
}