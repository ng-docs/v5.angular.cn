{
  "id" : "api/core/ClassProvider",
  "title" : "ClassProvider",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"classprovider\">ClassProvider</h1>\n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/core/ClassProvider\" class=\"code-anchor\">ClassProvider</a> } from <a href=\"api/core\">'@angular/core'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/core/src/di/provider.ts#L272-L315\">core/src/di/provider.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"48k7sqietj5s387jxk61h0mto\">配置 \n<a href=\"api/core/Injector\"><code>Injector</code></a> 以返回 \n<code>useClass</code> 的实例，用于某个令牌。</p>\n\n</div>\n\n  \n  \n  <section class=\"interface-overview\">\n<h2 id=\"interface-overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"15ffnfvjx5orhxzfayretyfy4\"><i class=\"material-icons\">link</i>接口概览</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/core/ClassProvider\" class=\"code-anchor\">ClassProvider</a> { \n  <a class=\"code-anchor\" href=\"api/core/ClassProvider#provide\">provide: any</a>\n  <a class=\"code-anchor\" href=\"api/core/ClassProvider#useClass\">useClass: Type&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/core/ClassProvider#multi\">multi?: boolean</a>\n}\n</code-example>\n</section>\n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cflu95twzi71qd095ghj9h0y7\"><i class=\"material-icons\">link</i>使用方法</h2>\n  <code-example>\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass MyService {}\n\nconst provider: <a href=\"api/core/ClassProvider\" class=\"code-anchor\">ClassProvider</a> = {provide: 'someToken', useClass: MyService};\n</code-example>\n\n</section>\n\n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ar5q09mdsagdppsbze96eagxl\"><i class=\"material-icons\">link</i>说明</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4grakl5pmvnvlfpjq2d6me1du\">有关更多详细信息，请参见 \n<a href=\"guide/dependency-injection\">\"依赖项注入指南\"</a>。</p>\n<h3 id=\"example\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\"><i class=\"material-icons\">link</i>范例</h3>\n<code-example>\nabstract class Shape { name: string; }\n\nclass Square extends Shape {\n  name = 'square';\n}\n\nconst injector = ReflectiveInjector.resolveAndCreate([{provide: Shape, useClass: Square}]);\n\nconst shape: Shape = injector.get(Shape);\nexpect(shape.name).toEqual('square');\nexpect(shape instanceof Square).toBe(true);\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"19fq7909jihnsmogm4uzsdk3r\">请注意，以下两个提供者并不相等： \n<code-example>\n  class Greeting { salutation = 'Hello'; } class FormalGreeting extends Greeting { salutation = 'Greetings'; } const injector = ReflectiveInjector.resolveAndCreate( [FormalGreeting, {provide: Greeting, useClass: FormalGreeting}]); // 该注入器返回不同的实例。 // 请参阅：{provide: ?, useExisting: ?}，如果你想要相同的实例。 expect(injector.get(FormalGreeting)).not.toBe(injector.get(Greeting)); \n</code-example></p>\n\n</section>\n\n  \n  \n  \n\n  \n  \n  \n\n  \n\n<section class=\"instance-members\">\n  <h2 id=\"members\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e62kgm2ztk7rgk6auybfiv91o\"><i class=\"material-icons\">link</i>成员</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"provide\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">provide: any</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"23edofayd0on2cvfw4zotl224\">一个注入令牌。（通常是 \n<code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a></code> 或 \n<code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code> 的实例，但可以是 \n<code>any</code>）。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"useClass\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">useClass: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"aalnftna8q2m2sd5794tfih8i\">用于将此 <code>token</code> 实例化的类。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"multi\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">multi?: boolean</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"33q9dpik5eu4vq0rorzpah8u7\">如果为 true，则注入器返回实例数组。这对于允许跨多个文件分布的多个提供者向通用令牌提供配置信息很有用。</p>\n<h3 id=\"example-1\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\"><i class=\"material-icons\">link</i>范例</h3>\n<code-example>\nconst locale = new <a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a>&lt;string[]&gt;('locale');\nconst injector = Injector.create([\n  {provide: locale, multi: true, useValue: 'en'},\n  {provide: locale, multi: true, useValue: 'sk'},\n]);\n\nconst locales: string[] = injector.get(locale);\nexpect(locales).toEqual(['en', 'sk']);\n\n</code-example>\n\n  </div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/core\n - api/core/Provider\n-->\n<!-- links from this doc:\n - api/core\n - api/core/ClassProvider#classprovider\n - api/core/ClassProvider#description\n - api/core/ClassProvider#example\n - api/core/ClassProvider#example-1\n - api/core/ClassProvider#how-to-use\n - api/core/ClassProvider#interface-overview\n - api/core/ClassProvider#members\n - api/core/ClassProvider#multi\n - api/core/ClassProvider#provide\n - api/core/ClassProvider#useClass\n - api/core/Injectable\n - api/core/InjectionToken\n - api/core/Injector\n - api/core/Type\n - guide/dependency-injection\n - https://github.com/angular/angular/tree/5.2.11/packages/core/src/di/provider.ts#L272-L315\n - https://www.npmjs.com/package/@angular/core\n-->"
}