{
  "id": "api/core/ChangeDetectorRef",
  "title": "ChangeDetectorRef",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"changedetectorref\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#changedetectorref\"><i class=\"material-icons\">link</i></a>ChangeDetectorRef</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a> } from <a href=\"api/core\">'@angular/core'</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/core/src/change_detection/change_detector_ref.ts#L1-L192\">core/src/change_detection/change_detector_ref.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a> {\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#markForCheck\">markForCheck(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#detach\">detach(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#detectChanges\">detectChanges(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#checkNoChanges\">checkNoChanges(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#reattach\">reattach(): void</a>\n}\n</code-example>\n</section>\n\n  \n\n  \n\n\n\n  \n  \n  <h2 id=\"subclasses\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#subclasses\"><i class=\"material-icons\">link</i></a>Subclasses</h2>\n  <ul class=\"descendants class\">\n  \n    <li>\n      <pre class=\"prettyprint lang-ts\"><code><a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a></code></pre>\n      \n  \n  \n  \n  <ul>\n  \n    <li>\n      <pre class=\"prettyprint lang-ts\"><code><a href=\"api/core/EmbeddedViewRef\" class=\"code-anchor\">EmbeddedViewRef</a></code></pre>\n      \n  \n  \n\n    </li>\n  \n  </ul>\n  \n\n    </li>\n  \n  </ul>\n  \n\n\n\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"markForCheck\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">markForCheck(): void</code-example>\n  <p>Marks all <a href=\"api/core/ChangeDetectionStrategy#OnPush\">OnPush</a> ancestors as to be checked.</p>\n<!-- TODO: Add a link to a chapter on OnPush components -->\n<h3 id=\"example-live-demo\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#example-live-demo\"><i class=\"material-icons\">link</i></a>Example (<a href=\"http://plnkr.co/edit/GC512b?p=preview\">live demo</a>)</h3>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'cmp',\n  changeDetection: <a href=\"api/core/ChangeDetectionStrategy#OnPush\" class=\"code-anchor\">ChangeDetectionStrategy.OnPush</a>,\n  template: `Number of ticks: {{numberOfTicks}}`\n})\nclass Cmp {\n  numberOfTicks = 0;\n\n  constructor(private ref: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>) {\n    setInterval(() => {\n      this.numberOfTicks++;\n      // the following is required, otherwise the view will not be updated\n      this.ref.markForCheck();\n    }, 1000);\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app',\n  changeDetection: <a href=\"api/core/ChangeDetectionStrategy#OnPush\" class=\"code-anchor\">ChangeDetectionStrategy.OnPush</a>,\n  template: `\n    &#x3C;cmp>&#x3C;cmp>\n  `,\n})\nclass App {\n}\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"detach\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">detach(): void</code-example>\n  <p>Detaches the change detector from the change detector tree.</p>\n<p>The detached change detector will not be checked until it is reattached.</p>\n<p>This can also be used in combination with <a href=\"api/core/ChangeDetectorRef#detectChanges\">detectChanges</a>\nto implement local change detection checks.</p>\n<!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n<!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n<h3 id=\"example\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#example\"><i class=\"material-icons\">link</i></a>Example</h3>\n<p>The following example defines a component with a large list of readonly data.\nImagine the data changes constantly, many times per second. For performance reasons,\nwe want to check and update the list every five seconds. We can do that by detaching\nthe component's change detector and doing a local check every five seconds.</p>\n<code-example language=\"typescript\">\nclass DataProvider {\n  // in <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> real application the returned data will be different every time\n  get data() {\n    return [1,2,3,4,5];\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'giant-list',\n  template: `\n    &#x3C;li *<a href=\"api/common/NgForOf\" class=\"code-anchor\">ngFor</a>=\"let d of dataProvider.data\"><a href=\"api/router/Data\" class=\"code-anchor\">Data</a> {{d}}&#x3C;/li>\n  `,\n})\nclass GiantList {\n  constructor(private ref: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>, private dataProvider: DataProvider) {\n    ref.detach();\n    setInterval(() => {\n      this.ref.detectChanges();\n    }, 5000);\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app',\n  providers: [DataProvider],\n  template: `\n    &#x3C;giant-list>&#x3C;giant-list>\n  `,\n})\nclass App {\n}\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"detectChanges\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">detectChanges(): void</code-example>\n  <p>Checks the change detector and its children.</p>\n<p>This can also be used in combination with <a href=\"api/core/ChangeDetectorRef#detach\">detach</a> to implement\nlocal change detection checks.</p>\n<!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n<!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n<h3 id=\"example-1\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#example-1\"><i class=\"material-icons\">link</i></a>Example</h3>\n<p>The following example defines a component with a large list of readonly data.\nImagine, the data changes constantly, many times per second. For performance reasons,\nwe want to check and update the list every five seconds.</p>\n<p>We can do that by detaching the component's change detector and doing a local change detection\ncheck\nevery five seconds.</p>\n<p>See <a href=\"api/core/ChangeDetectorRef#detach\">detach</a> for more information.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"checkNoChanges\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">checkNoChanges(): void</code-example>\n  <p>Checks the change detector and its children, and throws if any changes are detected.</p>\n<p>This is used in development mode to verify that running change detection doesn't introduce\nother changes.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"reattach\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">reattach(): void</code-example>\n  <p>Reattach the change detector to the change detector tree.</p>\n<p>This also marks OnPush ancestors as to be checked. This reattached change detector will be\nchecked during the next change detection run.</p>\n<!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n<h3 id=\"example-live-demo-1\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#example-live-demo-1\"><i class=\"material-icons\">link</i></a>Example (<a href=\"http://plnkr.co/edit/aUhZha?p=preview\">live demo</a>)</h3>\n<p>The following example creates a component displaying <code>live</code> data. The component will detach\nits change detector from the main change detector tree when the component's live property\nis set to false.</p>\n<code-example language=\"typescript\">\nclass DataProvider {\n  data = 1;\n\n  constructor() {\n    setInterval(() => {\n      this.data = this.data * 2;\n    }, 500);\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'live-data',\n  inputs: ['live'],\n  template: '<a href=\"api/router/Data\" class=\"code-anchor\">Data</a>: {{dataProvider.data}}'\n})\nclass LiveData {\n  constructor(private ref: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>, private dataProvider: DataProvider) {}\n\n  set live(value) {\n    if (value) {\n      this.ref.reattach();\n    } else {\n      this.ref.detach();\n    }\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app',\n  providers: [DataProvider],\n  template: `\n    Live Update: &#x3C;input type=\"checkbox\" [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"live\">\n    &#x3C;live-data [live]=\"live\">&#x3C;live-data>\n  `,\n})\nclass App {\n  live = true;\n}\n</code-example>\n\n  </div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/core\n - api/core/ComponentRef\n - api/core/EmbeddedViewRef\n - api/core/ViewRef\n - api/core/testing/ComponentFixture\n - api/router/RouterLinkActive\n - api/router/RouterOutlet\n - guide/testing\n-->\n<!-- links from this doc:\n - api/common/NgForOf\n - api/core\n - api/core/ChangeDetectionStrategy#OnPush\n - api/core/ChangeDetectorRef#changedetectorref\n - api/core/ChangeDetectorRef#checkNoChanges\n - api/core/ChangeDetectorRef#detach\n - api/core/ChangeDetectorRef#detectChanges\n - api/core/ChangeDetectorRef#example\n - api/core/ChangeDetectorRef#example-1\n - api/core/ChangeDetectorRef#example-live-demo\n - api/core/ChangeDetectorRef#example-live-demo-1\n - api/core/ChangeDetectorRef#markForCheck\n - api/core/ChangeDetectorRef#members\n - api/core/ChangeDetectorRef#overview\n - api/core/ChangeDetectorRef#reattach\n - api/core/ChangeDetectorRef#subclasses\n - api/core/Component\n - api/core/EmbeddedViewRef\n - api/core/ViewRef\n - api/forms/NgModel\n - api/router/Data\n - api/router/RouterLinkWithHref\n - http://plnkr.co/edit/GC512b?p=preview\n - http://plnkr.co/edit/aUhZha?p=preview\n - https://github.com/angular/angular/tree/5.2.11/packages/core/src/change_detection/change_detector_ref.ts#L1-L192\n - https://www.npmjs.com/package/@angular/core\n-->"
}