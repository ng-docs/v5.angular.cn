{
  "id" : "api/core/ChangeDetectorRef",
  "title" : "ChangeDetectorRef",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"changedetectorref\">ChangeDetectorRef</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a> } from <a href=\"api/core\">'@angular/core'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/core/src/change_detection/change_detector_ref.ts#L1-L192\">core/src/change_detection/change_detector_ref.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ivgu86loww6mg4fq1brezlnd\"><i class=\"material-icons\">link</i>概览</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a> {\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#markForCheck\">markForCheck(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#detach\">detach(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#detectChanges\">detectChanges(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#checkNoChanges\">checkNoChanges(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#reattach\">reattach(): void</a>\n}\n</code-example>\n</section>\n\n  \n\n  \n\n\n\n  \n  \n  <h2 id=\"subclasses\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2it4mtkmwb3l20bsr7l1ok8c8\"><i class=\"material-icons\">link</i>子类</h2>\n  <ul class=\"descendants class\">\n  \n    <li>\n      <pre class=\"prettyprint lang-ts\"><code><a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a></code></pre>\n      \n  \n  \n  \n  <ul>\n  \n    <li>\n      <pre class=\"prettyprint lang-ts\"><code><a href=\"api/core/EmbeddedViewRef\" class=\"code-anchor\">EmbeddedViewRef</a></code></pre>\n      \n  \n  \n\n    </li>\n  \n  </ul>\n  \n\n    </li>\n  \n  </ul>\n  \n\n\n\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e62kgm2ztk7rgk6auybfiv91o\"><i class=\"material-icons\">link</i>成员</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"markForCheck\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">markForCheck(): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8h7hjrzgl4vxmmj2jl021i6o1\">将所有 \n<a href=\"api/core/ChangeDetectionStrategy#OnPush\">OnPush</a> 祖先标记为要检查。</p>\n<!-- TODO: Add a link to a chapter on OnPush components -->\n<h3 id=\"example-live-demo\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9kwix5z5gp9xfd5h7mprbgqjy\"><i class=\"material-icons\">link</i>示例 (\n<a href=\"http://plnkr.co/edit/GC512b?p=preview\">动态示例</a>)</h3>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'cmp',\n  changeDetection: <a href=\"api/core/ChangeDetectionStrategy#OnPush\" class=\"code-anchor\">ChangeDetectionStrategy.OnPush</a>,\n  template: `Number of ticks: {{numberOfTicks}}`\n})\nclass Cmp {\n  numberOfTicks = 0;\n\n  constructor(private ref: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>) {\n    setInterval(() =&gt; {\n      this.numberOfTicks++;\n      // the following is required, otherwise the view will not be updated\n      this.ref.markForCheck();\n    }, 1000);\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app',\n  changeDetection: <a href=\"api/core/ChangeDetectionStrategy#OnPush\" class=\"code-anchor\">ChangeDetectionStrategy.OnPush</a>,\n  template: `\n    &lt;cmp&gt;&lt;cmp&gt;\n  `,\n})\nclass App {\n}\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"detach\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">detach(): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"55ujexsx9nva1u9wihuzcrbm4\">将变更检测器从变更检测器树中分离。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4k999h5ktjvznt9zplatcdc4c\">分离的变更检测器将不会被检查，直到它被重新附加。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"k99i0zu2s008a2w0205orj10\">这也可以与 \n<a href=\"api/core/ChangeDetectorRef#detectChanges\">detectChanges</a> 结合使用以实现本地变更检测检查。</p>\n<!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n<!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n<h3 id=\"example\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\"><i class=\"material-icons\">link</i>范例</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5jdt81ynxweki9udmljccloo5\">以下示例定义了一个包含大量只读数据的组件。 假设数据每秒都会发生变化，而且变化次数很多。出于性能考虑， 我们希望每五秒检查并更新一次列表。我们可以通过分离 组件的变更检测器，并在每五秒进行本地检查来实现这一点。</p>\n<code-example language=\"typescript\">\nclass DataProvider {\n  // in <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> real application the returned data will be different every time\n  get data() {\n    return [1,2,3,4,5];\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'giant-list',\n  template: `\n    &lt;li *<a href=\"api/common/NgForOf\" class=\"code-anchor\">ngFor</a>=\"let d of dataProvider.data\"&gt;<a href=\"api/router/Data\" class=\"code-anchor\">Data</a> {{d}}&lt;/li&gt;\n  `,\n})\nclass GiantList {\n  constructor(private ref: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>, private dataProvider: DataProvider) {\n    ref.detach();\n    setInterval(() =&gt; {\n      this.ref.detectChanges();\n    }, 5000);\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app',\n  providers: [DataProvider],\n  template: `\n    &lt;giant-list&gt;&lt;giant-list&gt;\n  `,\n})\nclass App {\n}\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"detectChanges\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">detectChanges(): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6dyxflgz6is2z07pcktjm63yf\">检查变更检测器及其子元素。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1i0n0iqdjy1qbrv7jzlec9yr3\">这也可以与 \n<a href=\"api/core/ChangeDetectorRef#detach\">detach</a> 结合使用，以实现 本地变更检测检查。</p>\n<!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n<!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n<h3 id=\"example-1\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\"><i class=\"material-icons\">link</i>范例</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6afnri56kxzp5l6azmkqpl3e9\">以下示例定义了一个包含大量只读数据的组件。 假设数据每秒都会发生变化，而且变化次数很多。出于性能考虑， 我们希望每五秒检查并更新一次列表。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4yra0rpy5lip93tsdektiat11\">我们可以通过分离组件的变更检测器，并在每五秒进行本地变更检测 检查 来实现这一点。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4117jmtg50gm7bdwxgopqw8dj\">有关更多信息，请参阅 \n<a href=\"api/core/ChangeDetectorRef#detach\">detach</a>。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"checkNoChanges\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">checkNoChanges(): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"32wevngxbqanb7kg8cuxvx7y1\">检查变更检测器及其子检测器，如果检测到任何更改，则抛出异常。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqkdlkyxkw8bigp91c0b35nh4\">这在开发模式下用于验证运行变更检测不会引入 其他更改。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"reattach\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">reattach(): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d92z5dts2qcqvgcbvm70ali9c\">将变更检测器重新附加到变更检测器树。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7aeu1y8jmfjtbyia26qezplnq\">这也将 OnPush 父级标记为需要检查。此重新附加的变更检测器将在下次变更检测运行期间进行检查。</p>\n<!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n<h3 id=\"example-live-demo-1\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"77duzps7gcf0c64qdc7m61v2u\"><i class=\"material-icons\">link</i>示例 (\n<a href=\"http://plnkr.co/edit/aUhZha?p=preview\">动态示例</a>)</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"44r2uev4xt9m6x30neyyqo8kr\">以下示例创建一个显示 \n<code>live</code> 数据的组件。当组件的 live 属性 设置为 false 时，该组件会将其变更检测器从主变更检测器树中分离。</p>\n<code-example language=\"typescript\">\nclass DataProvider {\n  data = 1;\n\n  constructor() {\n    setInterval(() =&gt; {\n      this.data = this.data * 2;\n    }, 500);\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'live-data',\n  inputs: ['live'],\n  template: '<a href=\"api/router/Data\" class=\"code-anchor\">Data</a>: {{dataProvider.data}}'\n})\nclass LiveData {\n  constructor(private ref: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>, private dataProvider: DataProvider) {}\n\n  set live(value) {\n    if (value) {\n      this.ref.reattach();\n    } else {\n      this.ref.detach();\n    }\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app',\n  providers: [DataProvider],\n  template: `\n    Live Update: &lt;input type=\"checkbox\" [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"live\"&gt;\n    &lt;live-data [live]=\"live\"&gt;&lt;live-data&gt;\n  `,\n})\nclass App {\n  live = true;\n}\n</code-example>\n\n  </div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/core\n - api/core/ComponentRef\n - api/core/EmbeddedViewRef\n - api/core/ViewRef\n - api/core/testing/ComponentFixture\n - api/router/RouterLinkActive\n - api/router/RouterOutlet\n - guide/testing\n-->\n<!-- links from this doc:\n - api/common/NgForOf\n - api/core\n - api/core/ChangeDetectionStrategy#OnPush\n - api/core/ChangeDetectorRef#changedetectorref\n - api/core/ChangeDetectorRef#checkNoChanges\n - api/core/ChangeDetectorRef#detach\n - api/core/ChangeDetectorRef#detectChanges\n - api/core/ChangeDetectorRef#example\n - api/core/ChangeDetectorRef#example-1\n - api/core/ChangeDetectorRef#example-live-demo\n - api/core/ChangeDetectorRef#example-live-demo-1\n - api/core/ChangeDetectorRef#markForCheck\n - api/core/ChangeDetectorRef#members\n - api/core/ChangeDetectorRef#overview\n - api/core/ChangeDetectorRef#reattach\n - api/core/ChangeDetectorRef#subclasses\n - api/core/Component\n - api/core/EmbeddedViewRef\n - api/core/ViewRef\n - api/forms/NgModel\n - api/router/Data\n - api/router/RouterLinkWithHref\n - http://plnkr.co/edit/GC512b?p=preview\n - http://plnkr.co/edit/aUhZha?p=preview\n - https://github.com/angular/angular/tree/5.2.11/packages/core/src/change_detection/change_detector_ref.ts#L1-L192\n - https://www.npmjs.com/package/@angular/core\n-->"
}