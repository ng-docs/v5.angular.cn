{
  "id": "api/core/Injectable",
  "title": "Injectable",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"injectable\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injectable#injectable\"><i class=\"material-icons\">link</i></a>Injectable</h1>\n    <label class=\"api-type-label decorator\">decorator</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { <a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> } from <a href=\"api/core\">'@angular/core'</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/core/src/di/metadata.ts#L155-L154\">core/src/di/metadata.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p>A marker metadata that marks a class as available to <a href=\"api/core/Injector\"><code>Injector</code></a> for creation.</p>\n\n</div>\n\n  \n  \n  \n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injectable#how-to-use\"><i class=\"material-icons\">link</i></a>How To Use</h2>\n  <code-example>\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Car {}\n</code-example>\n\n</section>\n\n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injectable#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p>For more details, see the <a href=\"guide/dependency-injection\">\"Dependency Injection Guide\"</a>.</p>\n<h3 id=\"example\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injectable#example\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass UsefulService {\n}\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass NeedsService {\n  constructor(public service: UsefulService) {}\n}\n\nconst injector = ReflectiveInjector.resolveAndCreate([NeedsService, UsefulService]);\nexpect(injector.get(NeedsService).service instanceof UsefulService).toBe(true);\n\n</code-example>\n<a href=\"api/core/Injector\"><code>Injector</code></a>\n<p> will throw an error when trying to instantiate a class that\ndoes not have <code>@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a></code> marker, as shown in the example below.</p>\n<code-example>\nclass UsefulService {}\n\nclass NeedsService {\n  constructor(public service: UsefulService) {}\n}\n\nexpect(() => ReflectiveInjector.resolveAndCreate([NeedsService, UsefulService])).toThrow();\n\n</code-example>\n\n</section>\n\n  \n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/common/HashLocationStrategy\n - api/common/Location\n - api/common/NgComponentOutlet\n - api/common/NgLocaleLocalization\n - api/common/PathLocationStrategy\n - api/common/http/HttpClient\n - api/common/http/HttpXhrBackend\n - api/common/http/JsonpClientBackend\n - api/common/http/JsonpInterceptor\n - api/common/testing/MockLocationStrategy\n - api/common/testing/SpyLocation\n - api/core\n - api/core/ApplicationInitStatus\n - api/core/ClassProvider\n - api/core/Compiler\n - api/core/Host\n - api/core/Inject\n - api/core/InjectDecorator\n - api/core/InjectableDecorator\n - api/core/Optional\n - api/core/OptionalDecorator\n - api/core/ReflectiveInjector\n - api/core/Self\n - api/core/SelfDecorator\n - api/core/SkipSelf\n - api/core/SkipSelfDecorator\n - api/core/SystemJsNgModuleLoader\n - api/core/Testability\n - api/core/TestabilityRegistry\n - api/core/TypeProvider\n - api/forms/FormBuilder\n - api/http/BaseRequestOptions\n - api/http/BaseResponseOptions\n - api/http/BrowserXhr\n - api/http/Http\n - api/http/Jsonp\n - api/http/Request\n - api/http/XHRBackend\n - api/http/testing/MockBackend\n - api/platform-browser/EventManager\n - api/platform-browser/HammerGestureConfig\n - api/platform-browser/Meta\n - api/platform-browser/Title\n - api/platform-browser/TransferState\n - api/platform-server/PlatformState\n - api/router/CanActivate\n - api/router/CanActivateChild\n - api/router/CanDeactivate\n - api/router/CanLoad\n - api/router/Resolve\n - api/router/RouterPreloader\n - api/router/testing/SpyNgModuleFactoryLoader\n - api/service-worker/SwPush\n - api/service-worker/SwUpdate\n - api/upgrade/UpgradeAdapter\n - api/upgrade/static/downgradeInjectable\n - guide/aot-compiler\n - guide/architecture\n - guide/architecture-services\n - guide/cheatsheet\n - guide/component-interaction\n - guide/dependency-injection\n - guide/dependency-injection-in-action\n - guide/dynamic-form\n - guide/hierarchical-dependency-injection\n - guide/http\n - guide/reactive-forms\n - guide/router\n - guide/service-worker-communications\n - guide/styleguide\n - guide/testing\n - guide/upgrade\n - tutorial/toh-pt4\n - tutorial/toh-pt5\n - tutorial/toh-pt6\n-->\n<!-- links from this doc:\n - api/core\n - api/core/Injectable#description\n - api/core/Injectable#example\n - api/core/Injectable#how-to-use\n - api/core/Injectable#injectable\n - api/core/Injector\n - guide/dependency-injection\n - https://github.com/angular/angular/tree/5.2.11/packages/core/src/di/metadata.ts#L155-L154\n - https://www.npmjs.com/package/@angular/core\n-->"
}