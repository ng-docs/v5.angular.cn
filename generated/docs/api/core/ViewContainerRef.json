{
  "id" : "api/core/ViewContainerRef",
  "title" : "ViewContainerRef",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"viewcontainerref\">ViewContainerRef</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a> } from <a href=\"api/core\">'@angular/core'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/core/src/linker/view_container_ref.ts#L15-L124\">core/src/linker/view_container_ref.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ivgu86loww6mg4fq1brezlnd\"><i class=\"material-icons\">link</i>概览</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a> {\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#element\">get element: ElementRef</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#injector\">get injector: Injector</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#parentInjector\">get parentInjector: Injector</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#clear\">clear(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#get\">get(index: number): ViewRef | null</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#length\">get length: number</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#createEmbeddedView\">createEmbeddedView&lt;C&gt;(templateRef: TemplateRef&lt;C&gt;, context?: C, index?: number): EmbeddedViewRef&lt;C&gt;</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#createComponent\">createComponent&lt;C&gt;(componentFactory: ComponentFactory&lt;C&gt;, index?: number, injector?: Injector, projectableNodes?: any[][], ngModule?: NgModuleRef&lt;any&gt;): ComponentRef&lt;C&gt;</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#insert\">insert(viewRef: ViewRef, index?: number): ViewRef</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#move\">move(viewRef: ViewRef, currentIndex: number): ViewRef</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#indexOf\">indexOf(viewRef: ViewRef): number</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#remove\">remove(index?: number): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#detach\">detach(index?: number): ViewRef | null</a>\n}\n</code-example>\n</section>\n\n  \n\n  \n\n\n<section class=\"description\">\n  <h2 id=\"description\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ar5q09mdsagdppsbze96eagxl\"><i class=\"material-icons\">link</i>说明</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2jmpqa7k3b3j6uff48i5wzfec\">表示一个可以附着一个或多个视图的容器。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cfsjj7gyb6e7bqwiw3weq4gy1\">此容器可以包含两种类型的视图：宿主视图，通过实例化某个 \n<a href=\"api/core/Component\"><code>Component</code></a>（使用 \n<a href=\"api/core/ViewContainerRef#createComponent\">createComponent</a>）创建；嵌入视图，通过实例化某个 \n<a href=\"api/core/TemplateRef\">嵌入模板</a>（使用 \n<a href=\"api/core/ViewContainerRef#createEmbeddedView\">createEmbeddedView</a>）创建。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ir0jg2zywosgek84582af4h0\">此容器在包含视图中的位置由锚点 \n<code>element</code> 指定。每个视图容器只能有一个锚点元素，每个锚点元素只能有一个视图容器。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d6ptjsv3gkw8q6nnq44b7x682\">附着到此容器的视图的根元素将成为渲染视图中锚点元素的同级元素。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5gq2udk3pmlvgpatkli5w4yw4\">要访问元素的 \n<code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code>，你可以将一个注入 \n<code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code> 的 \n<a href=\"api/core/Directive\"><code>Directive</code></a> 放置在该元素上，或者通过 \n<a href=\"api/core/ViewChild\"><code>ViewChild</code></a> 查询获取它。</p>\n\n</section>\n\n\n  \n  \n\n\n\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e62kgm2ztk7rgk6auybfiv91o\"><i class=\"material-icons\">link</i>成员</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"element\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get element: <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6v5oatqqgoo0nkyxtojwrfpgl\">指定此容器在包含视图中的位置的锚点元素。</p>\n<!-- TODO: rename to anchorElement -->\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"injector\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get injector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"parentInjector\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get parentInjector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"clear\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">clear(): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"29yymr77peecllejndcb4q7ov\">销毁此容器中的所有视图。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"get\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(index: number): <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a> | null</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4h7mgowe61r9nupkoeka59fej\">返回位于此容器中指定索引处的视图的 \n<code><a href=\"api/core/ViewRef\"><code>ViewRef</code></a></code>。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"length\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get length: number</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eqpcgrdkwllbvz57bu1nxhr9l\">返回当前附着到此容器的视图数量。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"createEmbeddedView\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">createEmbeddedView&lt;C&gt;(templateRef: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&lt;C&gt;, context?: C, index?: number): <a href=\"api/core/EmbeddedViewRef\" class=\"code-anchor\">EmbeddedViewRef</a>&lt;C&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2w94fqnizxmg08w4u834jnks6\">基于 \n<code><a href=\"api/core/TemplateRef\">`templateRef`</a></code> 实例化一个嵌入视图，并将其插入到此容器的指定 \n<code>index</code> 位置。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4cncqqixkuym33urz872a5rxb\">如果未指定 \n<code>index</code>，则新视图将作为容器中的最后一个视图插入。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"83ttx86b6n9hugzp0orgq9fxs\">返回新创建视图的 \n<code><a href=\"api/core/ViewRef\"><code>ViewRef</code></a></code>。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"createComponent\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">createComponent&lt;C&gt;(componentFactory: <a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a>&lt;C&gt;, index?: number, injector?: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>, projectableNodes?: any[][], ngModule?: <a href=\"api/core/NgModuleRef\" class=\"code-anchor\">NgModuleRef</a>&lt;any&gt;): <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&lt;C&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"erzj0yxd1ve9su809njysmry3\">实例化单个 \n<a href=\"api/core/Component\"><code>Component</code></a>，并将它的宿主视图插入到此容器的指定 \n<code>index</code> 位置。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6y569zzpq7bvz3xyptka294jb\">组件使用它的 \n<code><a href=\"api/core/ComponentFactory\"><code>ComponentFactory</code></a></code> 实例化，该工厂可以通过 \n<a href=\"api/core/ComponentFactoryResolver#resolveComponentFactory\">resolveComponentFactory</a> 获取。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4cncqqixkuym33urz872a5rxb\">如果未指定 \n<code>index</code>，则新视图将作为容器中的最后一个视图插入。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e9ddrfhfyepargt6ezjtqu64r\">你可以选择指定一个 \n<a href=\"api/core/Injector\"><code>Injector</code></a>，它将用作组件的父级。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bqbs38vf6oo31q1u4bmguo20q\">返回为新实例化的组件创建的宿主视图的 \n<code><a href=\"api/core/ComponentRef\"><code>ComponentRef</code></a></code>。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"insert\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">insert(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>, index?: number): <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a></code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"36ehzi9jbcs2457wycaey2g3d\">将由 \n<code><a href=\"api/core/ViewRef\"><code>ViewRef</code></a></code> 标识的视图插入到容器的指定 \n<code>index</code> 位置。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4cncqqixkuym33urz872a5rxb\">如果未指定 \n<code>index</code>，则新视图将作为容器中的最后一个视图插入。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"89r7mnn5zgur00e6eaejk5wrm\">返回插入的 \n<code><a href=\"api/core/ViewRef\"><code>ViewRef</code></a></code>。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"move\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">move(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>, currentIndex: number): <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a></code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"24hs6xhjkwyihv1qiqy60h9qe\">将由 \n<code><a href=\"api/core/ViewRef\"><code>ViewRef</code></a></code> 标识的视图移动到容器的指定 \n<code>index</code> 位置。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"89r7mnn5zgur00e6eaejk5wrm\">返回插入的 \n<code><a href=\"api/core/ViewRef\"><code>ViewRef</code></a></code>。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"indexOf\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">indexOf(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>): number</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b5lzsm5b1iyvq02pd9q1s29w1\">返回由 \n<code><a href=\"api/core/ViewRef\"><code>ViewRef</code></a></code> 指定的视图在当前容器中的索引，如果此容器不包含该视图，则返回 \n<code>-1</code>。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"remove\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">remove(index?: number): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7mtpvwkznagc1xifr52sl4w5m\">销毁附着到此容器的指定 \n<code>index</code> 位置的视图。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5dxzgypglwc42w54k07g98x3e\">如果未指定 \n<code>index</code>，则将删除容器中的最后一个视图。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"detach\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">detach(index?: number): <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a> | null</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1vrg7zrqqumjk62fkpjuosnkk\">与 \n<a href=\"api/core/ViewContainerRef#insert\">insert</a> 一起使用，以在当前容器中移动视图。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"an5gcrenh9xzw6skxelho6tge\">如果省略了 \n<code>index</code> 参数，则将分离最后一个 \n<code><a href=\"api/core/ViewRef\"><code>ViewRef</code></a></code>。</p>\n\n  </div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/common/NgComponentOutlet\n - api/common/NgForOf\n - api/common/NgIf\n - api/common/NgPluralCase\n - api/common/NgSwitchCase\n - api/common/NgSwitchDefault\n - api/common/NgTemplateOutlet\n - api/core\n - api/core/EmbeddedViewRef\n - api/core/TemplateRef\n - api/router/RouterOutlet\n - guide/dynamic-component-loader\n - guide/structural-directives\n-->\n<!-- links from this doc:\n - api/core\n - api/core/Component\n - api/core/ComponentFactory\n - api/core/ComponentFactoryResolver#resolveComponentFactory\n - api/core/ComponentRef\n - api/core/Directive\n - api/core/ElementRef\n - api/core/EmbeddedViewRef\n - api/core/Injector\n - api/core/NgModuleRef\n - api/core/TemplateRef\n - api/core/ViewChild\n - api/core/ViewContainerRef#clear\n - api/core/ViewContainerRef#createComponent\n - api/core/ViewContainerRef#createEmbeddedView\n - api/core/ViewContainerRef#description\n - api/core/ViewContainerRef#detach\n - api/core/ViewContainerRef#element\n - api/core/ViewContainerRef#get\n - api/core/ViewContainerRef#indexOf\n - api/core/ViewContainerRef#injector\n - api/core/ViewContainerRef#insert\n - api/core/ViewContainerRef#length\n - api/core/ViewContainerRef#members\n - api/core/ViewContainerRef#move\n - api/core/ViewContainerRef#overview\n - api/core/ViewContainerRef#parentInjector\n - api/core/ViewContainerRef#remove\n - api/core/ViewContainerRef#viewcontainerref\n - api/core/ViewRef\n - https://github.com/angular/angular/tree/5.2.11/packages/core/src/linker/view_container_ref.ts#L15-L124\n - https://www.npmjs.com/package/@angular/core\n-->"
}