{
  "id": "api/core/ViewContainerRef",
  "title": "ViewContainerRef",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"viewcontainerref\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ViewContainerRef#viewcontainerref\"><i class=\"material-icons\">link</i></a>ViewContainerRef</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { <a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a> } from <a href=\"api/core\">'@angular/core'</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/core/src/linker/view_container_ref.ts#L15-L124\">core/src/linker/view_container_ref.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ViewContainerRef#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a> {\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#element\">get element: ElementRef</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#injector\">get injector: Injector</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#parentInjector\">get parentInjector: Injector</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#clear\">clear(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#get\">get(index: number): ViewRef | null</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#length\">get length: number</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#createEmbeddedView\">createEmbeddedView&#x3C;C>(templateRef: TemplateRef&#x3C;C>, context?: C, index?: number): EmbeddedViewRef&#x3C;C></a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#createComponent\">createComponent&#x3C;C>(componentFactory: ComponentFactory&#x3C;C>, index?: number, injector?: Injector, projectableNodes?: any[][], ngModule?: NgModuleRef&#x3C;any>): ComponentRef&#x3C;C></a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#insert\">insert(viewRef: ViewRef, index?: number): ViewRef</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#move\">move(viewRef: ViewRef, currentIndex: number): ViewRef</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#indexOf\">indexOf(viewRef: ViewRef): number</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#remove\">remove(index?: number): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewContainerRef#detach\">detach(index?: number): ViewRef | null</a>\n}\n</code-example>\n</section>\n\n  \n\n  \n\n\n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ViewContainerRef#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p>Represents a container where one or more Views can be attached.</p>\n<p>The container can contain two kinds of Views. Host Views, created by instantiating a\n<a href=\"api/core/Component\"><code>Component</code></a> via <a href=\"api/core/ViewContainerRef#createComponent\">createComponent</a>, and Embedded Views, created by instantiating an\n<a href=\"api/core/TemplateRef\">Embedded Template</a> via <a href=\"api/core/ViewContainerRef#createEmbeddedView\">createEmbeddedView</a>.</p>\n<p>The location of the View Container within the containing View is specified by the Anchor\n<code>element</code>. Each View Container can have only one Anchor Element and each Anchor Element can only\nhave a single View Container.</p>\n<p>Root elements of Views attached to this container become siblings of the Anchor Element in\nthe Rendered View.</p>\n<p>To access a <code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code> of an Element, you can either place a <a href=\"api/core/Directive\"><code>Directive</code></a> injected\nwith <code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code> on the Element, or you obtain it via a <a href=\"api/core/ViewChild\"><code>ViewChild</code></a> query.</p>\n\n</section>\n\n\n  \n  \n\n\n\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ViewContainerRef#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"element\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get element: <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code-example>\n  <p>Anchor element that specifies the location of this container in the containing View.</p>\n<!-- TODO: rename to anchorElement -->\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"injector\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get injector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"parentInjector\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get parentInjector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"clear\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">clear(): void</code-example>\n  <p>Destroys all Views in this container.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"get\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(index: number): <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a> | null</code-example>\n  <p>Returns the <a href=\"api/core/ViewRef\"><code>ViewRef</code></a> for the View located in this container at the specified index.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"length\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get length: number</code-example>\n  <p>Returns the number of Views currently attached to this container.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"createEmbeddedView\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">createEmbeddedView&#x3C;C>(templateRef: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;C>, context?: C, index?: number): <a href=\"api/core/EmbeddedViewRef\" class=\"code-anchor\">EmbeddedViewRef</a>&#x3C;C></code-example>\n  <p>Instantiates an Embedded View based on the <a href=\"api/core/TemplateRef\">`templateRef`</a> and inserts it\ninto this container at the specified <code>index</code>.</p>\n<p>If <code>index</code> is not specified, the new View will be inserted as the last View in the container.</p>\n<p>Returns the <a href=\"api/core/ViewRef\"><code>ViewRef</code></a> for the newly created View.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"createComponent\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">createComponent&#x3C;C>(componentFactory: <a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a>&#x3C;C>, index?: number, injector?: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>, projectableNodes?: any[][], ngModule?: <a href=\"api/core/NgModuleRef\" class=\"code-anchor\">NgModuleRef</a>&#x3C;any>): <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&#x3C;C></code-example>\n  <p>Instantiates a single <a href=\"api/core/Component\"><code>Component</code></a> and inserts its Host View into this container at the\nspecified <code>index</code>.</p>\n<p>The component is instantiated using its <a href=\"api/core/ComponentFactory\"><code>ComponentFactory</code></a> which can be obtained via\n<a href=\"api/core/ComponentFactoryResolver#resolveComponentFactory\">resolveComponentFactory</a>.</p>\n<p>If <code>index</code> is not specified, the new View will be inserted as the last View in the container.</p>\n<p>You can optionally specify the <a href=\"api/core/Injector\"><code>Injector</code></a> that will be used as parent for the Component.</p>\n<p>Returns the <a href=\"api/core/ComponentRef\"><code>ComponentRef</code></a> of the Host View created for the newly instantiated Component.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"insert\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">insert(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>, index?: number): <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a></code-example>\n  <p>Inserts a View identified by a <a href=\"api/core/ViewRef\"><code>ViewRef</code></a> into the container at the specified <code>index</code>.</p>\n<p>If <code>index</code> is not specified, the new View will be inserted as the last View in the container.</p>\n<p>Returns the inserted <a href=\"api/core/ViewRef\"><code>ViewRef</code></a>.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"move\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">move(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>, currentIndex: number): <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a></code-example>\n  <p>Moves a View identified by a <a href=\"api/core/ViewRef\"><code>ViewRef</code></a> into the container at the specified <code>index</code>.</p>\n<p>Returns the inserted <a href=\"api/core/ViewRef\"><code>ViewRef</code></a>.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"indexOf\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">indexOf(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>): number</code-example>\n  <p>Returns the index of the View, specified via <a href=\"api/core/ViewRef\"><code>ViewRef</code></a>, within the current container or\n<code>-1</code> if this container doesn't contain the View.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"remove\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">remove(index?: number): void</code-example>\n  <p>Destroys a View attached to this container at the specified <code>index</code>.</p>\n<p>If <code>index</code> is not specified, the last View in the container will be removed.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"detach\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">detach(index?: number): <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a> | null</code-example>\n  <p>Use along with <a href=\"api/core/ViewContainerRef#insert\">insert</a> to move a View within the current container.</p>\n<p>If the <code>index</code> param is omitted, the last <a href=\"api/core/ViewRef\"><code>ViewRef</code></a> is detached.</p>\n\n  </div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/common/NgComponentOutlet\n - api/common/NgForOf\n - api/common/NgIf\n - api/common/NgPluralCase\n - api/common/NgSwitchCase\n - api/common/NgSwitchDefault\n - api/common/NgTemplateOutlet\n - api/core\n - api/core/EmbeddedViewRef\n - api/core/TemplateRef\n - api/router/RouterOutlet\n - guide/dynamic-component-loader\n - guide/structural-directives\n-->\n<!-- links from this doc:\n - api/core\n - api/core/Component\n - api/core/ComponentFactory\n - api/core/ComponentFactoryResolver#resolveComponentFactory\n - api/core/ComponentRef\n - api/core/Directive\n - api/core/ElementRef\n - api/core/EmbeddedViewRef\n - api/core/Injector\n - api/core/NgModuleRef\n - api/core/TemplateRef\n - api/core/ViewChild\n - api/core/ViewContainerRef#clear\n - api/core/ViewContainerRef#createComponent\n - api/core/ViewContainerRef#createEmbeddedView\n - api/core/ViewContainerRef#description\n - api/core/ViewContainerRef#detach\n - api/core/ViewContainerRef#element\n - api/core/ViewContainerRef#get\n - api/core/ViewContainerRef#indexOf\n - api/core/ViewContainerRef#injector\n - api/core/ViewContainerRef#insert\n - api/core/ViewContainerRef#length\n - api/core/ViewContainerRef#members\n - api/core/ViewContainerRef#move\n - api/core/ViewContainerRef#overview\n - api/core/ViewContainerRef#parentInjector\n - api/core/ViewContainerRef#remove\n - api/core/ViewContainerRef#viewcontainerref\n - api/core/ViewRef\n - https://github.com/angular/angular/tree/5.2.11/packages/core/src/linker/view_container_ref.ts#L15-L124\n - https://www.npmjs.com/package/@angular/core\n-->"
}