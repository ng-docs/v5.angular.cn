{
  "id" : "api/core/EventEmitter",
  "title" : "EventEmitter",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"eventemitter\">EventEmitter</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a> } from <a href=\"api/core\">'@angular/core'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/core/src/event_emitter.ts#L11-L123\">core/src/event_emitter.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ivgu86loww6mg4fq1brezlnd\"><i class=\"material-icons\">link</i>概览</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&lt;T&gt; extends <a class=\"code-anchor\" href=\"\">Subject<t></t></a> {\n  <a class=\"code-anchor\" href=\"api/core/EventEmitter#constructor()\">constructor(isAsync: boolean = false)</a>\n  <a class=\"code-anchor\" href=\"api/core/EventEmitter#___isAsync\">___isAsync: boolean</a>\n  <a class=\"code-anchor\" href=\"api/core/EventEmitter#emit\">emit(value?: T)</a>\n  <a class=\"code-anchor\" href=\"api/core/EventEmitter#subscribe\">subscribe(generatorOrNext?: any, error?: any, complete?: any): any</a>\n}\n</code-example>\n</section>\n\n  \n\n  \n\n\n<section class=\"description\">\n  <h2 id=\"description\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ar5q09mdsagdppsbze96eagxl\"><i class=\"material-icons\">link</i>说明</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4qqwovk7y6tgsmdvnc99hqx3j\">由指令和组件使用以发射自定义事件。</p>\n<h3 id=\"examples\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f4iecnoqh39op5dvxqr6b3gip\"><i class=\"material-icons\">link</i>示例</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"717qmyazei30qbmwp3t4imqzx\">在以下示例中，\n<code>Zippy</code> 在其标题被点击时交替发射 \n<code>open</code> 和 \n<code>close</code> 事件：</p>\n<code-example>\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'zippy',\n  template: `\n  &lt;div class=\"zippy\"&gt;\n    &lt;div (click)=\"toggle()\"&gt;Toggle&lt;/div&gt;\n    &lt;div [hidden]=\"!visible\"&gt;\n      &lt;ng-content&gt;&lt;/ng-content&gt;\n    &lt;/div&gt;\n &lt;/div&gt;`})\nexport class Zippy {\n  visible: boolean = true;\n  @<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>() open: <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&lt;any&gt; = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>();\n  @<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>() close: <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&lt;any&gt; = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>();\n\n  toggle() {\n    this.visible = !this.visible;\n    if (this.visible) {\n      this.open.emit(null);\n    } else {\n      this.close.emit(null);\n    }\n  }\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"baij6bbigc2784xmcqisd5gt4\">可以通过组件输出事件处理程序上的参数 \n<code>$event</code> 访问事件有效负载：</p>\n<code-example>\n&lt;zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"&gt;&lt;/zippy&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11u518j2ihlb7deib9y2sv50a\">使用 Rx.Observable，但提供了一个适配器，使其按此处指定的方式工作： \n<a href=\"https://github.com/jhusain/observable-spec\">https://github.com/jhusain/observable-spec</a></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e6sro6vptty9t1bvhksttcnd9\">一旦规范的参考实现可用，就切换到它。</p>\n\n</section>\n\n\n  \n  \n\n\n\n\n\n\n<section class=\"constructors\">\n  <h2 id=\"constructor\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"64p310lbzdqiret0qyhhannvq\"><i class=\"material-icons\">link</i>构造函数</h2>\n  \n    <div class=\"constructor\">\n  <a id=\"constructor()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">constructor(isAsync: boolean = false)</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8beml1jhv8zqx11pgpsn1cyih\">创建一个 \n<a href=\"api/core/EventEmitter\"><code>EventEmitter</code></a> 实例，它根据 \n<code>isAsync</code> 的值，同步或异步传递事件。</p>\n\n  </div>\n\n    \n    \n  \n</section>\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e62kgm2ztk7rgk6auybfiv91o\"><i class=\"material-icons\">link</i>成员</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"___isAsync\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">___isAsync: boolean</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"emit\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">emit(value?: T)</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"subscribe\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">subscribe(generatorOrNext?: any, error?: any, complete?: any): any</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/core\n - api/core/Directive\n - api/core/NgZone\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/FormGroupDirective\n - api/forms/NgForm\n - api/forms/NgModel\n - api/http/XHRConnection\n - api/http/testing/MockBackend\n - api/http/testing/MockConnection\n - api/platform-webworker/MessageBus\n - api/platform-webworker/MessageBusSink\n - api/platform-webworker/MessageBusSource\n - api/router/RouterOutlet\n - api/upgrade/static/UpgradeComponent\n - api/upgrade/static/downgradeComponent\n - guide/cheatsheet\n - guide/component-interaction\n - guide/hierarchical-dependency-injection\n - guide/observables-in-angular\n - guide/styleguide\n - guide/template-syntax\n - guide/testing\n - guide/upgrade\n-->\n<!-- links from this doc:\n - api/core\n - api/core/Component\n - api/core/EventEmitter#___isAsync\n - api/core/EventEmitter#constructor\n - api/core/EventEmitter#constructor()\n - api/core/EventEmitter#description\n - api/core/EventEmitter#emit\n - api/core/EventEmitter#eventemitter\n - api/core/EventEmitter#examples\n - api/core/EventEmitter#members\n - api/core/EventEmitter#overview\n - api/core/EventEmitter#subscribe\n - api/core/Output\n - https://github.com/angular/angular/tree/5.2.11/packages/core/src/event_emitter.ts#L11-L123\n - https://github.com/jhusain/observable-spec\n - https://www.npmjs.com/package/@angular/core\n-->"
}