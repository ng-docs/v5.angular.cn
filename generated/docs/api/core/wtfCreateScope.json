{
  "id" : "api/core/wtfCreateScope",
  "title" : "wtfCreateScope",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"wtfcreatescope\">wtfCreateScope</h1>\n    <label class=\"api-type-label const\">const</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/core/wtfCreateScope\" class=\"code-anchor\">wtfCreateScope</a> } from <a href=\"api/core\">'@angular/core'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/core/src/profile/profile.ts#L54-L54\">core/src/profile/profile.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  \n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n  const <a href=\"api/core/wtfCreateScope\" class=\"code-anchor\">wtfCreateScope</a>: any;\n  </code-example>\n\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ar5q09mdsagdppsbze96eagxl\"><i class=\"material-icons\">link</i>说明</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"73gfif45gexgt67ypdcrklqfp\">创建跟踪范围。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"888bn4ja6rcczjlf70x3lh3p\">范围必须严格嵌套，类似于堆栈帧，但不必遵循堆栈帧。建议它们遵循逻辑嵌套。你可能想使用 \n<a href=\"http://google.github.io/tracing-framework/instrumenting-code.html#custom-events\">事件签名</a> ，因为它们在 WTF 中定义。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"55vr85mkg51zjrdc83y2724b5\">用于标记范围入口。返回值用于离开范围。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"703ijben8evtu2o4eoo9l7tho\">var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"oj8qsezks3y1sseb0nomacfo\">someMethod() { var s = myScope('Foo'); // 'Foo' 被存储在跟踪 UI 中 // 在这里执行一些工作 return wtfLeave(s, 123); // 返回值 123 }</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9jvc8gpupmj32nez8lpskdb99\">注意，在工作周围添加 try-finally 块以确保 \n<code><a href=\"api/core/wtfLeave\" class=\"code-anchor\">wtfLeave</a></code> 被调用可能会 对应用程序的性能产生负面影响。因此，我们建议你 不要添加它们以确保 \n<code><a href=\"api/core/wtfLeave\" class=\"code-anchor\">wtfLeave</a></code> 被调用。在生产环境中，\n<code><a href=\"api/core/wtfLeave\" class=\"code-anchor\">wtfLeave</a></code> 是一个空操作， 因此 try-finally 块没有价值。在调试性能问题时，跳过 \n<code><a href=\"api/core/wtfLeave\" class=\"code-anchor\">wtfLeave</a></code>，由于 异常，将产生不正确的跟踪，但异常的存在表明逻辑错误，需要在对应用程序进行性能分析之前修复。仅在你期望 在性能分析期间正常执行过程中出现异常时添加 try-finally。</p>\n\n</section>\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/core\n-->\n<!-- links from this doc:\n - api/core\n - api/core/wtfCreateScope#description\n - api/core/wtfCreateScope#wtfcreatescope\n - api/core/wtfLeave\n - http://google.github.io/tracing-framework/instrumenting-code.html#custom-events\n - https://github.com/angular/angular/tree/5.2.11/packages/core/src/profile/profile.ts#L54-L54\n - https://www.npmjs.com/package/@angular/core\n-->"
}