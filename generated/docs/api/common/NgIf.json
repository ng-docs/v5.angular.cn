{
  "id": "api/common/NgIf",
  "title": "NgIf",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"ngif\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#ngif\"><i class=\"material-icons\">link</i></a>NgIf</h1>\n    <label class=\"api-type-label directive\">directive</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/common\">@angular/common</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { <a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a> } from <a href=\"api/common\">'@angular/common'</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/common/src/directives/ng_if.ts#L10-L157\">common/src/directives/ng_if.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"directive-overview\">\n  <h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({ selector: '[<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>]' })\nclass <a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a> {\n  <a class=\"code-anchor\" href=\"api/common/NgIf#ngIf\">set ngIf: any</a>\n  <a class=\"code-anchor\" href=\"api/common/NgIf#ngIfThen\">set ngIfThen: TemplateRef&#x3C;NgIfContext> | null</a>\n  <a class=\"code-anchor\" href=\"api/common/NgIf#ngIfElse\">set ngIfElse: TemplateRef&#x3C;NgIfContext> | null</a>\n}\n</code-example>\n</section>\n\n  \n\n  \n\n<section class=\"selectors\">\n  <h2 id=\"selectors\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#selectors\"><i class=\"material-icons\">link</i></a>Selectors</h2>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading selector\">\n  [<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>]\n  </code-example>\n</section>\n\n\n  \n<section class=\"inputs\">\n  <h2 id=\"inputs\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#inputs\"><i class=\"material-icons\">link</i></a>Inputs</h2>\n  \n  <div class=\"input\">\n    <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> bound to <code><a href=\"api/common/NgIf#ngIf\" class=\"code-anchor\">NgIf.ngIf</a></code>\n    \n  </div>\n  \n  <div class=\"input\">\n    <code>ngIfThen</code> bound to <code><a href=\"api/common/NgIf#ngIfThen\" class=\"code-anchor\">NgIf.ngIfThen</a></code>\n    \n  </div>\n  \n  <div class=\"input\">\n    <code>ngIfElse</code> bound to <code><a href=\"api/common/NgIf#ngIfElse\" class=\"code-anchor\">NgIf.ngIfElse</a></code>\n    \n  </div>\n  \n</section>\n\n  \n  \n\n\n\n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p>Conditionally includes a template based on the value of an <code>expression</code>.</p>\n<p><code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> evaluates the <code>expression</code> and then renders the <code>then</code> or <code>else</code> template in its place\nwhen expression is truthy or falsy respectively. Typically the:</p>\n<ul>\n<li><code>then</code> template is the inline template of <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> unless bound to a different value.</li>\n<li><code>else</code> template is blank unless it is bound.</li>\n</ul>\n<h2 id=\"most-common-usage\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#most-common-usage\"><i class=\"material-icons\">link</i></a>Most common usage</h2>\n<p>The most common usage of the <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> directive is to conditionally show the inline template as\nseen in this example:\n<code-example>\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng-if-simple',\n  template: `\n    &#x3C;button (click)=\"show = !show\">{{show ? 'hide' : 'show'}}&#x3C;/button>\n    show = {{show}}\n    &#x3C;br>\n    &#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"show\">Text to show&#x3C;/div>\n`\n})\nclass NgIfSimple {\n  show: boolean = true;\n}\n\n</code-example></p>\n<h2 id=\"showing-an-alternative-template-using-else\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#showing-an-alternative-template-using-else\"><i class=\"material-icons\">link</i></a>Showing an alternative template using <code>else</code></h2>\n<p>If it is necessary to display a template when the <code>expression</code> is falsy use the <code>else</code> template\nbinding as shown. Note that the <code>else</code> binding points to a <code>&#x3C;ng-template></code> labeled <code>#elseBlock</code>.\nThe template can be defined anywhere in the component view but is typically placed right after\n<code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> for readability.</p>\n<code-example>\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng-if-else',\n  template: `\n    &#x3C;button (click)=\"show = !show\">{{show ? 'hide' : 'show'}}&#x3C;/button>\n    show = {{show}}\n    &#x3C;br>\n    &#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"show; else elseBlock\">Text to show&#x3C;/div>\n    &#x3C;ng-template #elseBlock>Alternate text while primary text is hidden&#x3C;/ng-template>\n`\n})\nclass NgIfElse {\n  show: boolean = true;\n}\n\n</code-example>\n<h2 id=\"using-non-inlined-then-template\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#using-non-inlined-then-template\"><i class=\"material-icons\">link</i></a>Using non-inlined <code>then</code> template</h2>\n<p>Usually the <code>then</code> template is the inlined template of the <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code>, but it can be changed using\na binding (just like <code>else</code>). Because <code>then</code> and <code>else</code> are bindings, the template references can\nchange at runtime as shown in this example.</p>\n<code-example>\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng-if-then-else',\n  template: `\n    &#x3C;button (click)=\"show = !show\">{{show ? 'hide' : 'show'}}&#x3C;/button>\n    &#x3C;button (click)=\"switchPrimary()\">Switch Primary&#x3C;/button>\n    show = {{show}}\n    &#x3C;br>\n    &#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"show; then thenBlock; else elseBlock\">this is ignored&#x3C;/div>\n    &#x3C;ng-template #primaryBlock>Primary text to show&#x3C;/ng-template>\n    &#x3C;ng-template #secondaryBlock>Secondary text to show&#x3C;/ng-template>\n    &#x3C;ng-template #elseBlock>Alternate text while primary text is hidden&#x3C;/ng-template>\n`\n})\nclass NgIfThenElse implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> {\n  thenBlock: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;any>|null = null;\n  show: boolean = true;\n\n  @<a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a>('primaryBlock')\n  primaryBlock: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;any>|null = null;\n  @<a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a>('secondaryBlock')\n  secondaryBlock: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;any>|null = null;\n\n  switchPrimary() {\n    this.thenBlock = this.thenBlock === this.primaryBlock ? this.secondaryBlock : this.primaryBlock;\n  }\n\n  ngOnInit() { this.thenBlock = this.primaryBlock; }\n}\n\n</code-example>\n<h2 id=\"storing-conditional-result-in-a-variable\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#storing-conditional-result-in-a-variable\"><i class=\"material-icons\">link</i></a>Storing conditional result in a variable</h2>\n<p>A common pattern is that we need to show a set of properties from the same object. If the\nobject is undefined, then we have to use the safe-traversal-operator <code>?.</code> to guard against\ndereferencing a <code>null</code> value. This is especially the case when waiting on async data such as\nwhen using the <code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> pipe as shown in following example:</p>\n<code-example>\nHello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!\n</code-example>\n<p>There are several inefficiencies in the above example:</p>\n<ul>\n<li>We create multiple subscriptions on <code>userStream</code>. One for each <code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> pipe, or two in the\nexample above.</li>\n<li>We cannot display an alternative screen while waiting for the data to arrive asynchronously.</li>\n<li>We have to use the safe-traversal-operator <code>?.</code> to access properties, which is cumbersome.</li>\n<li>We have to place the <code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> pipe in parenthesis.</li>\n</ul>\n<p>A better way to do this is to use <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> and store the result of the condition in a local\nvariable as shown in the the example below:</p>\n<code-example>\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng-if-let',\n  template: `\n    &#x3C;button (click)=\"nextUser()\">Next User&#x3C;/button>\n    &#x3C;br>\n    &#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"userObservable | async as user; else loading\">\n      Hello {{user.last}}, {{user.first}}!\n    &#x3C;/div>\n    &#x3C;ng-template #loading let-user>Waiting... (user is {{user|<a href=\"api/common/JsonPipe\" class=\"code-anchor\">json</a>}})&#x3C;/ng-template>\n`\n})\nclass NgIfAs {\n  userObservable = new Subject&#x3C;{first: string, last: string}>();\n  first = ['John', 'Mike', 'Mary', 'Bob'];\n  firstIndex = 0;\n  last = ['Smith', 'Novotny', 'Angular'];\n  lastIndex = 0;\n\n  nextUser() {\n    let first = this.first[this.firstIndex++];\n    if (this.firstIndex >= this.first.length) this.firstIndex = 0;\n    let last = this.last[this.lastIndex++];\n    if (this.lastIndex >= this.last.length) this.lastIndex = 0;\n    this.userObservable.next({first, last});\n  }\n}\n\n</code-example>\n<p>Notice that:</p>\n<ul>\n<li>We use only one <code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> pipe and hence only one subscription gets created.</li>\n<li><code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> stores the result of the <code>userStream|async</code> in the local variable <code>user</code>.</li>\n<li>The local <code>user</code> can then be bound repeatedly in a more efficient way.</li>\n<li>No need to use the safe-traversal-operator <code>?.</code> to access properties as <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> will only\ndisplay the data if <code>userStream</code> returns a value.</li>\n<li>We can display an alternative template while waiting for the data.</li>\n</ul>\n<h3 id=\"syntax\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#syntax\"><i class=\"material-icons\">link</i></a>Syntax</h3>\n<p>Simple form:</p>\n<ul>\n<li><code>&#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"condition\">...&#x3C;/div></code></li>\n<li><code>&#x3C;ng-template [<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>]=\"condition\">&#x3C;div>...&#x3C;/div>&#x3C;/ng-template></code></li>\n</ul>\n<p>Form with an else block:</p>\n<code-example>\n&#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"condition; else elseBlock\">...&#x3C;/div>\n&#x3C;ng-template #elseBlock>...&#x3C;/ng-template>\n</code-example>\n<p>Form with a <code>then</code> and <code>else</code> block:</p>\n<code-example>\n&#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"condition; then thenBlock else elseBlock\">&#x3C;/div>\n&#x3C;ng-template #thenBlock>...&#x3C;/ng-template>\n&#x3C;ng-template #elseBlock>...&#x3C;/ng-template>\n</code-example>\n<p>Form with storing the value locally:</p>\n<code-example>\n&#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"condition as value; else elseBlock\">{{value}}&#x3C;/div>\n&#x3C;ng-template #elseBlock>...&#x3C;/ng-template>\n</code-example>\n\n</section>\n\n\n  \n  \n\n\n\n<section class=\"static-members\">\n  <h2 id=\"static-members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#static-members\"><i class=\"material-icons\">link</i></a>Static Members</h2>\n  \n</section>\n\n\n\n\n<section class=\"constructors\">\n  <h2 id=\"constructor\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#constructor\"><i class=\"material-icons\">link</i></a>Constructor</h2>\n  \n    <div class=\"constructor\">\n  <a id=\"constructor()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">constructor(_viewContainer: <a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a>, templateRef: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;<a href=\"api/common/NgIfContext\" class=\"code-anchor\">NgIfContext</a>>)</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"ngIf\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">set <a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>: any</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"ngIfThen\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">set ngIfThen: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;<a href=\"api/common/NgIfContext\" class=\"code-anchor\">NgIfContext</a>> | null</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"ngIfElse\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">set ngIfElse: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;<a href=\"api/common/NgIfContext\" class=\"code-anchor\">NgIfContext</a>> | null</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/animations/state\n - api/common\n - api/common/CommonModule\n - api/common/NgForOf\n - api/common/NgIfContext\n - api/core/ContentChild\n - api/core/ContentChildDecorator\n - api/core/ContentChildren\n - api/core/ContentChildrenDecorator\n - api/core/NgZone\n - api/core/ViewChild\n - api/core/ViewChildDecorator\n - api/core/ViewChildren\n - api/core/ViewChildrenDecorator\n - api/forms/FormControlName\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/NgModelGroup\n - guide/ajs-quick-reference\n - guide/aot-compiler\n - guide/architecture-components\n - guide/dependency-injection-in-action\n - guide/displaying-data\n - guide/docs-style-guide\n - guide/dynamic-form\n - guide/feature-modules\n - guide/form-validation\n - guide/frequent-ngmodules\n - guide/glossary\n - guide/ngmodule-api\n - guide/ngmodule-faq\n - guide/reactive-forms\n - guide/router\n - guide/sharing-ngmodules\n - guide/structural-directives\n - guide/styleguide\n - guide/template-syntax\n - guide/testing\n - guide/upgrade\n - presskit\n - tutorial/toh-pt2\n - tutorial/toh-pt3\n - tutorial/toh-pt4\n - tutorial/toh-pt5\n - tutorial/toh-pt6\n-->\n<!-- links from this doc:\n - api/common\n - api/common/JsonPipe\n - api/common/NgIf#constructor\n - api/common/NgIf#description\n - api/common/NgIf#inputs\n - api/common/NgIf#members\n - api/common/NgIf#most-common-usage\n - api/common/NgIf#ngIf\n - api/common/NgIf#ngIfElse\n - api/common/NgIf#ngIfThen\n - api/common/NgIf#ngif\n - api/common/NgIf#overview\n - api/common/NgIf#selectors\n - api/common/NgIf#showing-an-alternative-template-using-else\n - api/common/NgIf#static-members\n - api/common/NgIf#storing-conditional-result-in-a-variable\n - api/common/NgIf#syntax\n - api/common/NgIf#using-non-inlined-then-template\n - api/common/NgIfContext\n - api/core/Component\n - api/core/Directive\n - api/core/OnInit\n - api/core/TemplateRef\n - api/core/ViewChild\n - api/core/ViewContainerRef\n - api/core/testing/async\n - https://github.com/angular/angular/tree/5.2.11/packages/common/src/directives/ng_if.ts#L10-L157\n - https://www.npmjs.com/package/@angular/common\n-->"
}