{
  "id" : "api/common/http/HttpClient",
  "title" : "HttpClient",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"httpclient\">HttpClient</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/common\">@angular/common</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a> } from <a href=\"api/common/http\">'@angular/common/http'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/common/http/src/client.ts#L52-L1996\">common/http/src/client.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ivgu86loww6mg4fq1brezlnd\"><i class=\"material-icons\">link</i>概览</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a> {\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#constructor()\">constructor(handler: HttpHandler)</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\">request(first: string | HttpRequest&lt;any&gt;, url?: string, options: {...}): Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\">delete(url: string, options: {...}): Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\">get(url: string, options: {...}): Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\">head(url: string, options: {...}): Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#jsonp\">jsonp&lt;T&gt;(url: string, callbackParam: string): Observable&lt;T&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\">options(url: string, options: {...}): Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\">patch(url: string, body: any | null, options: {...}): Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\">post(url: string, body: any | null, options: {...}): Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\">put(url: string, body: any | null, options: {...}): Observable&lt;any&gt;</a>\n}\n</code-example>\n</section>\n\n  \n\n  \n\n\n<section class=\"description\">\n  <h2 id=\"description\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ar5q09mdsagdppsbze96eagxl\"><i class=\"material-icons\">link</i>说明</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"93p28qndoxt5tfw0f50setpra\">执行 HTTP 请求。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4iy4ej1yoffibsggh3hnipb35\"><code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 可作为可注入类使用，其中包含用于执行 HTTP 请求的方法。 每个请求方法都有多个签名，返回值类型根据调用的签名（主要是 \n<code>observe</code> 和 \n<code>responseType</code> 的值）而有所不同。</p>\n\n</section>\n\n\n  \n  \n\n\n\n\n\n\n<section class=\"constructors\">\n  <h2 id=\"constructor\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"64p310lbzdqiret0qyhhannvq\"><i class=\"material-icons\">link</i>构造函数</h2>\n  \n    <div class=\"constructor\">\n  <a id=\"constructor()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">constructor(handler: <a href=\"api/common/http/HttpHandler\" class=\"code-anchor\">HttpHandler</a>)</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e62kgm2ztk7rgk6auybfiv91o\"><i class=\"material-icons\">link</i>成员</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"request\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(first: string | <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&lt;any&gt;, url?: string, options: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: HttpObserve;\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n    withCredentials?: boolean;\n} = {}): Observable&lt;any&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8cvcxsxkhjy0sd15x5y0qarzi\">构造一个特定 HTTP 请求的 \n<code>Observable</code>，当订阅时， 会通过注册的拦截器链和服务器触发请求。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2skn6nrqxqhyuckcjbeiv8c82\">此方法可以通过两种方式之一调用。可以将 \n<code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> 实例直接作为唯一参数传递，也可以将方法作为第一个参数传递，将字符串 URL 作为第二个参数传递，并将选项哈希作为第三个参数传递。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9opahcerlb2hiq4pgcusm8yhq\">如果直接传递 \n<code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> 对象，则将返回原始 \n<code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code> 流的 \n<code>Observable</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6equfa45zm2tph4fs6gtx8ypv\">如果通过提供 URL 来构建请求，则选项对象 将确定 \n<code>request()</code> 的返回值类型。除了配置 请求参数（如传出的标头和/或主体）之外，选项 哈希还指定了有关请求的两个关键信息： \n<code>responseType</code> 和要 \n<code>observe</code> 的内容。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"55b8blnpdv9ni74gempc87tag\"><code>responseType</code> 值决定如何解析成功的响应主体。如果 \n<code>responseType</code> 是默认的 \n<code><a href=\"api/common/JsonPipe\" class=\"code-anchor\">json</a></code>，则可以将结果对象的类型接口作为类型参数传递给 \n<code>request()</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"awvqoqzte0poah4cish54ieve\"><code>observe</code> 值根据消费者感兴趣的观察内容，确定 \n<code>request()</code> 的返回值类型。\n<code>events</code> 值将返回一个 \n<code>Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&gt;</code>，表示原始 \n<code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code> 流， 默认情况下包括进度事件。\n<code>response</code> 值将返回一个 \n<code>Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code>，其中 \n<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> 的 \n<code>T</code> 参数 取决于 \n<code>responseType</code> 和任何可选提供的类型参数。 \n<code>body</code> 值将返回一个 \n<code>Observable&lt;T&gt;</code>，具有相同的 \n<code>T</code> 主体类型。</p>\n\n  </div>\n\n    \n    <details class=\"overloads\">\n      <summary>Overloads</summary>\n      <div class=\"detail-contents\">\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request&lt;R&gt;(req: <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&lt;any&gt;): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;R&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b4u5ech8laws9xhwjrxorcuo3\">发送给定的 \n<code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> 并返回 \n<code>HttpEvents</code> 流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_1()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(method: string, url: string, options: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;ArrayBuffer&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5sx6hj6ml4v5l5z0twe1d3ify\">构造一个将主体解释为 \n<code>ArrayBuffer</code> 并返回它的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_2()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(method: string, url: string, options: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;Blob&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"92zrhn5ao8clsxvza1eao6rzs\">构造一个将主体解释为 \n<code>Blob</code> 并返回它的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_3()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(method: string, url: string, options: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;string&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b44qc28jclzm32yvxh227brf6\">构造一个将主体解释为文本并返回它的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_4()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(method: string, url: string, options: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    observe: 'events';\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a8eu2tlonguq8y18qzx2miae3\">构造一个将主体解释为 \n<code>ArrayBuffer</code> 并返回完整事件流的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_5()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(method: string, url: string, options: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ifhoapm44fdof3v2nfa8g2iw\">构造一个将主体解释为 \n<code>Blob</code> 并返回完整事件流的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_6()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(method: string, url: string, options: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3d1kwe8ml4ce2pnarojngr7ns\">构造一个将主体解释为文本并返回完整事件流的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_7()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(method: string, url: string, options: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;any&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dkknn2961e7y8vxneovdmiply\">构造一个将主体解释为 JSON 并返回完整事件流的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_8()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request&lt;R&gt;(method: string, url: string, options: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;R&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dkknn2961e7y8vxneovdmiply\">构造一个将主体解释为 JSON 并返回完整事件流的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_9()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(method: string, url: string, options: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2hnnpf2n3hpg24p8fip5lb8pj\">构造一个将主体解释为 \n<code>ArrayBuffer</code> 并返回完整响应的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_10()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(method: string, url: string, options: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"70uqa6xpg3stcobdo2np784i\">构造一个将主体解释为 \n<code>Blob</code> 并返回完整响应的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_11()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(method: string, url: string, options: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"khg263zv2rc4o3a12omz8xx0\">构造一个将主体解释为文本并返回完整响应的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_12()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(method: string, url: string, options: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ibqxlxvnr31y4v6w96yfrfvv\">构造一个将主体解释为 JSON 并返回完整响应的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_13()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request&lt;R&gt;(method: string, url: string, options: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;R&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ibqxlxvnr31y4v6w96yfrfvv\">构造一个将主体解释为 JSON 并返回完整响应的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_14()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(method: string, url: string, options?: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    responseType?: 'json';\n    reportProgress?: boolean;\n    withCredentials?: boolean;\n}): Observable&lt;Object&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1qid4w36lai1oii9rpmi3repk\">构造一个将主体解释为 JSON 并返回它的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_15()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request&lt;R&gt;(method: string, url: string, options?: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    responseType?: 'json';\n    reportProgress?: boolean;\n    withCredentials?: boolean;\n}): Observable&lt;R&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1qid4w36lai1oii9rpmi3repk\">构造一个将主体解释为 JSON 并返回它的请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"request_16()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(method: string, url: string, options?: {\n    body?: any;\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    observe?: HttpObserve;\n    reportProgress?: boolean;\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n    withCredentials?: boolean;\n}): Observable&lt;any&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3nev8wu3139b2n38d8lv5mp5u\">以一种方式构造请求，在这种方式中，响应类型和请求的 \n<code>Observable</code> 在静态情况下未知。</p>\n\n  </div>\n\n        \n        \n      </div>\n    </details>\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"delete\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: HttpObserve;\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n    withCredentials?: boolean;\n} = {}): Observable&lt;any&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3vnyhwoxmcb0k2b090g1a8gee\">构造一个 \n<code>Observable</code>，当订阅时，将导致配置的 DELETE 请求在服务器上执行。有关 \n<code>delete()</code> 的返回值类型的详细信息，请参阅各个重载，这些返回值类型基于提供的选项。</p>\n\n  </div>\n\n    \n    <details class=\"overloads\">\n      <summary>Overloads</summary>\n      <div class=\"detail-contents\">\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;ArrayBuffer&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"41jnr81wydfk50rz828rksm2c\">构造一个将主体解释为 \n<code>ArrayBuffer</code> 并返回它的 DELETE 请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete_1()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;Blob&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7h4itgr2abyqnhkw04oa84ych\">构造一个将主体解释为 \n<code>Blob</code> 并返回它的 DELETE 请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete_2()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;string&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4q0tlz0qm6iljdcs1uceo316v\">构造一个将主体解释为文本并返回它的 DELETE 请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete_3()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5bkq4i1l6ecpmh9dpdsmsa1ds\">构造一个将主体解释为 \n<code>ArrayBuffer</code> 并返回完整事件流的 DELETE 请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete_4()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1rk2u3n5vy336ylcfp11ycx90\">构造一个将主体解释为 \n<code>Blob</code> 并返回完整事件流的 DELETE 请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete_5()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"199lefvuqp89thy4xgp5xw53n\">构造一个将主体解释为文本并返回完整事件流的 DELETE 请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete_6()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"q6q3eeyv4wj8srhwsqdnaaqv\">构造一个将主体解释为 JSON 并返回完整事件流的 DELETE 请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete_7()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete&lt;T&gt;(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"q6q3eeyv4wj8srhwsqdnaaqv\">构造一个将主体解释为 JSON 并返回完整事件流的 DELETE 请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete_8()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3xfrbpyh3jo8ky78fnh08djp5\">构造一个将主体解释为 \n<code>ArrayBuffer</code> 并返回完整响应的 DELETE 请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete_9()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47nbxdar61b65abry0lgveqj5\">构造一个 DELETE 请求，该请求将主体解释为 \n<code>Blob</code> 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete_10()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1jytp3oexi3yhpjc4uz2f0u61\">构造一个 DELETE 请求，该请求将主体解释为文本并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete_11()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a7uoyaq5wrhpfci3layv2y5so\">构造一个 DELETE 请求，该请求将主体解释为 JSON 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete_12()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete&lt;T&gt;(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a7uoyaq5wrhpfci3layv2y5so\">构造一个 DELETE 请求，该请求将主体解释为 JSON 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete_13()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options?: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;Object&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3grnz3sigosqxsev69yux2k4b\">构造一个 DELETE 请求，该请求将主体解释为 JSON 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"delete_14()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete&lt;T&gt;(url: string, options?: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;T&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3grnz3sigosqxsev69yux2k4b\">构造一个 DELETE 请求，该请求将主体解释为 JSON 并返回它。</p>\n\n  </div>\n\n        \n        \n      </div>\n    </details>\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"get\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: HttpObserve;\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n    withCredentials?: boolean;\n} = {}): Observable&lt;any&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bqj52syrwh0cv3zi4pk8cmn4p\">构造一个 \n<code>Observable</code>，当订阅时，将导致配置的 GET 请求在服务器上执行。有关 \n<code>get()</code> 返回类型（基于提供的选项）的详细信息，请参阅各个重载。</p>\n\n  </div>\n\n    \n    <details class=\"overloads\">\n      <summary>Overloads</summary>\n      <div class=\"detail-contents\">\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;ArrayBuffer&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ddxlawtiqdv3jm8pbd08mtptz\">构造一个 GET 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_1()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;Blob&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"u6e6vdtbqt5oiyipz2x5vevv\">构造一个 GET 请求，该请求将主体解释为 \n<code>Blob</code> 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_2()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;string&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dzr8d8vh42wvb2ns0mlpul0ei\">构造一个 GET 请求，该请求将主体解释为文本并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_3()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5irua1pegp9if91561for45u\">构造一个 GET 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_4()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6tuon18pyhe1wb8dcks11nxwp\">构造一个 GET 请求，该请求将主体解释为 \n<code>Blob</code> 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_5()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"anngbnuqr4py7t4fv1o9d6yv2\">构造一个 GET 请求，该请求将主体解释为文本并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_6()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8795uzdv71gteyrv94jg6byvt\">构造一个 GET 请求，该请求将主体解释为 JSON 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_7()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get&lt;T&gt;(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8795uzdv71gteyrv94jg6byvt\">构造一个 GET 请求，该请求将主体解释为 JSON 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_8()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3z4w2mn2lukh38rr8716soybu\">构造一个 GET 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_9()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"acdt4i2031w2qaymce2nvzo2\">构造一个 GET 请求，该请求将主体解释为 \n<code>Blob</code> 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_10()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"auw47h68obld97h0txgi8kgmd\">构造一个 GET 请求，该请求将主体解释为文本并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_11()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ye18f28gs369cgzg0xekuma0\">构造一个 GET 请求，该请求将主体解释为 JSON 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_12()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get&lt;T&gt;(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ye18f28gs369cgzg0xekuma0\">构造一个 GET 请求，该请求将主体解释为 JSON 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_13()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options?: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;Object&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6smo5uuub14oaem2d158bjza3\">构造一个 GET 请求，该请求将主体解释为 JSON 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get_14()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get&lt;T&gt;(url: string, options?: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;T&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6smo5uuub14oaem2d158bjza3\">构造一个 GET 请求，该请求将主体解释为 JSON 并返回它。</p>\n\n  </div>\n\n        \n        \n      </div>\n    </details>\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"head\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: HttpObserve;\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n    withCredentials?: boolean;\n} = {}): Observable&lt;any&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ikha3ycw9jd7yw39v22vtznz\">构造一个 \n<code>Observable</code>，当订阅时，将导致配置的 HEAD 请求在服务器上执行。有关 \n<code>head()</code> 返回类型（基于提供的选项）的详细信息，请参阅各个重载。</p>\n\n  </div>\n\n    \n    <details class=\"overloads\">\n      <summary>Overloads</summary>\n      <div class=\"detail-contents\">\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;ArrayBuffer&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3iutq7xjvglq2sg1feknsn656\">构造一个 HEAD 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head_1()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;Blob&gt;</code-example>\n  \n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head_2()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;string&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2y5nrrkjlk85fgu3fl8sduozc\">构造一个 HEAD 请求，该请求将主体解释为文本并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head_3()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5irua1pegp9if91561for45u\">构造一个 GET 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head_4()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"364d7fp6vi5wg8d32xm0qa9s1\">构造一个 HEAD 请求，该请求将主体解释为 \n<code>Blob</code> 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head_5()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eu6nyt3p7lpt2pvq3jtx9mej8\">构造一个 HEAD 请求，该请求将主体解释为文本并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head_6()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"datid0hyj1v0lce46fi1poxyx\">构造一个 HEAD 请求，该请求将主体解释为 JSON 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head_7()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head&lt;T&gt;(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"datid0hyj1v0lce46fi1poxyx\">构造一个 HEAD 请求，该请求将主体解释为 JSON 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head_8()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3d2gbenhc5dcgqsruj21dpmly\">构造一个 HEAD 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head_9()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1oxux11nmmnerw52e6n1av5qp\">构造一个 HEAD 请求，该请求将主体解释为 \n<code>Blob</code> 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head_10()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"divfgrtz9ch1ycog7byv3sffm\">构造一个 HEAD 请求，该请求将主体解释为文本并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head_11()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8i0mpsig1pveim4cs6potac5t\">构造一个 HEAD 请求，该请求将主体解释为 JSON 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head_12()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head&lt;T&gt;(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8i0mpsig1pveim4cs6potac5t\">构造一个 HEAD 请求，该请求将主体解释为 JSON 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head_13()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options?: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;Object&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"mk2t0dftpre3eyhqtz5gaj48\">构造一个 HEAD 请求，该请求将主体解释为 JSON 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"head_14()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head&lt;T&gt;(url: string, options?: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;T&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"mk2t0dftpre3eyhqtz5gaj48\">构造一个 HEAD 请求，该请求将主体解释为 JSON 并返回它。</p>\n\n  </div>\n\n        \n        \n      </div>\n    </details>\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"jsonp\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">jsonp&lt;T&gt;(url: string, callbackParam: string): Observable&lt;T&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"384lf9gdc7pw511j6n8iuo5o8\">构造一个 \n<code>Observable</code>，当订阅时，将导致使用特殊方法 \n<code>JSONP</code> 的请求通过拦截器管道分派。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6wanf1hwhcqtg0ss5z09th8cj\">必须安装合适的拦截器（例如，通过 \n<code><a href=\"api/common/http/HttpClientJsonpModule\" class=\"code-anchor\">HttpClientJsonpModule</a></code>）。 如果没有找到此类拦截器，则 \n<code>JSONP</code> 请求可能会被配置的后端拒绝。</p>\n\n  </div>\n\n    \n    <details class=\"overloads\">\n      <summary>Overloads</summary>\n      <div class=\"detail-contents\">\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"jsonp()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">jsonp(url: string, callbackParam: string): Observable&lt;Object&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"57bodqsxf33dhzdg9p3ar19dc\">为给定的 URL 和回调参数名称构造一个 JSONP 请求。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"jsonp_1()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">jsonp&lt;T&gt;(url: string, callbackParam: string): Observable&lt;T&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"57bodqsxf33dhzdg9p3ar19dc\">为给定的 URL 和回调参数名称构造一个 JSONP 请求。</p>\n\n  </div>\n\n        \n        \n      </div>\n    </details>\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"options\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: HttpObserve;\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n    withCredentials?: boolean;\n} = {}): Observable&lt;any&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1tlv7svrd28anc3oqwtd8r75k\">构造一个 \n<code>Observable</code>，当订阅时，将导致配置的 OPTIONS 请求在服务器上执行。有关 \n<code>options()</code> 返回类型（基于提供的选项）的详细信息，请参阅各个重载。</p>\n\n  </div>\n\n    \n    <details class=\"overloads\">\n      <summary>Overloads</summary>\n      <div class=\"detail-contents\">\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;ArrayBuffer&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cexjqwifv6kala4nh37egbej9\">发出一个 OPTIONS 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options_1()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;Blob&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4psc0h0ia0b0s0zmj84x2889y\">构造一个 OPTIONS 请求，该请求将主体解释为 \n<code>Blob</code> 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options_2()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;string&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"61t0rexewwkrsgu6qbfnl1koe\">构造一个 OPTIONS 请求，该请求将主体解释为文本并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options_3()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dovf6m06m942ol69cnx6e3rzp\">构造一个 OPTIONS 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options_4()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e4qbkga368elidabo9fk0fbjx\">构造一个 OPTIONS 请求，该请求将主体解释为 \n<code>Blob</code> 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options_5()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3g2tbqyh5saxd5l495hm5p0jm\">构造一个 OPTIONS 请求，该请求将主体解释为文本并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options_6()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"14s5in02oe9u8hunjsv0uljaz\">构造一个 OPTIONS 请求，该请求将主体解释为 JSON 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options_7()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options&lt;T&gt;(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"14s5in02oe9u8hunjsv0uljaz\">构造一个 OPTIONS 请求，该请求将主体解释为 JSON 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options_8()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5qpak22cw6nw40filsj7k8ynz\">构造一个 OPTIONS 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options_9()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6sm1yg0fewzccoe0bkaq1dfy5\">构造一个 OPTIONS 请求，该请求将主体解释为 \n<code>Blob</code> 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options_10()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"avs5i2ejm8dxw547932dx87i1\">构造一个 OPTIONS 请求，该请求将主体解释为文本并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options_11()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4alpdqj55kb1ltypdh4xa72ir\">构造一个 OPTIONS 请求，该请求将主体解释为 JSON 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options_12()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options&lt;T&gt;(url: string, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4alpdqj55kb1ltypdh4xa72ir\">构造一个 OPTIONS 请求，该请求将主体解释为 JSON 并返回完整响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options_13()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options?: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;Object&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3m9km5hxjt8knon7gl3r7rndc\">构造一个 OPTIONS 请求，该请求将主体解释为 JSON 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"options_14()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options&lt;T&gt;(url: string, options?: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;T&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3m9km5hxjt8knon7gl3r7rndc\">构造一个 OPTIONS 请求，该请求将主体解释为 JSON 并返回它。</p>\n\n  </div>\n\n        \n        \n      </div>\n    </details>\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"patch\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: HttpObserve;\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n    withCredentials?: boolean;\n} = {}): Observable&lt;any&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9swstdae4coidu5drh4dkkeh2\">构造一个 \n<code>Observable</code>，当订阅时，将导致配置的 PATCH 请求在服务器上执行。有关 \n<code>patch()</code> 返回类型（基于提供的选项）的详细信息，请参阅各个重载。</p>\n\n  </div>\n\n    \n    <details class=\"overloads\">\n      <summary>Overloads</summary>\n      <div class=\"detail-contents\">\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;ArrayBuffer&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2j4q6zf92iolghqrhlpnmdzbl\">构造一个 PATCH 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch_1()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;Blob&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c0mmimyn1ho4vjwhcb1k9qjtz\">构造一个 PATCH 请求，该请求将主体解释为 \n<code>Blob</code> 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch_2()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;string&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"77b8jw8okra868ntrgj760vhh\">构造一个 PATCH 请求，该请求将主体解释为文本并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch_3()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a6axmijna6ghyw1rmcdvgv280\">构造一个 PATCH 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch_4()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1itqhxtimtcl6776e7wuo2wxw\">构造一个 PATCH 请求，该请求将主体解释为 \n<code>Blob</code> 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch_5()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eer2wbfuxisee2q337vjuamx4\">构建一个 PATCH 请求，该请求将主体解释为文本并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch_6()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"623k58cdrao7kard7ar516u4a\">构建一个 PATCH 请求，该请求将主体解释为 JSON 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch_7()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch&lt;T&gt;(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"623k58cdrao7kard7ar516u4a\">构建一个 PATCH 请求，该请求将主体解释为 JSON 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch_8()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bs13v3zdy2rkapojeso5jz1a2\">构建一个 PATCH 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch_9()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"degy7x6kxfrk5rdirb1al3wbz\">构建一个 PATCH 请求，该请求将主体解释为 \n<code>Blob</code> 并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch_10()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ggojd5u3s3gmrbzory37uggw\">构建一个 PATCH 请求，该请求将主体解释为文本并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch_11()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4v4d0ondv93qu5os1i32chfyj\">构建一个 PATCH 请求，该请求将主体解释为 JSON 并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch_12()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch&lt;T&gt;(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4v4d0ondv93qu5os1i32chfyj\">构建一个 PATCH 请求，该请求将主体解释为 JSON 并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch_13()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any | null, options?: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;Object&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2qoppumgv677w9yktrqsttjxf\">构建一个 PATCH 请求，该请求将主体解释为 JSON 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"patch_14()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch&lt;T&gt;(url: string, body: any | null, options?: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;T&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2qoppumgv677w9yktrqsttjxf\">构建一个 PATCH 请求，该请求将主体解释为 JSON 并返回它。</p>\n\n  </div>\n\n        \n        \n      </div>\n    </details>\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"post\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: HttpObserve;\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n    withCredentials?: boolean;\n} = {}): Observable&lt;any&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1m9np18e0b0apd30cp7gwt8qu\">构建一个 \n<code>Observable</code>，当订阅时，将导致在服务器上执行配置的 POST 请求。有关 \n<code>post()</code> 返回类型（基于提供的选项）的详细信息，请参阅各个重载。</p>\n\n  </div>\n\n    \n    <details class=\"overloads\">\n      <summary>Overloads</summary>\n      <div class=\"detail-contents\">\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;ArrayBuffer&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bcow5vartp14pjvelcc2ick12\">构建一个 POST 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post_1()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;Blob&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eon9h0792p5fz8mesixqhkdgl\">构建一个 POST 请求，该请求将主体解释为 \n<code>Blob</code> 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post_2()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;string&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3plwbbclsee6ggfefu50f9dvl\">构建一个 POST 请求，该请求将主体解释为文本并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post_3()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a6axmijna6ghyw1rmcdvgv280\">构造一个 PATCH 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post_4()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a11gz9wv955f6olfq3vkzqlc6\">构建一个 POST 请求，该请求将主体解释为 \n<code>Blob</code> 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post_5()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ork562cihevn12miet4y69w0\">构建一个 POST 请求，该请求将主体解释为文本并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post_6()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"67z2hd44bwr8mhav3lstxgkhq\">构建一个 POST 请求，该请求将主体解释为 JSON 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post_7()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post&lt;T&gt;(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"67z2hd44bwr8mhav3lstxgkhq\">构建一个 POST 请求，该请求将主体解释为 JSON 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post_8()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"10tcdotc7dgt80yxvztvfwqbs\">构建一个 POST 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post_9()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7vtd02avxnyf5lrn5dwwj6489\">构建一个 POST 请求，该请求将主体解释为 \n<code>Blob</code> 并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post_10()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ys9lyi64j4bjp6uj8yha9vug\">构建一个 POST 请求，该请求将主体解释为文本并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post_11()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dxd4ki2p56xwv9g0o9kfrylle\">构建一个 POST 请求，该请求将主体解释为 JSON 并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post_12()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post&lt;T&gt;(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dxd4ki2p56xwv9g0o9kfrylle\">构建一个 POST 请求，该请求将主体解释为 JSON 并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post_13()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any | null, options?: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;Object&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bh6oi2iofue4mafkidplczzca\">构建一个 POST 请求，该请求将主体解释为 JSON 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"post_14()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post&lt;T&gt;(url: string, body: any | null, options?: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;T&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bh6oi2iofue4mafkidplczzca\">构建一个 POST 请求，该请求将主体解释为 JSON 并返回它。</p>\n\n  </div>\n\n        \n        \n      </div>\n    </details>\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"put\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: HttpObserve;\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n    withCredentials?: boolean;\n} = {}): Observable&lt;any&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1m9np18e0b0apd30cp7gwt8qu\">构建一个 \n<code>Observable</code>，当订阅时，将导致在服务器上执行配置的 POST 请求。有关 \n<code>post()</code> 返回类型（基于提供的选项）的详细信息，请参阅各个重载。</p>\n\n  </div>\n\n    \n    <details class=\"overloads\">\n      <summary>Overloads</summary>\n      <div class=\"detail-contents\">\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;ArrayBuffer&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b60kyvwj7o5w3uygo8wwhkm9v\">构建一个 PUT 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put_1()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;Blob&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"89uqz1ylv4k4bd3j4hgqni1c0\">构建一个 PUT 请求，该请求将主体解释为 \n<code>Blob</code> 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put_2()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;string&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ckhv3s1monficd3ucnqs5ltd\">构建一个 PUT 请求，该请求将主体解释为文本并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put_3()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ipt2ft0hrtbkqtq1rrwigspd\">构建一个 PUT 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put_4()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ku947wv3k12byudsg7mmg6cm\">构建一个 PUT 请求，该请求将主体解释为 \n<code>Blob</code> 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put_5()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3a60zn96lfj14oqmbdlx1nc0m\">构建一个 PUT 请求，该请求将主体解释为文本并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put_6()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cztena0m5c62bhguov3uyd80j\">构建一个 PUT 请求，该请求将主体解释为 JSON 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put_7()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put&lt;T&gt;(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'events';\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cztena0m5c62bhguov3uyd80j\">构建一个 PUT 请求，该请求将主体解释为 JSON 并返回完整的事件流。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put_8()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a2kdatmyrhgyv9hl1b3hw4yok\">构建一个 PUT 请求，该请求将主体解释为 \n<code>ArrayBuffer</code> 并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put_9()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'blob';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"enfzrbwvphktlo6g5bfqbznfy\">构建一个 PUT 请求，该请求将主体解释为 \n<code>Blob</code> 并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put_10()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType: 'text';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8by0uqkk3equb9uuwuhecj170\">构建一个 PUT 请求，该请求将主体解释为文本并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put_11()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adsahyl7gbe18o1a1sbsv0uns\">构建一个 PUT 请求，该请求将主体解释为 JSON 并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put_12()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put&lt;T&gt;(url: string, body: any | null, options: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe: 'response';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adsahyl7gbe18o1a1sbsv0uns\">构建一个 PUT 请求，该请求将主体解释为 JSON 并返回完整的响应。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put_13()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any | null, options?: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;Object&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4lqp9j27sw8mjyg6bqdslmdpa\">构建一个 PUT 请求，该请求将主体解释为 JSON 并返回它。</p>\n\n  </div>\n\n        <hr>\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"put_14()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put&lt;T&gt;(url: string, body: any | null, options?: {\n    headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | {\n        [header: string]: string | string[];\n    };\n    observe?: 'body';\n    params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | {\n        [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n    responseType?: 'json';\n    withCredentials?: boolean;\n}): Observable&lt;T&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4lqp9j27sw8mjyg6bqdslmdpa\">构建一个 PUT 请求，该请求将主体解释为 JSON 并返回它。</p>\n\n  </div>\n\n        \n        \n      </div>\n    </details>\n    \n    \n  \n</section>\n\n\n\n<section class=\"annotations\">\n  <h2 id=\"annotations\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ptfpgifdyh5hp4kme5clquv2\"><i class=\"material-icons\">link</i>注解</h2>\n    <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()</code-example>\n    \n  \n</section>\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/common/http\n - api/common/http/HttpBackend\n - api/common/http/HttpClientJsonpModule\n - api/common/http/HttpClientModule\n - api/common/http/testing/HttpClientTestingModule\n - guide/architecture-services\n - guide/http\n - guide/observables-in-angular\n - guide/security\n - guide/testing\n - guide/universal\n - tutorial/toh-pt4\n - tutorial/toh-pt6\n-->\n<!-- links from this doc:\n - api/common/JsonPipe\n - api/common/http\n - api/common/http/HttpClient#annotations\n - api/common/http/HttpClient#constructor\n - api/common/http/HttpClient#constructor()\n - api/common/http/HttpClient#delete\n - api/common/http/HttpClient#description\n - api/common/http/HttpClient#get\n - api/common/http/HttpClient#head\n - api/common/http/HttpClient#httpclient\n - api/common/http/HttpClient#jsonp\n - api/common/http/HttpClient#members\n - api/common/http/HttpClient#options\n - api/common/http/HttpClient#overview\n - api/common/http/HttpClient#patch\n - api/common/http/HttpClient#post\n - api/common/http/HttpClient#put\n - api/common/http/HttpClient#request\n - api/common/http/HttpClientJsonpModule\n - api/common/http/HttpEvent\n - api/common/http/HttpHandler\n - api/common/http/HttpHeaders\n - api/common/http/HttpParams\n - api/common/http/HttpRequest\n - api/common/http/HttpResponse\n - api/core/Injectable\n - https://github.com/angular/angular/tree/5.2.11/packages/common/http/src/client.ts#L52-L1996\n - https://www.npmjs.com/package/@angular/common\n-->"
}