{
  "id" : "api/animations/transition",
  "title" : "transition",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"transition\">transition</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    <label class=\"api-status-label experimental\">experimental</label>\n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/animations\">@angular/animations</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a> } from <a href=\"api/animations\">'@angular/animations'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/animations/src/animation_metadata.ts#L638-L843\">animations/src/animation_metadata.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  \n<code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\nfunction <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(stateChangeExpr: string | ((fromState: string, toState: string) =&gt; boolean), steps: <a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a> | <a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a>[], options: <a href=\"api/animations/AnimationOptions\" class=\"code-anchor\">AnimationOptions</a> | null = null): <a href=\"api/animations/AnimationTransitionMetadata\" class=\"code-anchor\">AnimationTransitionMetadata</a>;\n</code-example>\n\n  \n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ar5q09mdsagdppsbze96eagxl\"><i class=\"material-icons\">link</i>说明</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ejaacaxarrneuxvchq6p68fzb\"><code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a></code> 是一个特定于动画的函数，旨在用于 Angular 的动画 DSL 语言中。如果此信息是新的，请导航到 \n<a href=\"api/core/Component#animations\">组件动画元数据页面</a>，以更好地了解 Angular 中如何使用动画。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8nvi676xiub3tmp0b9rh4dcj\"><code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a></code> 声明 \n<a href=\"api/animations/sequence\">动画步骤序列</a>，这些步骤将在满足提供的 \n<code>stateChangeExpr</code> 值时运行。\n<code>stateChangeExpr</code> 由 \n<code>state1 =&gt; state2</code> 组成，它包含两个已知状态（使用星号 (\n<code>*</code>) 来引用动态的起始和/或结束状态）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"20pi7g3scxntln5ohnxjxwdhr\">也可以将函数作为 \n<code>stateChangeExpr</code> 参数提供给过渡，并且此函数将在每次状态更改时执行。如果函数中返回的值为 true，则将运行关联的动画。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7q6fzevoylzgwjgng4t95aigi\">动画过渡放置在 \n<a href=\"api/animations/trigger\">动画触发器</a> 中。对于过渡到状态值并保留其样式的动画，需要定义一个或多个 \n<a href=\"api/animations/state\">动画状态</a>。</p>\n<h3 id=\"usage\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"bqkiuc1612srggyr16nss2hrq\"><i class=\"material-icons\">link</i>用法</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d19ziqu12ddk9ftjfgidthsur\">动画过渡在 \n<code>stateChangeExpr</code> 谓词根据先前状态和当前状态的更改结果为 true 时启动。换句话说，如果定义的过渡与旧/当前状态条件匹配，则将触发关联的动画。</p>\n<code-example language=\"typescript\">\n// all <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>/<a href=\"api/animations/state\" class=\"code-anchor\">state</a> changes are defined within an <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>\n<a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>(\"myAnimationTrigger\", [\n  // if <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> <a href=\"api/animations/state\" class=\"code-anchor\">state</a> is defined then its styles will be persisted when the\n  // <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> has fully completed itself\n  <a href=\"api/animations/state\" class=\"code-anchor\">state</a>(\"on\", <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ background: \"green\" })),\n  <a href=\"api/animations/state\" class=\"code-anchor\">state</a>(\"off\", <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ background: \"grey\" })),\n\n  // <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a> <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> that will be kicked off when the <a href=\"api/animations/state\" class=\"code-anchor\">state</a> value\n  // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"on =&gt; off\", <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)),\n\n  // it is also possible to do run the same <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> for both directions\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"on &lt;=&gt; off\", <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)),\n\n  // or to define <a href=\"api/forms/SelectMultipleControlValueAccessor\" class=\"code-anchor\">multiple</a> states pairs separated by commas\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"on =&gt; off, off =&gt; void\", <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)),\n\n  // this is <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> catch-all <a href=\"api/animations/state\" class=\"code-anchor\">state</a> change for when an element is inserted into\n  // the page and the destination <a href=\"api/animations/state\" class=\"code-anchor\">state</a> is unknown\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"void =&gt; *\", [\n    <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 }),\n    <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)\n  ]),\n\n  // this will capture <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> <a href=\"api/animations/state\" class=\"code-anchor\">state</a> change between any states\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"* =&gt; *\", <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(\"1s 0s\")),\n\n  // you can also go full out and include <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> function\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>((fromState, toState) =&gt; {\n    // when `true` then it will allow the <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> below to be invoked\n    return fromState == \"off\" &amp;&amp; toState == \"on\";\n  }, <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(\"1s 0s\"))\n])\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bh9hckxw3qvlgpnrb6bbb73c1\">与该组件关联的模板将通过绑定到其模板代码中的元素来使用 \n<code>myAnimationTrigger</code> 动画触发器。</p>\n<code-example language=\"html\">\n&lt;!-- somewhere inside of my-component-tpl.html --&gt;\n&lt;div [@myAnimationTrigger]=\"myStatusExp\"&gt;...&lt;/div&gt;\n</code-example>\n<h4 id=\"the-final-animate-call\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8dpp5fmzp0m7rf3ax0381jo4y\"><i class=\"material-icons\">link</i>最终的 \n<code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a></code> 调用</h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7uhg3nscor5vyhd3y8odg6fyh\">如果过渡步骤中的最后一步是对 \n<code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 的调用，该调用\n<strong>仅</strong>使用计时值\n<strong>没有样式数据</strong>，则它将自动用作元素动画到最终状态的最终动画弧。这涉及自动混合添加/删除 CSS 样式，以便元素将处于应用状态应呈现的精确状态。</p>\n<code-example>\n// start off by hiding the element, but make sure that it animates properly to whatever <a href=\"api/animations/state\" class=\"code-anchor\">state</a>\n// is currently active for \"myAnimationTrigger\"\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"void =&gt; *\", [\n  <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 }),\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)\n])\n</code-example>\n<h3 id=\"using-enter-and-leave\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b1vx573jnd8t0hlzh40yvr991\"><i class=\"material-icons\">link</i>使用 :enter 和 :leave</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2cq1181ojuyzv2ykaxewzmci5\">鉴于进入（插入）和离开（移除）动画非常常见，\n<code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a></code> 函数接受 \n<code>:enter</code> 和 \n<code>:leave</code> 值，它们是 \n<code>void =&gt; *</code> 和 \n<code>* =&gt; void</code> 状态更改的别名。</p>\n<code-example>\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\":enter\", [\n  <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 }),\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 1 }))\n]),\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\":leave\", [\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 }))\n])\n</code-example>\n<h3 id=\"boolean-values\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"65j53ycpvookon9ordryu7i6e\"><i class=\"material-icons\">link</i>布尔值</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3i5lkq7egm7qdpxx17lc6itqs\">如果触发器绑定值是布尔值，则可以使用比较 \n<code>true</code> 和 \n<code>false</code> 或 \n<code>1</code> 和 \n<code>0</code> 的过渡表达式来匹配它。</p>\n<code-example>\n// in the template\n&lt;div [@openClose]=\"open ? true : false\"&gt;...&lt;/div&gt;\n\n// in the component metadata\n<a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>('openClose', [\n  <a href=\"api/animations/state\" class=\"code-anchor\">state</a>('true', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ height: '*' })),\n  <a href=\"api/animations/state\" class=\"code-anchor\">state</a>('false', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ height: '0px' })),\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('false &lt;=&gt; true', <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500))\n])\n</code-example>\n<h3 id=\"using-increment-and-decrement\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aoh076tcflzws98ssfe1xovf\"><i class=\"material-icons\">link</i>使用 :increment 和 :decrement</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d7pk7lqhyx5l4z2u658zij10v\">除了 :enter 和 :leave 过渡别名之外，还可以使用 :increment 和 :decrement 别名在数值增加或减少时启动过渡。</p>\n<code-example>\nimport {<a href=\"api/animations/group\" class=\"code-anchor\">group</a>, <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>, <a href=\"api/animations/query\" class=\"code-anchor\">query</a>, <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>, <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>} from '@angular/animations';\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'banner-carousel-component',\n  styles: [`\n    .banner-container {\n       position:relative;\n       height:500px;\n       overflow:hidden;\n     }\n    .banner-container &gt; .banner {\n       position:absolute;\n       left:0;\n       top:0;\n       font-size:200px;\n       line-height:500px;\n       font-weight:bold;\n       text-align:center;\n       width:100%;\n     }\n  `],\n  template: `\n    &lt;button (click)=\"previous()\"&gt;Previous&lt;/button&gt;\n    &lt;button (click)=\"next()\"&gt;Next&lt;/button&gt;\n    &lt;hr&gt;\n    &lt;div [@bannerAnimation]=\"selectedIndex\" class=\"banner-container\"&gt;\n      &lt;div class=\"banner\" *<a href=\"api/common/NgForOf\" class=\"code-anchor\">ngFor</a>=\"let banner of banners\"&gt; {{ banner }} &lt;/div&gt;\n    &lt;/div&gt;\n  `,\n  animations: [\n    <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>('bannerAnimation', [\n      <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\":increment\", <a href=\"api/animations/group\" class=\"code-anchor\">group</a>([\n        <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':enter', [\n          <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ left: '100%' }),\n          <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>('*'))\n        ]),\n        <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':leave', [\n          <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ left: '-100%' }))\n        ])\n      ])),\n      <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\":decrement\", <a href=\"api/animations/group\" class=\"code-anchor\">group</a>([\n        <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':enter', [\n          <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ left: '-100%' }),\n          <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>('*'))\n        ]),\n        <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':leave', [\n          <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ left: '100%' }))\n        ])\n      ]))\n    ])\n  ]\n})\nclass BannerCarouselComponent {\n  allBanners: string[] = ['1', '2', '3', '4'];\n  selectedIndex: number = 0;\n\n  get banners() {\n     return [this.allBanners[this.selectedIndex]];\n  }\n\n  previous() {\n    this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n  }\n\n  next() {\n    this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n  }\n}\n</code-example>\n<code-example>\nimport {<a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>, <a href=\"api/animations/state\" class=\"code-anchor\">state</a>, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>, <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>, <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>} from '@angular/animations';\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>} from '@angular/core';\nimport {<a href=\"api/platform-browser/animations/BrowserAnimationsModule\" class=\"code-anchor\">BrowserAnimationsModule</a>} from '@angular/platform-browser/animations';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'example-app',\n  styles: [`\n    .toggle-container {\n      background-color:white;\n      border:10px solid black;\n      width:200px;\n      text-align:center;\n      line-height:100px;\n      font-size:50px;\n      box-sizing:border-box;\n      overflow:hidden;\n    }\n  `],\n  animations: [<a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>(\n      'openClose',\n      [\n        <a href=\"api/animations/state\" class=\"code-anchor\">state</a>('collapsed, void', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({height: '0px', color: 'maroon', borderColor: 'maroon'})),\n        <a href=\"api/animations/state\" class=\"code-anchor\">state</a>('expanded', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({height: '*', borderColor: 'green', color: 'green'})),\n        <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\n            'collapsed &lt;=&gt; expanded', [<a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({height: '250px'})), <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)])\n      ])],\n  template: `\n    &lt;button (click)=\"expand()\"&gt;Open&lt;/button&gt;\n    &lt;button (click)=\"collapse()\"&gt;Closed&lt;/button&gt;\n    &lt;hr /&gt;\n    &lt;div class=\"toggle-container\" [@openClose]=\"stateExpression\"&gt;\n      Look at this box\n    &lt;/div&gt;\n  `\n})\nexport class MyExpandoCmp {\n  stateExpression: string;\n  constructor() { this.collapse(); }\n  expand() { this.stateExpression = 'expanded'; }\n  collapse() { this.stateExpression = 'collapsed'; }\n}\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>(\n    {imports: [<a href=\"api/platform-browser/animations/BrowserAnimationsModule\" class=\"code-anchor\">BrowserAnimationsModule</a>], declarations: [MyExpandoCmp], bootstrap: [MyExpandoCmp]})\nexport class AppModule {\n}\n\n\n</code-example>\n\n</section>\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/animations\n - api/animations/AnimationOptions\n - api/animations/AnimationTransitionMetadata\n - api/animations/animate\n - api/animations/animateChild\n - api/animations/group\n - api/animations/keyframes\n - api/animations/query\n - api/animations/sequence\n - api/animations/stagger\n - api/animations/state\n - api/animations/style\n - api/animations/trigger\n - api/core/Component\n - api/core/transition\n - guide/animations\n - guide/router\n-->\n<!-- links from this doc:\n - api/animations\n - api/animations/AnimationMetadata\n - api/animations/AnimationOptions\n - api/animations/AnimationTransitionMetadata\n - api/animations/animate\n - api/animations/animation\n - api/animations/group\n - api/animations/query\n - api/animations/sequence\n - api/animations/state\n - api/animations/style\n - api/animations/transition#boolean-values\n - api/animations/transition#description\n - api/animations/transition#the-final-animate-call\n - api/animations/transition#transition\n - api/animations/transition#usage\n - api/animations/transition#using-enter-and-leave\n - api/animations/transition#using-increment-and-decrement\n - api/animations/trigger\n - api/common/NgForOf\n - api/core/Component\n - api/core/Component#animations\n - api/core/NgModule\n - api/forms/SelectMultipleControlValueAccessor\n - api/platform-browser/animations/BrowserAnimationsModule\n - api/router/RouterLinkWithHref\n - https://github.com/angular/angular/tree/5.2.11/packages/animations/src/animation_metadata.ts#L638-L843\n - https://www.npmjs.com/package/@angular/animations\n-->"
}