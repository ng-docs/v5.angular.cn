{
  "id": "api/animations/state",
  "title": "state",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"state\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/state#state\"><i class=\"material-icons\">link</i></a>state</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    <label class=\"api-status-label experimental\">experimental</label>\n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/animations\">@angular/animations</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { <a href=\"api/animations/state\" class=\"code-anchor\">state</a> } from <a href=\"api/animations\">'@angular/animations'</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/animations/src/animation_metadata.ts#L535-L588\">animations/src/animation_metadata.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  \n<code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\nfunction <a href=\"api/animations/state\" class=\"code-anchor\">state</a>(name: string, styles: <a href=\"api/animations/AnimationStyleMetadata\" class=\"code-anchor\">AnimationStyleMetadata</a>, options?: {\n    params: {\n        [name: string]: any;\n    };\n}): <a href=\"api/animations/AnimationStateMetadata\" class=\"code-anchor\">AnimationStateMetadata</a>;\n</code-example>\n\n  \n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/state#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p><code><a href=\"api/animations/state\" class=\"code-anchor\">state</a></code> is an animation-specific function that is designed to be used inside of Angular's\nanimation DSL language. If this information is new, please navigate to the <a href=\"api/core/Component#animations\">component animations metadata page</a> to gain a better understanding of\nhow animations in Angular are used.</p>\n<p><code><a href=\"api/animations/state\" class=\"code-anchor\">state</a></code> declares an animation state within the given trigger. When a state is active within a\ncomponent then its associated styles will persist on the element that the trigger is attached to\n(even when the animation ends).</p>\n<p>To animate between states, have a look at the animation <a href=\"api/animations/transition\">transition</a> DSL\nfunction. To register states to an animation trigger please have a look at the <a href=\"api/animations/trigger\">trigger</a> function.</p>\n<h4 id=\"the-void-state\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/state#the-void-state\"><i class=\"material-icons\">link</i></a>The <code>void</code> state</h4>\n<p>The <code>void</code> state value is a reserved word that angular uses to determine when the element is not\napart of the application anymore (e.g. when an <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> evaluates to false then the state of the\nassociated element is void).</p>\n<h4 id=\"the--default-state\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/state#the--default-state\"><i class=\"material-icons\">link</i></a>The <code>*</code> (default) state</h4>\n<p>The <code>*</code> state (when styled) is a fallback state that will be used if the state that is being\nanimated is not declared within the trigger.</p>\n<h3 id=\"usage\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/state#usage\"><i class=\"material-icons\">link</i></a>Usage</h3>\n<p><code><a href=\"api/animations/state\" class=\"code-anchor\">state</a></code> will declare an animation state with its associated styles\nwithin the given trigger.</p>\n<ul>\n<li><code>stateNameExpr</code> can be one or more state names separated by commas.</li>\n<li><code>styles</code> refers to the <a href=\"api/animations/style\">styling data</a> that will be persisted on the element once\nthe state has been reached.</li>\n</ul>\n<code-example language=\"typescript\">\n// \"void\" is <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> reserved name for <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> <a href=\"api/animations/state\" class=\"code-anchor\">state</a> and is used to represent\n// the <a href=\"api/animations/state\" class=\"code-anchor\">state</a> in which an element is detached from from the application.\n<a href=\"api/animations/state\" class=\"code-anchor\">state</a>(\"void\", <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ height: 0 }))\n\n// user-defined states\n<a href=\"api/animations/state\" class=\"code-anchor\">state</a>(\"closed\", <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ height: 0 }))\n<a href=\"api/animations/state\" class=\"code-anchor\">state</a>(\"open, visible\", <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ height: \"*\" }))\n</code-example>\n<code-example>\nimport {<a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>, <a href=\"api/animations/state\" class=\"code-anchor\">state</a>, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>, <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>, <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>} from '@angular/animations';\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>} from '@angular/core';\nimport {<a href=\"api/platform-browser/animations/BrowserAnimationsModule\" class=\"code-anchor\">BrowserAnimationsModule</a>} from '@angular/platform-browser/animations';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'example-app',\n  styles: [`\n    .toggle-container {\n      background-color:white;\n      border:10px solid black;\n      width:200px;\n      text-align:center;\n      line-height:100px;\n      font-size:50px;\n      box-sizing:border-box;\n      overflow:hidden;\n    }\n  `],\n  animations: [<a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>(\n      'openClose',\n      [\n        <a href=\"api/animations/state\" class=\"code-anchor\">state</a>('collapsed, void', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({height: '0px', color: 'maroon', borderColor: 'maroon'})),\n        <a href=\"api/animations/state\" class=\"code-anchor\">state</a>('expanded', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({height: '*', borderColor: 'green', color: 'green'})),\n        <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\n            'collapsed &#x3C;=> expanded', [<a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({height: '250px'})), <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)])\n      ])],\n  template: `\n    &#x3C;button (click)=\"expand()\">Open&#x3C;/button>\n    &#x3C;button (click)=\"collapse()\">Closed&#x3C;/button>\n    &#x3C;hr />\n    &#x3C;div class=\"toggle-container\" [@openClose]=\"stateExpression\">\n      Look at this box\n    &#x3C;/div>\n  `\n})\nexport class MyExpandoCmp {\n  stateExpression: string;\n  constructor() { this.collapse(); }\n  expand() { this.stateExpression = 'expanded'; }\n  collapse() { this.stateExpression = 'collapsed'; }\n}\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>(\n    {imports: [<a href=\"api/platform-browser/animations/BrowserAnimationsModule\" class=\"code-anchor\">BrowserAnimationsModule</a>], declarations: [MyExpandoCmp], bootstrap: [MyExpandoCmp]})\nexport class AppModule {\n}\n\n\n</code-example>\n\n</section>\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/animations\n - api/animations/AnimationStateMetadata\n - api/animations/animate\n - api/animations/group\n - api/animations/keyframes\n - api/animations/sequence\n - api/animations/style\n - api/animations/transition\n - api/animations/trigger\n - api/common/HashLocationStrategy\n - api/common/LocationStrategy\n - api/common/PathLocationStrategy\n - api/common/PlatformLocation\n - api/core/Component\n - api/core/state\n - api/forms/SelectControlValueAccessor\n - api/router/CanActivate\n - api/router/CanActivateChild\n - api/router/GuardsCheckEnd\n - api/router/GuardsCheckStart\n - api/router/Resolve\n - api/router/ResolveEnd\n - api/router/ResolveStart\n - api/router/RouterState\n - api/router/RouterStateSnapshot\n - api/router/RoutesRecognized\n - guide/animations\n - guide/i18n\n - guide/reactive-forms\n - guide/router\n - guide/service-worker-devops\n - guide/styleguide\n - guide/template-syntax\n-->\n<!-- links from this doc:\n - api/animations\n - api/animations/AnimationStateMetadata\n - api/animations/AnimationStyleMetadata\n - api/animations/animate\n - api/animations/state#description\n - api/animations/state#state\n - api/animations/state#the--default-state\n - api/animations/state#the-void-state\n - api/animations/state#usage\n - api/animations/style\n - api/animations/transition\n - api/animations/trigger\n - api/common/NgIf\n - api/core/Component\n - api/core/Component#animations\n - api/core/NgModule\n - api/platform-browser/animations/BrowserAnimationsModule\n - api/router/RouterLinkWithHref\n - https://github.com/angular/angular/tree/5.2.11/packages/animations/src/animation_metadata.ts#L535-L588\n - https://www.npmjs.com/package/@angular/animations\n-->"
}