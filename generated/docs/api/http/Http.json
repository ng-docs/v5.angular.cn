{
  "id" : "api/http/Http",
  "title" : "Http",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"http\">Http</h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"api-status-label deprecated\">deprecated</label>\n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/http\">@angular/http</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/http/Http\" class=\"code-anchor\">Http</a> } from <a href=\"api/http\">'@angular/http'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/http/src/http.ts#L42-L185\">http/src/http.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n<section class=\"deprecated\">\n  <h2 id=\"deprecation-notes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dxhln38nrp36303qqb6hgjwp9\"><i class=\"material-icons\">link</i>弃用说明</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"76x00miep182jnm2o7zo0lf26\">改用 @angular/common/http</p>\n\n</section>\n\n  <section class=\"class-overview\">\n<h2 id=\"overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ivgu86loww6mg4fq1brezlnd\"><i class=\"material-icons\">link</i>概览</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/http/Http\" class=\"code-anchor\">Http</a> {\n  <a class=\"code-anchor\" href=\"api/http/Http#constructor()\">constructor(_backend: ConnectionBackend, _defaultOptions: RequestOptions)</a>\n  <a class=\"code-anchor\" href=\"api/http/Http#_backend\">protected _backend: ConnectionBackend</a>\n  <a class=\"code-anchor\" href=\"api/http/Http#_defaultOptions\">protected _defaultOptions: RequestOptions</a>\n  <a class=\"code-anchor\" href=\"api/http/Http#request\">request(url: string | Request, options?: RequestOptionsArgs): Observable&lt;Response&gt;</a>\n  <a class=\"code-anchor\" href=\"api/http/Http#get\">get(url: string, options?: RequestOptionsArgs): Observable&lt;Response&gt;</a>\n  <a class=\"code-anchor\" href=\"api/http/Http#post\">post(url: string, body: any, options?: RequestOptionsArgs): Observable&lt;Response&gt;</a>\n  <a class=\"code-anchor\" href=\"api/http/Http#put\">put(url: string, body: any, options?: RequestOptionsArgs): Observable&lt;Response&gt;</a>\n  <a class=\"code-anchor\" href=\"api/http/Http#delete\">delete(url: string, options?: RequestOptionsArgs): Observable&lt;Response&gt;</a>\n  <a class=\"code-anchor\" href=\"api/http/Http#patch\">patch(url: string, body: any, options?: RequestOptionsArgs): Observable&lt;Response&gt;</a>\n  <a class=\"code-anchor\" href=\"api/http/Http#head\">head(url: string, options?: RequestOptionsArgs): Observable&lt;Response&gt;</a>\n  <a class=\"code-anchor\" href=\"api/http/Http#options\">options(url: string, options?: RequestOptionsArgs): Observable&lt;Response&gt;</a>\n}\n</code-example>\n</section>\n\n  \n\n  \n\n\n<section class=\"description\">\n  <h2 id=\"description\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ar5q09mdsagdppsbze96eagxl\"><i class=\"material-icons\">link</i>说明</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4pupn0h3suoge7xp9lehm0q8w\">使用 \n<code>XMLHttpRequest</code> 作为默认后端执行 http 请求。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"79d8tz4xwz2fyy5avziqruppc\"><code><a href=\"api/http/Http\" class=\"code-anchor\">Http</a></code> 可作为可注入类使用，其中包含用于执行 http 请求的方法。调用 \n<code>request</code> 会返回一个 \n<code>Observable</code>，当接收到响应时，它会发出单个 \n<a href=\"api/http/Response\"><code>Response</code></a>。</p>\n<h3 id=\"example\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\"><i class=\"material-icons\">link</i>范例</h3>\n<code-example language=\"typescript\">\nimport {<a href=\"api/http/Http\" class=\"code-anchor\">Http</a>, HTTP_PROVIDERS} from '@angular/http';\nimport 'rxjs/add/operator/map'\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'http-app',\n  viewProviders: [HTTP_PROVIDERS],\n  templateUrl: 'people.html'\n})\nclass PeopleComponent {\n  constructor(http: <a href=\"api/http/Http\" class=\"code-anchor\">Http</a>) {\n    http.get('people.json')\n      // Call map on the response observable to get the parsed people object\n      .map(res =&gt; res.json())\n      // Subscribe to the observable to get the parsed people object and attach it to the\n      // component\n      .subscribe(people =&gt; this.people = people);\n  }\n}\n</code-example>\n<h3 id=\"example-1\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\"><i class=\"material-icons\">link</i>范例</h3>\n<code-example>\nhttp.get('people.json').subscribe((res:<a href=\"api/http/Response\" class=\"code-anchor\">Response</a>) =&gt; this.people = res.json());\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1328buv8t0m1wygndoo1r5vsg\">用于执行请求的默认构造函数 \n<code>XMLHttpRequest</code> 被抽象为一个“后端”（在本例中为 \n<a href=\"api/http/XHRBackend\"><code>XHRBackend</code></a>），可以通过依赖注入来模拟，方法是替换 \n<a href=\"api/http/XHRBackend\"><code>XHRBackend</code></a> 提供者，如下例所示：</p>\n<h3 id=\"example-2\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\"><i class=\"material-icons\">link</i>范例</h3>\n<code-example language=\"typescript\">\nimport {<a href=\"api/http/BaseRequestOptions\" class=\"code-anchor\">BaseRequestOptions</a>, <a href=\"api/http/Http\" class=\"code-anchor\">Http</a>} from '@angular/http';\nimport {<a href=\"api/http/testing/MockBackend\" class=\"code-anchor\">MockBackend</a>} from '@angular/http/testing';\nvar injector = Injector.resolveAndCreate([\n  <a href=\"api/http/BaseRequestOptions\" class=\"code-anchor\">BaseRequestOptions</a>,\n  <a href=\"api/http/testing/MockBackend\" class=\"code-anchor\">MockBackend</a>,\n  {provide: <a href=\"api/http/Http\" class=\"code-anchor\">Http</a>, useFactory:\n      function(backend, defaultOptions) {\n        return new <a href=\"api/http/Http\" class=\"code-anchor\">Http</a>(backend, defaultOptions);\n      },\n      deps: [<a href=\"api/http/testing/MockBackend\" class=\"code-anchor\">MockBackend</a>, <a href=\"api/http/BaseRequestOptions\" class=\"code-anchor\">BaseRequestOptions</a>]}\n]);\nvar http = injector.get(<a href=\"api/http/Http\" class=\"code-anchor\">Http</a>);\nhttp.get('request-from-mock-backend.json').subscribe((res:<a href=\"api/http/Response\" class=\"code-anchor\">Response</a>) =&gt; doSomething(res));\n</code-example>\n\n</section>\n\n\n  \n  \n  <h2 id=\"subclasses\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2it4mtkmwb3l20bsr7l1ok8c8\"><i class=\"material-icons\">link</i>子类</h2>\n  <ul class=\"descendants class\">\n  \n    <li>\n      <pre class=\"prettyprint lang-ts\"><code><a href=\"api/http/Jsonp\" class=\"code-anchor\">Jsonp</a></code></pre>\n      \n  \n  \n\n    </li>\n  \n  </ul>\n  \n\n\n\n\n\n\n<section class=\"constructors\">\n  <h2 id=\"constructor\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"64p310lbzdqiret0qyhhannvq\"><i class=\"material-icons\">link</i>构造函数</h2>\n  \n    <div class=\"constructor\">\n  <a id=\"constructor()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">constructor(_backend: <a href=\"api/http/ConnectionBackend\" class=\"code-anchor\">ConnectionBackend</a>, _defaultOptions: <a href=\"api/http/RequestOptions\" class=\"code-anchor\">RequestOptions</a>)</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e62kgm2ztk7rgk6auybfiv91o\"><i class=\"material-icons\">link</i>成员</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"_backend\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">protected _backend: <a href=\"api/http/ConnectionBackend\" class=\"code-anchor\">ConnectionBackend</a></code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"_defaultOptions\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">protected _defaultOptions: <a href=\"api/http/RequestOptions\" class=\"code-anchor\">RequestOptions</a></code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"request\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">request(url: string | <a href=\"api/http/Request\" class=\"code-anchor\">Request</a>, options?: <a href=\"api/http/RequestOptionsArgs\" class=\"code-anchor\">RequestOptionsArgs</a>): Observable&lt;<a href=\"api/http/Response\" class=\"code-anchor\">Response</a>&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e84qj6ocwmp2l0d2crou4xdqs\">执行任何类型的 http 请求。第一个参数是必需的，可以是 url 或 \n<a href=\"api/http/Request\"><code>Request</code></a> 实例。如果第一个参数是 url，则可以提供可选的 \n<a href=\"api/http/RequestOptions\"><code>RequestOptions</code></a> 对象作为第二个参数。在执行请求之前，选项对象将与 \n<a href=\"api/http/BaseRequestOptions\"><code>BaseRequestOptions</code></a> 的值合并。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"get\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options?: <a href=\"api/http/RequestOptionsArgs\" class=\"code-anchor\">RequestOptionsArgs</a>): Observable&lt;<a href=\"api/http/Response\" class=\"code-anchor\">Response</a>&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1b3fwza6f7od24rfaz7sm2loy\">使用 \n<code>get</code> http 方法执行请求。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"post\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any, options?: <a href=\"api/http/RequestOptionsArgs\" class=\"code-anchor\">RequestOptionsArgs</a>): Observable&lt;<a href=\"api/http/Response\" class=\"code-anchor\">Response</a>&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"98f5g30s89ekj6kllhxexec63\">使用 \n<code>post</code> http 方法执行请求。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"put\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any, options?: <a href=\"api/http/RequestOptionsArgs\" class=\"code-anchor\">RequestOptionsArgs</a>): Observable&lt;<a href=\"api/http/Response\" class=\"code-anchor\">Response</a>&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bcug8oigpv0hha1u7uxfj9s19\">使用 \n<code>put</code> http 方法执行请求。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"delete\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options?: <a href=\"api/http/RequestOptionsArgs\" class=\"code-anchor\">RequestOptionsArgs</a>): Observable&lt;<a href=\"api/http/Response\" class=\"code-anchor\">Response</a>&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"300h0o6xcfofddj6qbiy2oi32\">使用 \n<code>delete</code> http 方法执行请求。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"patch\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any, options?: <a href=\"api/http/RequestOptionsArgs\" class=\"code-anchor\">RequestOptionsArgs</a>): Observable&lt;<a href=\"api/http/Response\" class=\"code-anchor\">Response</a>&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"en3owppspy9zn46t7v9ugdnpx\">使用 \n<code>patch</code> http 方法执行请求。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"head\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options?: <a href=\"api/http/RequestOptionsArgs\" class=\"code-anchor\">RequestOptionsArgs</a>): Observable&lt;<a href=\"api/http/Response\" class=\"code-anchor\">Response</a>&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a0rkg9rxg5sm9czhgut5a2p3g\">使用 \n<code>head</code> http 方法执行请求。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"options\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options?: <a href=\"api/http/RequestOptionsArgs\" class=\"code-anchor\">RequestOptionsArgs</a>): Observable&lt;<a href=\"api/http/Response\" class=\"code-anchor\">Response</a>&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5v2atseufr0fby0fd3kf2xej9\">使用 \n<code>options</code> http 方法执行请求。</p>\n\n  </div>\n\n    \n    \n  \n</section>\n\n\n\n<section class=\"annotations\">\n  <h2 id=\"annotations\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ptfpgifdyh5hp4kme5clquv2\"><i class=\"material-icons\">link</i>注解</h2>\n    <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()</code-example>\n    \n  \n</section>\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/http\n - api/http/BaseRequestOptions\n - api/http/BaseResponseOptions\n - api/http/HttpModule\n - api/http/Jsonp\n - api/http/Request\n - api/http/XHRBackend\n - api/http/testing/MockBackend\n - api/http/testing/MockConnection\n - guide/http\n - guide/pipes\n - guide/styleguide\n - guide/upgrade\n - tutorial/toh-pt5\n - tutorial/toh-pt6\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/core/Injectable\n - api/http\n - api/http/BaseRequestOptions\n - api/http/ConnectionBackend\n - api/http/Http#_backend\n - api/http/Http#_defaultOptions\n - api/http/Http#annotations\n - api/http/Http#constructor\n - api/http/Http#constructor()\n - api/http/Http#delete\n - api/http/Http#deprecation-notes\n - api/http/Http#description\n - api/http/Http#example\n - api/http/Http#example-1\n - api/http/Http#example-2\n - api/http/Http#get\n - api/http/Http#head\n - api/http/Http#http\n - api/http/Http#members\n - api/http/Http#options\n - api/http/Http#overview\n - api/http/Http#patch\n - api/http/Http#post\n - api/http/Http#put\n - api/http/Http#request\n - api/http/Http#subclasses\n - api/http/Jsonp\n - api/http/Request\n - api/http/RequestOptions\n - api/http/RequestOptionsArgs\n - api/http/Response\n - api/http/XHRBackend\n - api/http/testing/MockBackend\n - https://github.com/angular/angular/tree/5.2.11/packages/http/src/http.ts#L42-L185\n - https://www.npmjs.com/package/@angular/http\n-->"
}