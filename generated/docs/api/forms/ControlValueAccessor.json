{
  "id": "api/forms/ControlValueAccessor",
  "title": "ControlValueAccessor",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"controlvalueaccessor\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#controlvalueaccessor\"><i class=\"material-icons\">link</i></a>ControlValueAccessor</h1>\n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/forms\">@angular/forms</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { <a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a> } from <a href=\"api/forms\">'@angular/forms'</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/forms/src/directives/control_value_accessor.ts#L10-L110\">forms/src/directives/control_value_accessor.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"interface-overview\">\n<h2 id=\"interface-overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#interface-overview\"><i class=\"material-icons\">link</i></a>Interface Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a> { \n  <a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#writeValue\">writeValue(obj: any): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#registerOnChange\">registerOnChange(fn: any): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#registerOnTouched\">registerOnTouched(fn: any): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#setDisabledState\">setDisabledState(isDisabled: boolean)?: void</a>\n}\n</code-example>\n</section>\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p>A <code><a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a></code> acts as a bridge between the Angular forms API and a\nnative element in the DOM.</p>\n<p>Implement this interface if you want to create a custom form control directive\nthat integrates with Angular forms.</p>\n\n</section>\n\n  \n  \n  \n\n  \n  \n  \n\n  \n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"writeValue\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">writeValue(obj: any): void</code-example>\n  <p>Writes a new value to the element.</p>\n<p>This method will be called by the forms API to write to the view when programmatic\n(model -> view) changes are requested.</p>\n<p>Example implementation of <code>writeValue</code>:</p>\n<code-example language=\"ts\">\nwriteValue(value: any): void {\n  this._renderer.setProperty(this._elementRef.nativeElement, 'value', value);\n}\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"registerOnChange\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">registerOnChange(fn: any): void</code-example>\n  <p>Registers a callback function that should be called when the control's value\nchanges in the UI.</p>\n<p>This is called by the forms API on initialization so it can update the form\nmodel when values propagate from the view (view -> model).</p>\n<p>If you are implementing <code>registerOnChange</code> in your own value accessor, you\nwill typically want to save the given function so your class can call it\nat the appropriate time.</p>\n<code-example language=\"ts\">\nregisterOnChange(fn: (_: any) => void): void {\n  this._onChange = fn;\n}\n</code-example>\n<p>When the value changes in the UI, your class should call the registered\nfunction to allow the forms API to update itself:</p>\n<code-example language=\"ts\">\nhost: {\n   (change): '_onChange($event.target.value)'\n}\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"registerOnTouched\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">registerOnTouched(fn: any): void</code-example>\n  <p>Registers a callback function that should be called when the control receives\na blur event.</p>\n<p>This is called by the forms API on initialization so it can update the form model\non blur.</p>\n<p>If you are implementing <code>registerOnTouched</code> in your own value accessor, you\nwill typically want to save the given function so your class can call it\nwhen the control should be considered blurred (a.k.a. \"touched\").</p>\n<code-example language=\"ts\">\nregisterOnTouched(fn: any): void {\n  this._onTouched = fn;\n}\n</code-example>\n<p>On blur (or equivalent), your class should call the registered function to allow\nthe forms API to update itself:</p>\n<code-example language=\"ts\">\nhost: {\n   '(blur)': '_onTouched()'\n}\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"setDisabledState\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">setDisabledState(isDisabled: boolean)?: void</code-example>\n  <p>This function is called by the forms API when the control status changes to\nor from \"DISABLED\". Depending on the value, it should enable or disable the\nappropriate DOM element.</p>\n<p>Example implementation of <code>setDisabledState</code>:</p>\n<code-example language=\"ts\">\nsetDisabledState(isDisabled: boolean): void {\n  this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n}\n</code-example>\n\n  </div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/forms\n - api/forms/CheckboxControlValueAccessor\n - api/forms/DefaultValueAccessor\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/NG_VALUE_ACCESSOR\n - api/forms/NgControl\n - api/forms/NgModel\n - api/forms/RadioControlValueAccessor\n - api/forms/SelectControlValueAccessor\n - api/forms/SelectMultipleControlValueAccessor\n - api/upgrade/UpgradeAdapter\n - guide/template-syntax\n-->\n<!-- links from this doc:\n - api/forms\n - api/forms/ControlValueAccessor#controlvalueaccessor\n - api/forms/ControlValueAccessor#description\n - api/forms/ControlValueAccessor#interface-overview\n - api/forms/ControlValueAccessor#members\n - api/forms/ControlValueAccessor#registerOnChange\n - api/forms/ControlValueAccessor#registerOnTouched\n - api/forms/ControlValueAccessor#setDisabledState\n - api/forms/ControlValueAccessor#writeValue\n - https://github.com/angular/angular/tree/5.2.11/packages/forms/src/directives/control_value_accessor.ts#L10-L110\n - https://www.npmjs.com/package/@angular/forms\n-->"
}