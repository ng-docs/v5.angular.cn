{
  "id" : "api/forms/AbstractControl",
  "title" : "AbstractControl",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"abstractcontrol\">AbstractControl</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/forms\">@angular/forms</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a> } from <a href=\"api/forms\">'@angular/forms'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/forms/src/model.ts#L95-L637\">forms/src/model.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"djhzvdwvebu1tw668m0eb8zjm\">这是 \n<a href=\"api/forms/FormControl\"><code>FormControl</code></a>、\n<a href=\"api/forms/FormGroup\"><code>FormGroup</code></a> 和 \n<a href=\"api/forms/FormArray\"><code>FormArray</code></a> 的基类。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"1z6p56enss8ynmyifasjy8icr\">它提供了一些所有控件和控件组共有的行为，比如运行验证器、计算状态和重置状态。\n它还定义了一些所有子类共享的属性，如 <code>value</code>、<code>valid</code> 和 <code>dirty</code>。不允许直接实例化它。</p>\n\n</div>\n\n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ivgu86loww6mg4fq1brezlnd\"><i class=\"material-icons\">link</i>概览</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a> {\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#constructor()\">constructor(validator: ValidatorFn | null, asyncValidator: AsyncValidatorFn | null)</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#value\">get value: any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#validator\">validator: ValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#asyncValidator\">asyncValidator: AsyncValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#parent\">get parent: FormGroup | FormArray</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#status\">get status: string</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valid\">get valid: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#invalid\">get invalid: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pending\">get pending: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disabled\">get disabled: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enabled\">get enabled: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#errors\">get errors: ValidationErrors | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pristine\">get pristine: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#dirty\">get dirty: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#touched\">get touched: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#untouched\">get untouched: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valueChanges\">get valueChanges: Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#statusChanges\">get statusChanges: Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateOn\">get updateOn: FormHooks</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValidators\">setValidators(newValidator: ValidatorFn | ValidatorFn[] | null): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setAsyncValidators\">setAsyncValidators(newValidator: AsyncValidatorFn | AsyncValidatorFn[] | null): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearValidators\">clearValidators(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearAsyncValidators\">clearAsyncValidators(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsTouched\">markAsTouched(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsUntouched\">markAsUntouched(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsDirty\">markAsDirty(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPristine\">markAsPristine(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPending\">markAsPending(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disable\">disable(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enable\">enable(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setParent\">setParent(parent: FormGroup | FormArray): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValue\">setValue(value: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#patchValue\">patchValue(value: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#reset\">reset(value?: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setErrors\">setErrors(errors: ValidationErrors | null, opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\">get(path: Array&lt;string | number&gt; | string): AbstractControl | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#getError\">getError(errorCode: string, path?: string[]): any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasError\">hasError(errorCode: string, path?: string[]): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#root\">get root: AbstractControl</a>\n}\n</code-example>\n</section>\n\n  \n\n  \n\n\n\n  \n  \n  <h2 id=\"subclasses\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2it4mtkmwb3l20bsr7l1ok8c8\"><i class=\"material-icons\">link</i>子类</h2>\n  <ul class=\"descendants class\">\n  \n    <li>\n      <pre class=\"prettyprint lang-ts\"><code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code></pre>\n      \n  \n  \n\n    </li>\n  \n    <li>\n      <pre class=\"prettyprint lang-ts\"><code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code></pre>\n      \n  \n  \n\n    </li>\n  \n    <li>\n      <pre class=\"prettyprint lang-ts\"><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code></pre>\n      \n  \n  \n\n    </li>\n  \n  </ul>\n  \n\n\n\n\n\n\n<section class=\"constructors\">\n  <h2 id=\"constructor\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"64p310lbzdqiret0qyhhannvq\"><i class=\"material-icons\">link</i>构造函数</h2>\n  \n    <div class=\"constructor\">\n  <a id=\"constructor()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">constructor(validator: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | null, asyncValidator: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | null)</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e62kgm2ztk7rgk6auybfiv91o\"><i class=\"material-icons\">link</i>成员</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"value\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get value: any</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"validator\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">validator: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | null</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"asyncValidator\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">asyncValidator: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | null</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"parent\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get parent: <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a> | <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"csk7n5qnmlvg3b5zlef1zz0cr\">父控件。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"status\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get status: string</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7wl0apcir66qyvzb356cxddxg\">控件的验证状态。有四种可能的验证状态：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"38zjcccywze24fqtvev8g33yp\"><strong>VALID</strong>：控件已通过所有验证检查</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6e1667bjg5k5zpaxfpmpzuxjb\"><strong>INVALID</strong>：控件至少未通过一项验证检查</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"157fvnlrtiww98f2oj4oumi2g\"><strong>PENDING</strong>：控件正在进行验证检查</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bj7h6jso5wcprs71ckjdht6zf\"><strong>DISABLED</strong>：控件免于验证检查</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e7cbgo3vx5l6mq8upy1sursa9\">这些状态是互斥的，因此控件不能同时处于有效和无效状态，或无效和禁用状态。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"valid\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get valid: boolean</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9o3maizu3acw6xgrmma6qhz3z\">当控件的 \n<code>status === VALID</code> 时，该控件为 \n<code>valid</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"su8j9oe9r0oj97np05yx8o79\">为了具有此状态，控件必须通过所有验证检查。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"invalid\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get invalid: boolean</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"wc9417pp0j6vl7sn9yicmxmn\">当控件的 \n<code>status === INVALID</code> 时，该控件为 \n<code>invalid</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b78bctorqj293f05y8w3i0ikm\">为了具有此状态，控件必须至少失败 一项验证检查。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"pending\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get pending: boolean</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4i1jbvyfi0s8lnxt0llfs9zor\">当控件的 \n<code>status === PENDING</code> 时，该控件为 \n<code>pending</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1vavst21wjed7uykq0f5rjt87\">为了具有此状态，控件必须处于 正在进行验证检查的中间状态。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"disabled\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get disabled: boolean</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"afd0r0v1wd5f5em9we5d6aihl\">当控件的 \n<code>status === DISABLED</code> 时，该控件为 \n<code>disabled</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"92ib9ig6y6rjoslndkt83cuhz\">禁用的控件免于验证检查， 并且不包含在其祖先控件的聚合值中。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"enabled\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get enabled: boolean</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"25sgy1a3nrm1lp14hjm73nb1e\">只要控件的 \n<code>status !== DISABLED</code>，该控件就为 \n<code>enabled</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aik7yjo5kzpl1k06nafuxrjht\">换句话说，它的状态为 \n<code>VALID</code>、\n<code>INVALID</code> 或 \n<code>PENDING</code>。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"errors\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get errors: <a href=\"api/forms/ValidationErrors\" class=\"code-anchor\">ValidationErrors</a> | null</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"28mdpxcl50urbjvn01g6057sl\">返回验证失败时生成的任何错误。如果没有 错误，它将返回 null。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"pristine\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get pristine: boolean</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"9e33nbvtvrqcvufluisohw949\">如果用户尚未修改 UI 中的值，则该控件是 <code>pristine</code>（原始状态）的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"azgune0kveat00cj9u8848d60\">注意，对控件值的编程更改将 \n<em>不会</em>将其标记为脏。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"dirty\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get dirty: boolean</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"7voy5kjkv5blo9xlbm4fddpv1\">如果用户修改过 UI 中的值，则控件是 <code>dirty</code>（脏） 的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"azgune0kveat00cj9u8848d60\">注意，对控件值的编程更改将 \n<em>不会</em>将其标记为脏。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"touched\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get touched: boolean</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"773suu76fb1nexhtr14xb81no\">一旦用户在控件上触发了 <code>blur</code> 事件，则会将其标记为 <code>touched</code>。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"untouched\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get untouched: boolean</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"4b8isyyvgrtcmhrqbv0ttp0cs\">如果用户尚未在控件上触发过 <code>blur</code> 事件，则该控件为 <code>untouched</code>。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"valueChanges\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get valueChanges: Observable&lt;any&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4i6qecy694kuo6a0m96avbef2\">每当控件的值在 UI 或以编程方式更改时，都会发出一个事件。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"statusChanges\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get statusChanges: Observable&lt;any&gt;</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bv1eezqs92i3so5h8w9lhfb2w\">每当重新计算控件的验证状态时，都会发出一个事件。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"updateOn\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get updateOn: FormHooks</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"456dad1jrbn9i4bjmcfrhirs1\">返回 \n<code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> 的更新策略（即控件将更新自身的事件）。 可能的值：\n<code>'change'</code>（默认）| \n<code>'blur'</code> | \n<code>'submit'</code></p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"setValidators\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">setValidators(newValidator: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[] | null): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9roamtkiqpr049x494x6jdbko\">设置在此控件上处于活动状态的同步验证器。调用此方法将覆盖任何现有的同步验证器。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"setAsyncValidators\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">setAsyncValidators(newValidator: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[] | null): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"313xkkxf1sbz2oawc81x8s3ds\">设置在此控件上处于活动状态的异步验证器。调用此方法将覆盖任何现有的异步验证器。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"clearValidators\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">clearValidators(): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajhtun9v367himtoum7m1l6i8\">清空同步验证器列表。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"clearAsyncValidators\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">clearAsyncValidators(): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"43qcmbhvqmgamli6xfb4w8cn6\">清空异步验证器列表。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"markAsTouched\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">markAsTouched(opts: {\n    onlySelf?: boolean;\n} = {}): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4j50k36k8f121bqyiu5efwiyc\">将控件标记为 \n<code>touched</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cbn3tgafno7zyctj889xt9g12\">这也会将所有直接祖先标记为 \n<code>touched</code> 以维护模型。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"markAsUntouched\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">markAsUntouched(opts: {\n    onlySelf?: boolean;\n} = {}): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"8err5y4legauwynv5tto24hmh\">把该控件标记为 <code>untouched</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"10snj76etgww40h6qgkhy7rwi\">如果控件有任何子控件，它也会将所有子控件标记为 \n<code>untouched</code> 以维护模型，并重新计算所有父控件的 \n<code>touched</code> 状态。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"markAsDirty\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">markAsDirty(opts: {\n    onlySelf?: boolean;\n} = {}): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1s1eb7ajiafhw41f2lfhf6t7g\">将控件标记为 \n<code>dirty</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"82h41mpiaqpfo674se1ne1xiq\">这也会将所有直接祖先标记为 \n<code>dirty</code> 以维护模型。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"markAsPristine\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">markAsPristine(opts: {\n    onlySelf?: boolean;\n} = {}): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"6s2avh8sau3fwk9ptnlcoxrw3\">把该控件标记为 <code>pristine</code>（原始状态）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"50sus9tlt45so8rg7tb6utzw8\">如果控件有任何子控件，它也会将所有子控件标记为 \n<code>pristine</code> 以维护模型，并重新计算所有父控件的 \n<code>pristine</code> 状态。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"markAsPending\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">markAsPending(opts: {\n    onlySelf?: boolean;\n} = {}): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"b24wly4ltwyq3n49zkkiz04cu\">把该控件标记为 <code>pending</code>（待定）的。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"disable\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">disable(opts: {\n    onlySelf?: boolean;\n    emitEvent?: boolean;\n} = {}): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ksf8z44yfxmczxcb9khr0vj3\">禁用控件。这意味着控件将免于验证检查，并且将从任何父控件的聚合值中排除。其状态为 \n<code>DISABLED</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"as97993zt2ghgrgo1eu5dv5fa\">如果控件有子控件，所有子控件都将被禁用以维护模型。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"enable\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">enable(opts: {\n    onlySelf?: boolean;\n    emitEvent?: boolean;\n} = {}): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"97axy0hdzpj048zz82u2ls23x\">启用控件。这意味着控件将包含在验证检查中，以及其父控件的聚合值中。其状态将根据其值和验证器重新计算。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"buefj1akl3kvfxmwnodl5xnji\">如果控件有子控件，所有子控件都将被启用。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"setParent\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">setParent(parent: <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a> | <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>): void</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"setValue\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">setValue(value: any, options?: Object): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"5n7rpdtjjczp9vj37ezyliby3\">设置该控件的值。这是一个抽象方法（由子类实现）。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"patchValue\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patchValue(value: any, options?: Object): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"cdjticj6rdeco6nvpiv94skvt\">修补（patch）该控件的值。这是一个抽象方法（由子类实现）。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"reset\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">reset(value?: any, options?: Object): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"4h4pfdckxdijzvsvnhwpxll8l\">重置控件。这是一个抽象方法（由子类实现）。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"updateValueAndValidity\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">updateValueAndValidity(opts: {\n    onlySelf?: boolean;\n    emitEvent?: boolean;\n} = {}): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d82aigs3r7mqei9q0s8rivuz4\">重新计算控件的值和验证状态。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8sj0kqswnqzylz6xeo0su4tbq\">默认情况下，它还会更新其祖先的值和有效性。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"setErrors\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">setErrors(errors: <a href=\"api/forms/ValidationErrors\" class=\"code-anchor\">ValidationErrors</a> | null, opts: {\n    emitEvent?: boolean;\n} = {}): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cbzynzks32rns2rljmmqo020a\">在表单控件上设置错误。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bknw466qtj0djsgovhmsg00au\">当验证由用户手动运行而不是自动运行时，使用此方法。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ruxbxhsrbcjppekgizbilso7\">调用 \n<code>setErrors</code> 也会更新父控件的有效性。</p>\n<h3 id=\"example\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\"><i class=\"material-icons\">link</i>范例</h3>\n<code-example>\nconst login = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(\"someLogin\");\nlogin.setErrors({\n  \"notUnique\": true\n});\n\nexpect(login.valid).toEqual(false);\nexpect(login.errors).toEqual({\"notUnique\": true});\n\nlogin.setValue(\"someOtherLogin\");\n\nexpect(login.valid).toEqual(true);\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"get\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get(path: Array&lt;string | number&gt; | string): <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a> | null</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"cpihbxwertxxykqcdkemcsfuj\">根据指定的控件名称或路径获取子控件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2fgb2ns1x7rihwl5hm02kznzx\">路径可以作为数组或以点分隔的字符串传递。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"elrqqq6f8huh30v7chwfsxlj9\">要获取嵌套在 \n<code>person</code> 子组中的控件：</p>\n<ul>\n<li><code>this.form.get('person.name');</code></li>\n</ul>\n<p>-OR-</p>\n<ul>\n<li><code>this.form.get(['person', 'name']);</code></li>\n</ul>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"getError\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">getError(errorCode: string, path?: string[]): any</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7jy8udtslsw6q217fyhupoq0w\">如果具有给定路径的控件存在指定的错误，则返回错误数据。否则返回 null 或 undefined。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6can5in80d8lau7hd663izsfx\">如果没有给出路径，则检查当前控件是否存在错误。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"hasError\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">hasError(errorCode: string, path?: string[]): boolean</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bo0cixoymbi9o5o894t7vv4ac\">如果具有给定路径的控件存在指定的错误，则返回 true。否则返回 false。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6can5in80d8lau7hd663izsfx\">如果没有给出路径，则检查当前控件是否存在错误。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"root\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">get root: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"455f45kua415xmvgqse91fw3v\">获取该控件的顶级祖先。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/forms\n - api/forms/AbstractControlDirective\n - api/forms/AsyncValidator\n - api/forms/AsyncValidatorFn\n - api/forms/CheckboxRequiredValidator\n - api/forms/EmailValidator\n - api/forms/FormArray\n - api/forms/FormArrayName\n - api/forms/FormBuilder\n - api/forms/FormControl\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/FormGroup\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/MaxLengthValidator\n - api/forms/MinLengthValidator\n - api/forms/NG_VALIDATORS\n - api/forms/NgForm\n - api/forms/PatternValidator\n - api/forms/RequiredValidator\n - api/forms/Validator\n - api/forms/ValidatorFn\n - api/forms/Validators\n - guide/form-validation\n - guide/reactive-forms\n-->\n<!-- links from this doc:\n - api/forms\n - api/forms/AbstractControl#abstractcontrol\n - api/forms/AbstractControl#asyncValidator\n - api/forms/AbstractControl#clearAsyncValidators\n - api/forms/AbstractControl#clearValidators\n - api/forms/AbstractControl#constructor\n - api/forms/AbstractControl#constructor()\n - api/forms/AbstractControl#dirty\n - api/forms/AbstractControl#disable\n - api/forms/AbstractControl#disabled\n - api/forms/AbstractControl#enable\n - api/forms/AbstractControl#enabled\n - api/forms/AbstractControl#errors\n - api/forms/AbstractControl#example\n - api/forms/AbstractControl#get\n - api/forms/AbstractControl#getError\n - api/forms/AbstractControl#hasError\n - api/forms/AbstractControl#invalid\n - api/forms/AbstractControl#markAsDirty\n - api/forms/AbstractControl#markAsPending\n - api/forms/AbstractControl#markAsPristine\n - api/forms/AbstractControl#markAsTouched\n - api/forms/AbstractControl#markAsUntouched\n - api/forms/AbstractControl#members\n - api/forms/AbstractControl#overview\n - api/forms/AbstractControl#parent\n - api/forms/AbstractControl#patchValue\n - api/forms/AbstractControl#pending\n - api/forms/AbstractControl#pristine\n - api/forms/AbstractControl#reset\n - api/forms/AbstractControl#root\n - api/forms/AbstractControl#setAsyncValidators\n - api/forms/AbstractControl#setErrors\n - api/forms/AbstractControl#setParent\n - api/forms/AbstractControl#setValidators\n - api/forms/AbstractControl#setValue\n - api/forms/AbstractControl#status\n - api/forms/AbstractControl#statusChanges\n - api/forms/AbstractControl#subclasses\n - api/forms/AbstractControl#touched\n - api/forms/AbstractControl#untouched\n - api/forms/AbstractControl#updateOn\n - api/forms/AbstractControl#updateValueAndValidity\n - api/forms/AbstractControl#valid\n - api/forms/AbstractControl#validator\n - api/forms/AbstractControl#value\n - api/forms/AbstractControl#valueChanges\n - api/forms/AsyncValidatorFn\n - api/forms/FormArray\n - api/forms/FormControl\n - api/forms/FormGroup\n - api/forms/ValidationErrors\n - api/forms/ValidatorFn\n - https://github.com/angular/angular/tree/5.2.11/packages/forms/src/model.ts#L95-L637\n - https://www.npmjs.com/package/@angular/forms\n-->"
}