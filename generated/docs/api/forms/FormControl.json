{
  "id": "api/forms/FormControl",
  "title": "FormControl",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"formcontrol\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControl#formcontrol\"><i class=\"material-icons\">link</i></a>FormControl</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/forms\">@angular/forms</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a> } from <a href=\"api/forms\">'@angular/forms'</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/forms/src/model.ts#L638-L875\">forms/src/model.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p>Tracks the value and validation status of an individual form control.</p>\n<p>It is one of the three fundamental building blocks of Angular forms, along with\n<a href=\"api/forms/FormGroup\"><code>FormGroup</code></a> and <a href=\"api/forms/FormArray\"><code>FormArray</code></a>.</p>\n\n</div>\n\n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControl#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a> extends <a class=\"code-anchor\" href=\"api/forms/AbstractControl\">AbstractControl</a> {\n  <a class=\"code-anchor\" href=\"api/forms/FormControl#constructor()\">constructor(formState: any = null, validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null, asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null)</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControl#setValue\">setValue(value: any, options: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControl#patchValue\">patchValue(value: any, options: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControl#reset\">reset(formState: any = null, options: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControl#registerOnChange\">registerOnChange(fn: Function): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControl#registerOnDisabledChange\">registerOnDisabledChange(fn: (isDisabled: boolean) => void): void</a>\n  // inherited from <a class=\"code-anchor\" href=\"api/forms/AbstractControl\">forms/AbstractControl</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#value\">get value: any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#validator\">validator: ValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#asyncValidator\">asyncValidator: AsyncValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#parent\">get parent: FormGroup | FormArray</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#status\">get status: string</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valid\">get valid: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#invalid\">get invalid: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pending\">get pending: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disabled\">get disabled: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enabled\">get enabled: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#errors\">get errors: ValidationErrors | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pristine\">get pristine: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#dirty\">get dirty: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#touched\">get touched: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#untouched\">get untouched: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valueChanges\">get valueChanges: Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#statusChanges\">get statusChanges: Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateOn\">get updateOn: FormHooks</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValidators\">setValidators(newValidator: ValidatorFn | ValidatorFn[] | null): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setAsyncValidators\">setAsyncValidators(newValidator: AsyncValidatorFn | AsyncValidatorFn[] | null): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearValidators\">clearValidators(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearAsyncValidators\">clearAsyncValidators(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsTouched\">markAsTouched(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsUntouched\">markAsUntouched(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsDirty\">markAsDirty(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPristine\">markAsPristine(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPending\">markAsPending(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disable\">disable(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enable\">enable(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setParent\">setParent(parent: FormGroup | FormArray): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValue\">setValue(value: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#patchValue\">patchValue(value: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#reset\">reset(value?: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setErrors\">setErrors(errors: ValidationErrors | null, opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\">get(path: Array&#x3C;string | number> | string): AbstractControl | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#getError\">getError(errorCode: string, path?: string[]): any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasError\">hasError(errorCode: string, path?: string[]): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#root\">get root: AbstractControl</a>\n}\n</code-example>\n</section>\n\n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControl#how-to-use\"><i class=\"material-icons\">link</i></a>How To Use</h2>\n  <p>When instantiating a <a href=\"api/forms/FormControl\"><code>FormControl</code></a>, you can pass in an initial value as the\nfirst argument. Example:</p>\n<code-example language=\"ts\">\nconst ctrl = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('some value');\nconsole.log(ctrl.value);     // 'some value'\n</code-example>\n<p>You can also initialize the control with a form state object on instantiation,\nwhich includes both the value and whether or not the control is disabled.\nYou can't use the value key without the disabled key; both are required\nto use this way of initialization.</p>\n<code-example language=\"ts\">\nconst ctrl = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>({value: 'n/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>', disabled: true});\nconsole.log(ctrl.value);     // 'n/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>'\nconsole.log(ctrl.status);   // 'DISABLED'\n</code-example>\n<p>The second <a href=\"api/forms/FormControl\"><code>FormControl</code></a> argument can accept one of three things:</p>\n<ul>\n<li>a sync validator function</li>\n<li>an array of sync validator functions</li>\n<li>an options object containing validator and/or async validator functions</li>\n</ul>\n<p>Example of a single sync validator function:</p>\n<code-example language=\"ts\">\nconst ctrl = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('', Validators.required);\nconsole.log(ctrl.value);     // ''\nconsole.log(ctrl.status);   // 'INVALID'\n</code-example>\n<p>Example using options object:</p>\n<code-example language=\"ts\">\nconst ctrl = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('', {\n   validators: Validators.required,\n   asyncValidators: myAsyncValidator\n});\n</code-example>\n<p>The options object can also be used to define when the control should update.\nBy default, the value and validity of a control updates whenever the value\nchanges. You can configure it to update on the blur event instead by setting\nthe <code>updateOn</code> option to <code>'blur'</code>.</p>\n<code-example language=\"ts\">\nconst c = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('', { updateOn: 'blur' });\n</code-example>\n<p>You can also set <code>updateOn</code> to <code>'submit'</code>, which will delay value and validity\nupdates until the parent form of the control fires a submit event.</p>\n<p>See its superclass, <a href=\"api/forms/AbstractControl\"><code>AbstractControl</code></a>, for more properties and methods.</p>\n<ul>\n<li><strong>npm package</strong>: <code>@angular/forms</code></li>\n</ul>\n\n</section>\n\n\n  \n\n\n\n  \n  \n\n\n\n\n\n\n<section class=\"constructors\">\n  <h2 id=\"constructor\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControl#constructor\"><i class=\"material-icons\">link</i></a>Constructor</h2>\n  \n    <div class=\"constructor\">\n  <a id=\"constructor()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">constructor(formState: any = null, validatorOrOpts?: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[] | AbstractControlOptions | null, asyncValidator?: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[] | null)</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControl#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"setValue\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">setValue(value: any, options: {\n    onlySelf?: boolean;\n    emitEvent?: boolean;\n    emitModelToViewChange?: boolean;\n    emitViewToModelChange?: boolean;\n} = {}): void</code-example>\n  <p>Set the value of the form control to <code>value</code>.</p>\n<p>If <code>onlySelf</code> is <code>true</code>, this change will only affect the validation of this <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>\nand not its parent component. This defaults to false.</p>\n<p>If <code>emitEvent</code> is <code>true</code>, this\nchange will cause a <code>valueChanges</code> event on the <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> to be emitted. This defaults\nto true (as it falls through to <code>updateValueAndValidity</code>).</p>\n<p>If <code>emitModelToViewChange</code> is <code>true</code>, the view will be notified about the new value\nvia an <code>onChange</code> event. This is the default behavior if <code>emitModelToViewChange</code> is not\nspecified.</p>\n<p>If <code>emitViewToModelChange</code> is <code>true</code>, an ngModelChange event will be fired to update the\nmodel.  This is the default behavior if <code>emitViewToModelChange</code> is not specified.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"patchValue\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patchValue(value: any, options: {\n    onlySelf?: boolean;\n    emitEvent?: boolean;\n    emitModelToViewChange?: boolean;\n    emitViewToModelChange?: boolean;\n} = {}): void</code-example>\n  <p>Patches the value of a control.</p>\n<p>This function is functionally the same as <a href=\"api/forms/FormControl#setValue\">setValue</a> at this level.\nIt exists for symmetry with <a href=\"api/forms/FormGroup#patchValue\">patchValue</a> on <code>FormGroups</code> and\n<code>FormArrays</code>, where it does behave differently.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"reset\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">reset(formState: any = null, options: {\n    onlySelf?: boolean;\n    emitEvent?: boolean;\n} = {}): void</code-example>\n  <p>Resets the form control. This means by default:</p>\n<ul>\n<li>it is marked as <code>pristine</code></li>\n<li>it is marked as <code>untouched</code></li>\n<li>value is set to null</li>\n</ul>\n<p>You can also reset to a specific form state by passing through a standalone\nvalue or a form state object that contains both a value and a disabled state\n(these are the only two properties that cannot be calculated).</p>\n<p>Ex:</p>\n<code-example language=\"ts\">\nthis.control.reset('Nancy');\n\nconsole.log(this.control.value);  // 'Nancy'\n</code-example>\n<p>OR</p>\n<code-example>\nthis.control.reset({value: 'Nancy', disabled: true});\n\nconsole.log(this.control.value);  // 'Nancy'\nconsole.log(this.control.status);  // 'DISABLED'\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"registerOnChange\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">registerOnChange(fn: Function): void</code-example>\n  <p>Register a listener for change events.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"registerOnDisabledChange\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">registerOnDisabledChange(fn: (isDisabled: boolean) => void): void</code-example>\n  <p>Register a listener for disabled events.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/forms\n - api/forms/AbstractControl\n - api/forms/AbstractControlDirective\n - api/forms/Form\n - api/forms/FormArray\n - api/forms/FormArrayName\n - api/forms/FormBuilder\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/FormGroup\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/NG_ASYNC_VALIDATORS\n - api/forms/NG_VALIDATORS\n - api/forms/NgControl\n - api/forms/NgForm\n - api/forms/NgModel\n - api/forms/RadioControlValueAccessor\n - api/forms/SelectControlValueAccessor\n - api/forms/Validators\n - guide/dynamic-form\n - guide/form-validation\n - guide/forms\n - guide/glossary\n - guide/reactive-forms\n-->\n<!-- links from this doc:\n - api/forms\n - api/forms/AbstractControl\n - api/forms/AbstractControl#asyncValidator\n - api/forms/AbstractControl#clearAsyncValidators\n - api/forms/AbstractControl#clearValidators\n - api/forms/AbstractControl#dirty\n - api/forms/AbstractControl#disable\n - api/forms/AbstractControl#disabled\n - api/forms/AbstractControl#enable\n - api/forms/AbstractControl#enabled\n - api/forms/AbstractControl#errors\n - api/forms/AbstractControl#get\n - api/forms/AbstractControl#getError\n - api/forms/AbstractControl#hasError\n - api/forms/AbstractControl#invalid\n - api/forms/AbstractControl#markAsDirty\n - api/forms/AbstractControl#markAsPending\n - api/forms/AbstractControl#markAsPristine\n - api/forms/AbstractControl#markAsTouched\n - api/forms/AbstractControl#markAsUntouched\n - api/forms/AbstractControl#parent\n - api/forms/AbstractControl#patchValue\n - api/forms/AbstractControl#pending\n - api/forms/AbstractControl#pristine\n - api/forms/AbstractControl#reset\n - api/forms/AbstractControl#root\n - api/forms/AbstractControl#setAsyncValidators\n - api/forms/AbstractControl#setErrors\n - api/forms/AbstractControl#setParent\n - api/forms/AbstractControl#setValidators\n - api/forms/AbstractControl#setValue\n - api/forms/AbstractControl#status\n - api/forms/AbstractControl#statusChanges\n - api/forms/AbstractControl#touched\n - api/forms/AbstractControl#untouched\n - api/forms/AbstractControl#updateOn\n - api/forms/AbstractControl#updateValueAndValidity\n - api/forms/AbstractControl#valid\n - api/forms/AbstractControl#validator\n - api/forms/AbstractControl#value\n - api/forms/AbstractControl#valueChanges\n - api/forms/AsyncValidatorFn\n - api/forms/FormArray\n - api/forms/FormControl#constructor\n - api/forms/FormControl#constructor()\n - api/forms/FormControl#formcontrol\n - api/forms/FormControl#how-to-use\n - api/forms/FormControl#members\n - api/forms/FormControl#overview\n - api/forms/FormControl#patchValue\n - api/forms/FormControl#registerOnChange\n - api/forms/FormControl#registerOnDisabledChange\n - api/forms/FormControl#reset\n - api/forms/FormControl#setValue\n - api/forms/FormGroup\n - api/forms/FormGroup#patchValue\n - api/forms/ValidatorFn\n - api/router/RouterLinkWithHref\n - https://github.com/angular/angular/tree/5.2.11/packages/forms/src/model.ts#L638-L875\n - https://www.npmjs.com/package/@angular/forms\n-->"
}