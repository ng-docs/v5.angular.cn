{
  "id" : "api/forms/FormControl",
  "title" : "FormControl",
  "contents" : "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"formcontrol\">FormControl</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wfc14obst93bim1zva6hqjl0\">npm 包</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/forms\">@angular/forms</a></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dkuxw56x8curh875ge5tvqede\">模块</th>\n  <td><code>import { <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a> } from <a href=\"api/forms\">'@angular/forms'</a>;</code></td>\n</tr>\n<tr>\n  <th data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"ee4tba1a8v4m1low7rnv25o9l\">源码</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.2.11/packages/forms/src/model.ts#L638-L875\">forms/src/model.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"30uooirslsrx1kpin16rmo7h3\">跟踪独立表单控件的值和验证状态。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74tpjt6joax2x4s0okdrasala\">它是 Angular 表单的三个基本构建块之一，另外两个是 \n<a href=\"api/forms/FormGroup\"><code>FormGroup</code></a> 和 \n<a href=\"api/forms/FormArray\"><code>FormArray</code></a>。</p>\n\n</div>\n\n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ivgu86loww6mg4fq1brezlnd\"><i class=\"material-icons\">link</i>概览</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a> extends <a class=\"code-anchor\" href=\"api/forms/AbstractControl\">AbstractControl</a> {\n  <a class=\"code-anchor\" href=\"api/forms/FormControl#constructor()\">constructor(formState: any = null, validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null, asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null)</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControl#setValue\">setValue(value: any, options: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControl#patchValue\">patchValue(value: any, options: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControl#reset\">reset(formState: any = null, options: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControl#registerOnChange\">registerOnChange(fn: Function): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControl#registerOnDisabledChange\">registerOnDisabledChange(fn: (isDisabled: boolean) =&gt; void): void</a>\n  // inherited from <a class=\"code-anchor\" href=\"api/forms/AbstractControl\">forms/AbstractControl</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#value\">get value: any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#validator\">validator: ValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#asyncValidator\">asyncValidator: AsyncValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#parent\">get parent: FormGroup | FormArray</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#status\">get status: string</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valid\">get valid: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#invalid\">get invalid: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pending\">get pending: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disabled\">get disabled: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enabled\">get enabled: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#errors\">get errors: ValidationErrors | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pristine\">get pristine: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#dirty\">get dirty: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#touched\">get touched: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#untouched\">get untouched: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valueChanges\">get valueChanges: Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#statusChanges\">get statusChanges: Observable&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateOn\">get updateOn: FormHooks</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValidators\">setValidators(newValidator: ValidatorFn | ValidatorFn[] | null): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setAsyncValidators\">setAsyncValidators(newValidator: AsyncValidatorFn | AsyncValidatorFn[] | null): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearValidators\">clearValidators(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearAsyncValidators\">clearAsyncValidators(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsTouched\">markAsTouched(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsUntouched\">markAsUntouched(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsDirty\">markAsDirty(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPristine\">markAsPristine(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPending\">markAsPending(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disable\">disable(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enable\">enable(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setParent\">setParent(parent: FormGroup | FormArray): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValue\">setValue(value: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#patchValue\">patchValue(value: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#reset\">reset(value?: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity(opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setErrors\">setErrors(errors: ValidationErrors | null, opts: {...}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\">get(path: Array&lt;string | number&gt; | string): AbstractControl | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#getError\">getError(errorCode: string, path?: string[]): any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasError\">hasError(errorCode: string, path?: string[]): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#root\">get root: AbstractControl</a>\n}\n</code-example>\n</section>\n\n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cflu95twzi71qd095ghj9h0y7\"><i class=\"material-icons\">link</i>使用方法</h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aco7llc6v8k5a5bfhfpo47e9o\">实例化 \n<a href=\"api/forms/FormControl\"><code>FormControl</code></a> 时，可以将初始值作为 第一个参数传入。例如：</p>\n<code-example language=\"ts\">\nconst ctrl = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('some value');\nconsole.log(ctrl.value);     // 'some value'\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ev2z6einbln0yjo1499l1mof\">你也可以在实例化时使用包含值和控件是否禁用的表单状态对象来初始化控件。 你不能在没有禁用键的情况下使用值键；两者都需要 才能使用这种初始化方式。</p>\n<code-example language=\"ts\">\nconst ctrl = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>({value: 'n/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>', disabled: true});\nconsole.log(ctrl.value);     // 'n/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>'\nconsole.log(ctrl.status);   // 'DISABLED'\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c5497yp2wdz813twxb7pti1n6\">第二个 \n<a href=\"api/forms/FormControl\"><code>FormControl</code></a> 参数可以接受以下三种内容之一：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74oskrhnu53kt893qscxwwnda\">同步验证器函数</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5lxfam0h343jel462xyx7wv06\">同步验证器函数数组</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7fom9h339y4bp8bhyh3gyvwoa\">包含验证器和/或异步验证器函数的选项对象</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"43dduz9exfvag4z0ho37329gv\">单个同步验证器函数的示例：</p>\n<code-example language=\"ts\">\nconst ctrl = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('', Validators.required);\nconsole.log(ctrl.value);     // ''\nconsole.log(ctrl.status);   // 'INVALID'\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"930bn9ikawcebu7c71fb0899k\">使用选项对象的示例：</p>\n<code-example language=\"ts\">\nconst ctrl = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('', {\n   validators: Validators.required,\n   asyncValidators: myAsyncValidator\n});\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5asi6hx35uktp0ct4xzo9pz9c\">选项对象还可以用于定义控件应何时更新。 默认情况下，控件的值和有效性会在值 更改时更新。你可以通过将 \n<code>updateOn</code> 选项设置为 \n<code>'blur'</code> 来将其配置为在 blur 事件时更新。</p>\n<code-example language=\"ts\">\nconst c = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('', { updateOn: 'blur' });\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8s5qh2t8rt6j8g3ram1j2sz4p\">你还可以将 \n<code>updateOn</code> 设置为 \n<code>'submit'</code>，这将延迟值和有效性 更新，直到控件的父表单触发提交事件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"xigb0zi3im5673n70dze9m7h\">有关更多属性和方法，请参阅其超类 \n<a href=\"api/forms/AbstractControl\"><code>AbstractControl</code></a>。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ewchuuaugycx2hdjbsj13rs92\"><strong>npm 包</strong>：\n<code>@angular/forms</code></li>\n</ul>\n\n</section>\n\n\n  \n\n\n\n  \n  \n\n\n\n\n\n\n<section class=\"constructors\">\n  <h2 id=\"constructor\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"64p310lbzdqiret0qyhhannvq\"><i class=\"material-icons\">link</i>构造函数</h2>\n  \n    <div class=\"constructor\">\n  <a id=\"constructor()\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">constructor(formState: any = null, validatorOrOpts?: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[] | AbstractControlOptions | null, asyncValidator?: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[] | null)</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e62kgm2ztk7rgk6auybfiv91o\"><i class=\"material-icons\">link</i>成员</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"setValue\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">setValue(value: any, options: {\n    onlySelf?: boolean;\n    emitEvent?: boolean;\n    emitModelToViewChange?: boolean;\n    emitViewToModelChange?: boolean;\n} = {}): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"30n8mu7kglzb5jo4h9sud3tg1\">将表单控件的值设置为 \n<code>value</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aa6yf7wlc4lsrxlqoxwu47dqe\">如果 \n<code>onlySelf</code> 为 \n<code>true</code>，则此更改只会影响此 \n<code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 的验证，而不会影响其父组件。默认值为 false。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cg7e36wm3z5j2opiu5ubq9nae\">如果 \n<code>emitEvent</code> 为 \n<code>true</code>，则此 更改将导致 \n<code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 上的 \n<code>valueChanges</code> 事件被发出。默认值为 true（因为它会贯穿到 \n<code>updateValueAndValidity</code>）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5jvc3zoy8dqloqya3m0j5ise7\">如果 \n<code>emitModelToViewChange</code> 为 \n<code>true</code>，则视图将通过 \n<code>onChange</code> 事件收到有关新值的通知。如果未 指定 \n<code>emitModelToViewChange</code>，则这是默认行为。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"10edrm73p472yky1gppuc80jv\">如果 \n<code>emitViewToModelChange</code> 为 \n<code>true</code>，则会触发 ngModelChange 事件以更新 模型。如果未指定 \n<code>emitViewToModelChange</code>，则这是默认行为。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"patchValue\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">patchValue(value: any, options: {\n    onlySelf?: boolean;\n    emitEvent?: boolean;\n    emitModelToViewChange?: boolean;\n    emitViewToModelChange?: boolean;\n} = {}): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6scpo7w5dwwbqtq68m32v5i89\">修补控件的值。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"44y2l1kkv2x9c8jwsn6165ghc\">此函数在功能上与 \n<a href=\"api/forms/FormControl#setValue\">setValue</a> 在此级别上相同。 它与 \n<code>FormGroups</code> 和 \n<code>FormArrays</code> 上的 \n<a href=\"api/forms/FormGroup#patchValue\">patchValue</a> 对称，在这些情况下，它的行为有所不同。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"reset\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">reset(formState: any = null, options: {\n    onlySelf?: boolean;\n    emitEvent?: boolean;\n} = {}): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6lbqcft0xsyd3vfn440twjxah\">重置表单控件。默认情况下，这意味着：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ksy27n0fiouh9cyjph5y9sk6\">它被标记为 \n<code>pristine</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2f7tlsrfqvcio1thfapc2s2zn\">它被标记为 \n<code>untouched</code>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2dzkwdbv2pn60bcmx2ozexxo7\">值被设置为 null。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2m4eak7gw1t880xejapw9ib8d\">你也可以通过传递一个独立的值或一个包含值和禁用状态的表单状态对象来重置到特定的表单状态 （这两个属性是无法计算的）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"60pxqgkd1z4znqr8or4jzhn38\">例如：</p>\n<code-example language=\"ts\">\nthis.control.reset('Nancy');\n\nconsole.log(this.control.value);  // 'Nancy'\n</code-example>\n<p>OR</p>\n<code-example>\nthis.control.reset({value: 'Nancy', disabled: true});\n\nconsole.log(this.control.value);  // 'Nancy'\nconsole.log(this.control.status);  // 'DISABLED'\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"registerOnChange\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">registerOnChange(fn: Function): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a4j4awcjyxhhm5fjhw1q3jozs\">注册一个用于更改事件的监听器。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"registerOnDisabledChange\"></a>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">registerOnDisabledChange(fn: (isDisabled: boolean) =&gt; void): void</code-example>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1jxe5oplj7qiz3kz4t08zoyhd\">注册一个用于禁用事件的监听器。</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>\n<!-- links to this doc:\n - api/forms\n - api/forms/AbstractControl\n - api/forms/AbstractControlDirective\n - api/forms/Form\n - api/forms/FormArray\n - api/forms/FormArrayName\n - api/forms/FormBuilder\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/FormGroup\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/NG_ASYNC_VALIDATORS\n - api/forms/NG_VALIDATORS\n - api/forms/NgControl\n - api/forms/NgForm\n - api/forms/NgModel\n - api/forms/RadioControlValueAccessor\n - api/forms/SelectControlValueAccessor\n - api/forms/Validators\n - guide/dynamic-form\n - guide/form-validation\n - guide/forms\n - guide/glossary\n - guide/reactive-forms\n-->\n<!-- links from this doc:\n - api/forms\n - api/forms/AbstractControl\n - api/forms/AbstractControl#asyncValidator\n - api/forms/AbstractControl#clearAsyncValidators\n - api/forms/AbstractControl#clearValidators\n - api/forms/AbstractControl#dirty\n - api/forms/AbstractControl#disable\n - api/forms/AbstractControl#disabled\n - api/forms/AbstractControl#enable\n - api/forms/AbstractControl#enabled\n - api/forms/AbstractControl#errors\n - api/forms/AbstractControl#get\n - api/forms/AbstractControl#getError\n - api/forms/AbstractControl#hasError\n - api/forms/AbstractControl#invalid\n - api/forms/AbstractControl#markAsDirty\n - api/forms/AbstractControl#markAsPending\n - api/forms/AbstractControl#markAsPristine\n - api/forms/AbstractControl#markAsTouched\n - api/forms/AbstractControl#markAsUntouched\n - api/forms/AbstractControl#parent\n - api/forms/AbstractControl#patchValue\n - api/forms/AbstractControl#pending\n - api/forms/AbstractControl#pristine\n - api/forms/AbstractControl#reset\n - api/forms/AbstractControl#root\n - api/forms/AbstractControl#setAsyncValidators\n - api/forms/AbstractControl#setErrors\n - api/forms/AbstractControl#setParent\n - api/forms/AbstractControl#setValidators\n - api/forms/AbstractControl#setValue\n - api/forms/AbstractControl#status\n - api/forms/AbstractControl#statusChanges\n - api/forms/AbstractControl#touched\n - api/forms/AbstractControl#untouched\n - api/forms/AbstractControl#updateOn\n - api/forms/AbstractControl#updateValueAndValidity\n - api/forms/AbstractControl#valid\n - api/forms/AbstractControl#validator\n - api/forms/AbstractControl#value\n - api/forms/AbstractControl#valueChanges\n - api/forms/AsyncValidatorFn\n - api/forms/FormArray\n - api/forms/FormControl#constructor\n - api/forms/FormControl#constructor()\n - api/forms/FormControl#formcontrol\n - api/forms/FormControl#how-to-use\n - api/forms/FormControl#members\n - api/forms/FormControl#overview\n - api/forms/FormControl#patchValue\n - api/forms/FormControl#registerOnChange\n - api/forms/FormControl#registerOnDisabledChange\n - api/forms/FormControl#reset\n - api/forms/FormControl#setValue\n - api/forms/FormGroup\n - api/forms/FormGroup#patchValue\n - api/forms/ValidatorFn\n - api/router/RouterLinkWithHref\n - https://github.com/angular/angular/tree/5.2.11/packages/forms/src/model.ts#L638-L875\n - https://www.npmjs.com/package/@angular/forms\n-->"
}