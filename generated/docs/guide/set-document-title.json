{
  "id" : "guide/set-document-title",
  "title" : "设置文档标题",
  "contents" : "<div class=\"content\">\n<a id=\"top\"></a>\n<h1 id=\"set-the-document-title\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ooim1w87c2o6kmfbn7pqwyd3\"><i class=\"material-icons\">link</i>设置文档标题</h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4j0ik3y3swcl63e2o1qme0g93\">你的应用应该能够让浏览器标题栏显示你想要的任何内容。 本指南介绍了如何做到这一点。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cgml4eqevk7f3jypgyoyii8yp\">查看 \n<live-example name=\"set-document-title\"></live-example>.</p>\n<h2 id=\"the-problem-with-title\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5hkbxq0vfmn3347281ha5dygd\"><i class=\"material-icons\">link</i><em>&lt;title&gt;</em> 的问题</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aevvb63izbc56v5z1ux20nd5d\">显而易见的方法是将组件的某个属性绑定到 HTML \n<code>&lt;title&gt;</code>，如下所示：</p>\n<code-example format=\"\">\n  &lt;title&gt;{{This_Does_Not_Work}}&lt;/title&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5785hctiqisj3xpettvh05339\">抱歉，但这行不通。 应用的根组件是 \n<code>&lt;body&gt;</code> 标签中包含的一个元素。 HTML \n<code>&lt;title&gt;</code> 位于文档 \n<code>&lt;head&gt;</code> 中，在 body 之外，Angular 数据绑定无法访问它。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"xngjek51tfvpvzoh3l6j8hoj\">你可以获取浏览器 \n<code>document</code> 对象并手动设置标题。 这样做很脏，而且会降低你将来在浏览器之外运行应用的可能性。</p>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2br5krayy1rif2zrf2c1hgscq\">在浏览器之外运行你的应用意味着你可以利用服务器端预渲染来实现近乎即时的首次应用渲染时间和 SEO。这意味着你可以从 Web Worker 内部运行，通过使用多个线程来提高应用的响应速度。这也意味着你可以将应用运行在 Electron.js 或 Windows Universal 中，将其交付到桌面。</p>\n</div>\n<h2 id=\"use-the-title-service\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9c7bdhxduvihqnmwyls9cccyw\"><i class=\"material-icons\">link</i>使用 \n<code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> 服务</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1fkn6shxikr993ril9ys1h7sa\">幸运的是，Angular 通过提供 \n<code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> 服务（作为\n<em>浏览器平台</em>的一部分）来弥合差距。 \n<a href=\"api/platform-browser/Title\">Title</a> 服务是一个简单的类，它提供了一个 API 用于获取和设置当前 HTML 文档的标题：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d7eaxgeemwirvx8xp9ma51w7d\"><code>getTitle() : string</code>—获取当前 HTML 文档的标题。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c25atu134rxnn7nnasell2lgg\"><code>setTitle( newTitle : string )</code>—设置当前 HTML 文档的标题。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1z09irjc4e7wj5r5n37qlcaoh\">你可以将 \n<code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> 服务注入到根 \n<code>AppComponent</code> 中，并公开一个可绑定的 \n<code>setTitle</code> 方法来调用它：</p>\n<code-example path=\"set-document-title/src/app/app.component.ts\" region=\"class\" title=\"src/app/app.component.ts (class)\" linenums=\"false\">\nexport class AppComponent {\n  public constructor(private titleService: <a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a> ) { }\n\n  public setTitle( newTitle: string) {\n    this.titleService.setTitle( newTitle );\n  }\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bpkuvqoool0hc5n99oyk3bjbb\">将该方法绑定到三个锚点标签，瞧！</p>\n<figure>\n  <img src=\"generated/images/guide/set-document-title/set-title-anim.gif\" alt=\"Set title\" width=\"596\" height=\"316\">\n</figure>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7wz2ud8oub8fvtqkdm9loddur\">以下是完整的解决方案：</p>\n<code-tabs>\n  <code-pane title=\"src/main.ts\" path=\"set-document-title/src/main.ts\">\nimport { <a href=\"api/core/enableProdMode\" class=\"code-anchor\">enableProdMode</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a> } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  <a href=\"api/core/enableProdMode\" class=\"code-anchor\">enableProdMode</a>();\n}\n\n<a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a>().bootstrapModule(AppModule);\n\n\n</code-pane>\n  <code-pane title=\"src/app/app.module.ts\" path=\"set-document-title/src/app/app.module.ts\">\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>, <a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a> }  from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [\n    <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>\n  ],\n  declarations: [\n    AppComponent\n  ],\n  providers: [\n    <a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a>\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n</code-pane>\n  <code-pane title=\"src/app/app.component.ts\" path=\"set-document-title/src/app/app.component.ts\">\n// Import the native Angular services.\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a> }     from '@angular/platform-browser';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\nselector: 'app-root',\ntemplate:\n  `&lt;p&gt;\n    Select <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> title to set on the current HTML document:\n  &lt;/p&gt;\n\n  &lt;ul&gt;\n    &lt;li&gt;&lt;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> (click)=\"setTitle( 'Good morning!' )\"&gt;Good morning&lt;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>&gt;.&lt;/li&gt;\n    &lt;li&gt;&lt;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> (click)=\"setTitle( 'Good afternoon!' )\"&gt;Good afternoon&lt;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>&gt;.&lt;/li&gt;\n    &lt;li&gt;&lt;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> (click)=\"setTitle( 'Good evening!' )\"&gt;Good evening&lt;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>&gt;.&lt;/li&gt;\n  &lt;/ul&gt;\n  `\n})\nexport class AppComponent {\n  public constructor(private titleService: <a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a> ) { }\n\n  public setTitle( newTitle: string) {\n    this.titleService.setTitle( newTitle );\n  }\n}\n\n\n</code-pane>\n</code-tabs>\n<h2 id=\"why-provide-the-title-service-in-bootstrap\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8jzbhfqlmej9chvmlk7fpnis\"><i class=\"material-icons\">link</i>为什么在 \n<code>bootstrap</code> 中提供 \n<code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> 服务</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4kbfhk12aawgk107sd0wj3ks8\">通常，你希望在根应用组件 \n<code>AppComponent</code> 中提供应用范围的服务。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8d6s7mj6cdufkvs6awifkah8k\">本指南建议在引导过程中注册标题服务， 这是你为配置运行时 Angular 环境而保留的位置。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"20x13pzpyr7oqq7d6qtsykooc\">这正是你正在做的事情。 \n<code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> 服务是 Angular \n<em>浏览器平台</em>的一部分。 如果你将应用引导到另一个平台， 你将不得不提供一个不同的 \n<code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> 服务，该服务理解该特定平台的“文档标题”概念。 理想情况下，应用本身既不知道也不关心运行时环境。</p>\n\n</div>\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/core/NgModule\n - api/core/enableProdMode\n - api/platform-browser-dynamic/platformBrowserDynamic\n - api/platform-browser/BrowserModule\n - api/platform-browser/Title\n - api/router/RouterLinkWithHref\n - guide/set-document-title#set-the-document-title\n - guide/set-document-title#the-problem-with-title\n - guide/set-document-title#use-the-title-service\n - guide/set-document-title#why-provide-the-title-service-in-bootstrap\n-->"
}