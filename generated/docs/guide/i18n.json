{
  "id" : "guide/i18n",
  "title" : "国际化 (i18n)",
  "contents" : "<div class=\"content\">\n<h1 id=\"internationalization-i18n\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2p0upqlu06t71194odcew5fs3\"><i class=\"material-icons\">link</i>国际化 (i18n)</h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"alzbyrxcye70f4otjvndkbtt9\">应用程序国际化是开发中的一个多方面领域，专注于使应用程序对全球用户可用并易于使用。本页介绍了 Angular 的国际化 (i18n) 工具，这些工具可以帮助你使你的应用程序支持多种语言。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a3uvwhjn59a9vdq55slk7vbt5\">查看 \n<live-example downloadonly=\"\" name=\"i18n\">\n i18n 示例\n</live-example>，了解一个 AOT 编译应用程序的简单示例，该应用程序已翻译成法语。</p>\n<a id=\"angular-i18n\"></a>\n<h2 id=\"angular-and-i18n\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1hb9enlpn9odgfi3vvl4ckfb8\"><i class=\"material-icons\">link</i>Angular 和 i18n</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bdpeatf7ytqswgjmwamdco2p2\">Angular 简化了国际化的以下方面：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"44sdowyltva9iqmjdc6zzsqsr\">以本地格式显示日期、数字、百分比和货币。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"379d0zjjbdwm2uaeeexqrmhph\">翻译组件模板中的文本。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"55rrjcs9oc1ckiodrt8qqso4q\">处理单词的复数形式。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1r2xpfyoni0ummohdzhngm4gc\">处理备用文本。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2kicjnp71bj8x4nxcouhdexzj\">本文档重点介绍 \n<a href=\"https://cli.angular.io/\"><strong>Angular CLI</strong></a> 项目，在这些项目中，Angular CLI 生成编写多语言应用程序所需的大部分样板代码。</p>\n<a id=\"setting-up-locale\"></a>\n<h2 id=\"setting-up-the-locale-of-your-app\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"69opmaowtt5h127pcetu2jd0p\"><i class=\"material-icons\">link</i>设置应用程序的语言环境</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8jhe4epxnol0hm9xccre6s461\">语言环境是一个标识符 (id)，它引用一组用户偏好，这些偏好往往在世界上的某个区域（如国家）内共享。本文档将语言环境标识符称为“语言环境”或“语言环境 id”。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7smnpie7ymoraacup9mjrr2sz\">Unicode 语言环境标识符由 Unicode 语言标识符和（可选）字符 \n<code>-</code> 后跟语言环境扩展组成。（出于历史原因，字符 \n<code>_</code> 被支持为 \n<code>-</code> 的替代品。）例如，在语言环境 id \n<code>fr-CA</code> 中，\n<code>fr</code> 指的是法语语言标识符，\n<code>CA</code> 指的是加拿大语言环境扩展。</p>\n<div class=\"alert is-critical\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7nlm9xcbu4qhq7113adcxtwha\">Angular 遵循 Unicode LDML 约定，该约定使用基于规范 \n<a href=\"http://www.rfc-editor.org/rfc/bcp/bcp47.txt\">BCP47</a> 的稳定标识符（Unicode 语言环境标识符）。在定义语言环境时，遵循此约定非常重要，因为 Angular i18n 工具使用此语言环境 id 来查找正确的对应语言环境数据。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"boj7e1lotbdm4sv46m9hh520x\">默认情况下，Angular 使用语言环境 \n<code>en-US</code>，即美式英语。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3vlf6i1hub9h2fpzyzsj9pmez\">要将应用程序的语言环境设置为另一个值，请使用 CLI 参数 \n<code>--locale</code>，并使用要使用的语言环境 id 的值：</p>\n<code-example language=\"sh\" class=\"code-shell\">\n  ng serve --aot --locale fr\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"arauky1iruorjs6y4906ugk0s\">如果你使用 JIT，你还需要在主模块中定义 \n<code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> 提供者：</p>\n<code-example path=\"i18n/doc-files/app.module.ts\" title=\"src/app/app.module.ts\" linenums=\"false\">\nimport { <a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a>, <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\n\nimport { AppComponent } from '../src/app/app.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [ <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> ],\n  declarations: [ AppComponent ],\n  providers: [ { provide: <a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a>, useValue: 'fr' } ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7oqhl0nuri1cnfdrbjfz9okpu\">有关 Unicode 语言环境标识符的更多信息，请参阅 \n<a href=\"http://cldr.unicode.org/core-spec#Unicode_Language_and_Locale_Identifiers\">CLDR 核心规范</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6nx9lqqlzyjojf0ji0t405ypt\">有关 Angular 支持的语言环境的完整列表，请参阅 \n<a href=\"https://github.com/angular/angular/tree/master/packages/common/locales\">Angular 存储库</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9p6exzchd3kia4yfte2iz9kzz\">CLDR 和 Angular 使用的语言环境标识符基于 \n<a href=\"http://www.rfc-editor.org/rfc/bcp/bcp47.txt\">BCP47</a>。 这些规范会随着时间的推移而改变；下表将以前的标识符映射到撰写本文时的当前标识符：</p>\n<table>\n<thead>\n<tr>\n<th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1bo4g3fczh3kspb4p8i74ymnu\">语言环境名称</th>\n<th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"24q06phyj6mbxnpjkdvwv7nr8\">旧语言环境 id</th>\n<th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6z2ytqsrafugy3xaqlq3l1ejv\">新语言环境 id</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c30qvfnzs70yfouri1my2zu68\">印度尼西亚语</td>\n<td>in</td>\n<td>id</td>\n</tr>\n<tr>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"brly6nm0ag4ihpj2yq3rw3ecj\">希伯来语</td>\n<td>iw</td>\n<td>he</td>\n</tr>\n<tr>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"57kgokd88ei726wp8nvmkzkhw\">摩尔多瓦罗马尼亚语</td>\n<td>mo</td>\n<td>ro-MD</td>\n</tr>\n<tr>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"10zyczi2z12hkf05r9ayiv040\">挪威语博克马尔</td>\n<td>no, no-NO</td>\n<td>nb</td>\n</tr>\n<tr>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9r765rdkr2xy9m7z7mhhnvwnq\">塞尔维亚语拉丁字母</td>\n<td>sh</td>\n<td>sr-Latn</td>\n</tr>\n<tr>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47sz4iny5c6tzlo9081sojz11\">菲律宾语</td>\n<td>tl</td>\n<td>fil</td>\n</tr>\n<tr>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e29kgl9fp5y7chuw2flftnrqx\">巴西葡萄牙语</td>\n<td>pt-BR</td>\n<td>pt</td>\n</tr>\n<tr>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5chmra8bcwbxymv8cfqzg4us8\">简体中文</td>\n<td>zh-cn, zh-Hans-CN</td>\n<td>zh-Hans</td>\n</tr>\n<tr>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a16bw9fukc8texka867dm0xdv\">繁体中文</td>\n<td>zh-tw, zh-Hant-TW</td>\n<td>zh-Hant</td>\n</tr>\n<tr>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c3vaubnjw0kptxsrxzrcf6yam\">香港繁体中文</td>\n<td>zh-hk</td>\n<td>zh-Hant-HK</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"i18n-pipes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3uci7xye4bl8ze7gexy8z3lud\"><i class=\"material-icons\">link</i>i18n 管道</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8b69wjslhc8i5s7hq5qrnvgb7\">Angular 管道可以帮助你进行国际化：\n<code><a href=\"api/common/DatePipe\" class=\"code-anchor\">DatePipe</a></code>、\n<code><a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">CurrencyPipe</a></code>、\n<code><a href=\"api/common/DecimalPipe\" class=\"code-anchor\">DecimalPipe</a></code> 和 \n<code><a href=\"api/common/PercentPipe\" class=\"code-anchor\">PercentPipe</a></code> 使用语言环境数据根据 \n<code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> 格式化数据。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9a29cpncocyrjtmbcuhijdm0i\">默认情况下，Angular 只包含 \n<code>en-US</code> 的语言环境数据。如果你将 \n<code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> 的值设置为其他语言环境，则必须导入该新语言环境的语言环境数据。 当你使用 \n<code>ng serve</code> 和 \n<code>ng build</code> 的 \n<code>--locale</code> 参数时，CLI 会为你导入语言环境数据。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5hgequ4acuzok7b6nlkrv6nm6\">如果你想导入其他语言的语言环境数据，你可以手动进行：</p>\n<code-example path=\"i18n/doc-files/app.locale_data.ts\" region=\"import-locale\" title=\"src/app/app.module.ts\" linenums=\"false\">\nimport { <a href=\"api/common/registerLocaleData\" class=\"code-anchor\">registerLocaleData</a> } from '@angular/common';\nimport localeFr from '@angular/common/locales/fr';\n\n// the second parameter 'fr' is optional\n<a href=\"api/common/registerLocaleData\" class=\"code-anchor\">registerLocaleData</a>(localeFr, 'fr');\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"80pntegnva8gu7x2cul5o110y\">第一个参数是一个包含从 \n<code>@angular/common/locales</code> 导入的语言环境数据的对象。 默认情况下，导入的语言环境数据会使用在 Angular 语言环境数据中定义的语言环境 ID 进行注册。 如果你想使用其他语言环境 ID 注册导入的语言环境数据，可以使用第二个参数指定自定义语言环境 ID。例如，Angular 的语言环境数据将法语的语言环境 ID 定义为 \"fr\"。你可以使用第二个参数将导入的法语语言环境数据与自定义语言环境 ID \"fr-FR\" 关联，而不是 \"fr\"。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bc4hdgxwnt8lhzfdvjtb6b3ek\"><code>@angular/common/locales</code> 中的文件包含你需要的绝大多数语言环境数据，但某些高级格式化选项可能只在你可以从 \n<code>@angular/common/locales/extra</code> 导入的额外数据集中可用。当出现这种情况时，会显示一条错误消息。</p>\n  <code-example path=\"i18n/doc-files/app.locale_data_extra.ts\" region=\"import-locale-extra\" title=\"src/app/app.module.ts\" linenums=\"false\">\nimport { <a href=\"api/common/registerLocaleData\" class=\"code-anchor\">registerLocaleData</a> } from '@angular/common';\nimport localeFr from '@angular/common/locales/fr';\nimport localeFrExtra from '@angular/common/locales/extra/fr';\n\n<a href=\"api/common/registerLocaleData\" class=\"code-anchor\">registerLocaleData</a>(localeFr, 'fr-FR', localeFrExtra);\n\n</code-example>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3wjwnp90enytoynlk5r0pmh0b\">Angular 使用的所有语言环境数据都从 Unicode 联盟的 \n<a href=\"http://cldr.unicode.org/\" title=\"CLDR\">通用语言环境数据存储库 (CLDR)</a> 中提取。</p>\n</div> \n<h2 id=\"template-translations\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ekbyqnypzma79411j1v498ag9\"><i class=\"material-icons\">link</i>模板翻译</h2>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"pez0df3t3qiu4zoirmdp87i\">本文档将可翻译文本单元称为 \"文本\"、\"消息\" 或 \"文本消息\"。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3dnps38sv6cn8jsrm4v6liooe\">i18n 模板翻译过程包含四个阶段：</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ytjm4g3lp0dc6rwda491kjsm\">在你的组件模板中标记静态文本消息以进行翻译。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b3pq1cxtakrldyc6mgqhd7sgx\">Angular i18n 工具将标记的文本提取到行业标准的翻译源文件中。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8sppyjtznwurxia5wbmq4u6at\">翻译人员编辑该文件，将提取的文本翻译成目标语言，并将文件返回给你。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"46pyo9mmopdrt3rco02esyjxc\">Angular 编译器导入完成的翻译文件， 用翻译后的文本替换原始消息，并生成目标语言的应用新版本。</p>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"57wzasjqx9qrkv4xh7b44f290\">你需要为每个支持的语言构建和部署应用的单独版本。</p>\n<a id=\"i18n-attribute\"></a>\n<h3 id=\"mark-text-with-the-i18n-attribute\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"330fxmoui33mikqhbfwnbuev0\"><i class=\"material-icons\">link</i>使用 i18n 属性标记文本</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9jn6mpiia85kuf4vlgdv4gfno\">Angular \n<code>i18n</code> 属性标记可翻译内容。将其放置在每个需要翻译固定文本的元素标签上。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cb13lajwl7offqqjtqmir0cu1\">在下面的示例中，\n<code>&lt;h1&gt;</code> 标签显示了一个简单的英文问候语 \"Hello i18n!\"</p>\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"greeting\" title=\"src/app/app.component.html\" linenums=\"false\">\n&lt;h1&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dtuwoqvnnpe9ip9vl9i0zf3gs\">要把这个问候语标记为要翻译的，请把 <code>i18n</code> 属性添加到 <code>&lt;h1&gt;</code> 标签上。</p>\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute\" title=\"src/app/app.component.html\" linenums=\"false\">\n&lt;h1 i18n&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bv3nodbgev62jukbo61m0srdr\"><code>i18n</code> 是一个自定义属性，Angular 工具和编译器可以识别。 翻译后，编译器会将其删除。它不是 Angular 指令。</p>\n</div>\n<a id=\"help-translator\"></a>\n<h3 id=\"help-the-translator-with-a-description-and-meaning\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e5jfi26n6bnwbfv41z22dy7it\"><i class=\"material-icons\">link</i>通过描述和含义帮助翻译人员</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dod4a7yquiczyv9wchp8lzmrc\">为了准确地翻译文本消息，翻译人员可能需要额外的信息或上下文。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3l8pw3rbg6cfry272bwql9xk1\">你可以将文本消息的描述作为 \n<code>i18n</code> 属性的值添加，如下面的示例所示：</p>\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-desc\" title=\"src/app/app.component.html\" linenums=\"false\">\n&lt;h1 i18n=\"An introduction header for this sample\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ucatyicc4nxp7fo88yx87vlu\">翻译人员可能还需要了解此特定应用上下文中文本消息的含义或意图。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"er68p95jc9gbcukkxzkq8oc86\">你可以通过在 \n<code>i18n</code> 属性值开头添加 \n<em>含义</em>，并使用 \n<code>|</code> 字符将其与 \n<em>描述</em> 分隔来添加上下文：\n<code>&lt;含义&gt;|&lt;描述&gt;</code></p>\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-meaning\" title=\"src/app/app.component.html\" linenums=\"false\">\n&lt;h1 i18n=\"site header|An introduction header for this sample\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dqa4fr9m3azyqps3lvspjsmd3\">具有相同含义的所有文本消息都将具有相同的翻译。 与不同含义关联的文本消息可以具有不同的翻译。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1tdev0yo7l3q6glqxl99va5n\">Angular 提取工具在翻译源文件中保留含义和描述，以方便进行上下文特定的翻译，但只有含义和文本消息的组合用于生成翻译的特定 ID。如果你有两个具有不同含义的类似文本消息，它们将被单独提取。如果你有两个具有不同描述（不是不同含义）的类似文本消息，那么它们只会被提取一次。</p>\n<a id=\"custom-id\"></a>\n<h3 id=\"set-a-custom-id-for-persistence-and-maintenance\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4992hwc8eogxl2tmp7hnlaqv8\"><i class=\"material-icons\">link</i>为持久性和维护设置自定义 ID</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dt1sccodwzermx1bwx1y2pl80\">angular i18n 提取工具会为模板中的每个 \n<code>i18n</code> 属性生成一个包含翻译单元条目的文件。默认情况下，它会为每个翻译单元分配一个唯一的 ID，例如：</p>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"generated-id\" linenums=\"false\">\n&lt;trans-unit id=\"ba0cc104d3d69bf669f97b8d96a4c5d8d9559aa3\" datatype=\"html\"&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"36jd9y32ws0pwveqrc7vv7xdr\">当你更改可翻译文本时，提取工具会为该翻译单元生成一个新的 ID。 然后，你必须使用新的 ID 更新翻译文件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6uo9ouf06vb6l0i5yzt35q3x1\">或者，你可以在 \n<code>i18n</code> 属性中使用前缀 \n<code>@@</code> 指定自定义 ID。 下面的示例定义了自定义 ID \n<code>introductionHeader</code>：</p>\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-solo-id\" title=\"app/app.component.html\" linenums=\"false\">\n&lt;h1 i18n=\"@@introductionHeader\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"oylghrkfzudtgmzsbf1wkt8x\">当你指定自定义 ID 时，提取工具和编译器会使用该自定义 ID 生成翻译单元。</p>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"custom-id\" linenums=\"false\">\n&lt;trans-unit id=\"introductionHeader\" datatype=\"html\"&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cmt4wkpdq6whgeyvqpap3n958\">自定义 ID 是持久的。当可翻译文本发生更改时，提取工具不会更改它。 因此，你不需要更新翻译。这种方法使维护更容易。</p>\n<h4 id=\"use-a-custom-id-with-a-description\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11s0iloeiwafi1i8js9wdlmoh\"><i class=\"material-icons\">link</i>将自定义 ID 与描述一起使用</h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"49hvfbr0dnpsy5x4wplxes9bf\">你可以在 \n<code>i18n</code> 属性的值中包含描述和自定义 ID 来将自定义 ID 与描述结合使用。在下面的示例中，\n<code>i18n</code> 属性值包含描述，然后是自定义 \n<code>id</code>：</p>\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-id\" title=\"app/app.component.html\" linenums=\"false\">\n&lt;h1 i18n=\"An introduction header for this sample@@introductionHeader\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"444698vgsvy8hnkvl1dgxogeo\">你也可以添加含义，如以下示例所示：</p>\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-meaning-and-id\" title=\"app/app.component.html\" linenums=\"false\">\n&lt;h1 i18n=\"site header|An introduction header for this sample@@introductionHeader\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<h4 id=\"define-unique-custom-ids\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ejnl3vzo148eoa076enx27mpr\"><i class=\"material-icons\">link</i>定义唯一的自定义 ID</h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"73oqhzf406nfwbth5oh8huz6k\">确保定义的自定义 ID 是唯一的。如果你对两个不同的文本消息使用相同的 ID， 则只提取第一个文本消息，并且它的翻译将用于替换两个原始文本消息。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d9udni3bccf586ixdbbwqg65w\">在下面的示例中，自定义 ID \n<code>myId</code> 用于两个不同的消息：</p>\n<code-example language=\"html\">\n  &lt;h3 i18n=\"@@myId\"&gt;Hello&lt;/h3&gt;\n  &lt;!-- ... --&gt;\n  &lt;p i18n=\"@@myId\"&gt;Good bye&lt;/p&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4hgjg37m2dhvuev65nv0mx7nk\">考虑以下法语翻译：</p>\n<code-example language=\"xml\">\n  &lt;trans-unit id=\"myId\" datatype=\"html\"&gt;\n    &lt;source&gt;Hello&lt;/source&gt;\n    &lt;target <a href=\"api/animations/state\" class=\"code-anchor\">state</a>=\"new\"&gt;Bonjour&lt;/target&gt;\n  &lt;/trans-unit&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8fxbhejamhbitdw8ivieb3rp\">由于自定义 ID 相同，因此生成的翻译中的两个元素都包含 相同的文本 \n<code>Bonjour</code>：</p>\n<code-example language=\"html\">\n  &lt;h3&gt;Bonjour&lt;/h3&gt;\n  &lt;!-- ... --&gt;\n  &lt;p&gt;Bonjour&lt;/p&gt;\n</code-example>\n<a id=\"no-element\"></a>\n<h3 id=\"translate-text-without-creating-an-element\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a1eselisy5b6t9db6i4nfty4f\"><i class=\"material-icons\">link</i>翻译文本而不创建元素</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"40m01fadx6vtartcr9yx75ogo\">如果你想翻译一段文本，可以将其包装在 \n<code>&lt;span&gt;</code> 标签中。 但是，如果你不想仅仅为了方便翻译而创建新的 DOM 元素， 你可以将文本包装在 \n<code>&lt;ng-container&gt;</code> 元素中。 \n<code>&lt;ng-container&gt;</code> 将被转换为 HTML 注释：</p>\n<code-example path=\"i18n/src/app/app.component.html\" region=\"i18n-ng-container\" title=\"src/app/app.component.html\" linenums=\"false\">\n&lt;ng-container i18n&gt;I don't output any element&lt;/ng-container&gt;\n\n</code-example>\n<a id=\"translate-attributes\"></a>\n<h2 id=\"add-i18n-translation-attributes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qqm2s8fsxta8krjgkbxrw7it\"><i class=\"material-icons\">link</i>添加 i18n 翻译属性</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cmo8glxfxlo96jz8jqdncxelb\">你也可以翻译属性。例如，假设你的模板中有一个带有 \n<code>title</code> 属性的图像：</p>\n<code-example path=\"i18n/doc-files/app.component.html\" region=\"i18n-title\" title=\"src/app/app.component.html\" linenums=\"false\">\n&lt;img [src]=\"logo\" title=\"Angular logo\"&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cipuh3hdykc5hgwjl6sgeajo4\">此 \n<code>title</code> 属性需要翻译。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ymkska4bs948torbn5d7datu\">要将属性标记为可翻译，请添加一个 \n<code>i18n-x</code> 形式的属性，其中 \n<code>x</code> 是要翻译的属性的名称。以下示例展示了如何通过在 \n<code>img</code> 标签上添加 \n<code>i18n-title</code> 属性来标记 \n<code>title</code> 属性以进行翻译：</p>\n<code-example path=\"i18n/src/app/app.component.html\" region=\"i18n-title-translate\" title=\"src/app/app.component.html\" linenums=\"false\">\n&lt;img [src]=\"logo\" i18n-title title=\"Angular logo\" /&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"apibcoyiis9pj48otmkq4x1i6\">此技术适用于任何元素的任何属性。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e3i1lpyblyp6jykurrfoo3kxv\">你也可以使用 \n<code>i18n-x=\"&lt;meaning&gt;|&lt;description&gt;@@&lt;id&gt;\"</code> 语法为其分配含义、描述和 ID。</p>\n<a id=\"plural-ICU\"></a>\n<h2 id=\"translate-singular-and-plural\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"93mwnfa23rl7egze0wasuh2d0\"><i class=\"material-icons\">link</i>翻译单数和复数</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d1vswlzuds0acmkaerla9co8h\">不同的语言有不同的复数规则。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eznv7w49yn0sgdqugyuw2hqz9\">假设你想说某事“在 x 分钟前更新”。在英语中，根据分钟数的不同，你可以显示“刚刚”、“一分钟前”或“x 分钟前”（其中 x 是实际的数字）。其他语言可能以不同的方式表达基数。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9z48bmqk1abw6tupezv9urdys\">以下示例展示了如何使用 \n<code>plural</code> ICU 表达式根据更新发生的时间来显示这三个选项之一：</p>\n<code-example path=\"i18n/src/app/app.component.html\" region=\"i18n-plural\" title=\"src/app/app.component.html\" linenums=\"false\">\n&lt;span i18n&gt;Updated {minutes, plural, =0 {just now} =1 {one minute ago} other {{{minutes}} minutes ago}}&lt;/span&gt;\n\n</code-example>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b377anqmq2mruyskrwunoqlgb\">第一个参数是键。它绑定到组件属性（\n<code>minutes</code>），该属性决定分钟数。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ebsrw6g59iwl8q2662ht6txbm\">第二个参数标识这是一个 \n<code>plural</code> 翻译类型。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2mh2hwg54xhjo0m5jho0kbwba\">第三个参数定义一个复数模式，该模式由复数类别及其匹配值组成。</li>\n</ul>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a9jjl3rggx8sz9h1ji1qq42we\">此语法符合 \n<a href=\"http://userguide.icu-project.org/formatparse/messages\" title=\"ICU Message Format\">ICU 消息格式</a> ，如 \n<a href=\"http://cldr.unicode.org/index/cldr-spec/plural-rules\" title=\"Pluralization Rules\">CLDR 复数规则</a> 中所述。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"25qhefchyyml1x51vc0eaeh3l\">复数类别包括（取决于语言）：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"31e9gw2awv08yhswen90tafqi\">=0（或任何其他数字）</li>\n<li>zero</li>\n<li>one</li>\n<li>two</li>\n<li>few</li>\n<li>many</li>\n<li>other</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f5k7bhu8p2avjnqdzlj4l2w5y\">在复数类别之后，将默认的英文文本放在括号（\n<code>{}</code>）中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6naia2at02uatiifu6fqudoot\">在上面的示例中，根据该复数模式指定了三个选项。对于谈论零分钟，你使用 \n<code>=0 {just now}</code>。对于一分钟，你使用 \n<code>=1 {one minute}</code>。任何不匹配的基数使用 \n<code>other {{{minutes}} minutes ago}</code>。如果复数规则不同，你可以选择为二、三或任何其他数字添加模式。对于“分钟”的示例，在英语中只需要这三个模式。</p>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"15y0zqe8mfjhovn26bugkq85o\">你可以在翻译中使用插值和 html 标记。</p>\n</div>\n<a id=\"select-ICU\"></a>\n<h2 id=\"select-among-alternative-text-messages\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3fcoa4x29xc3qjv8s3m526jqr\"><i class=\"material-icons\">link</i>在备选文本消息中进行选择</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9y8w3pndw3p0urjt9zq6j8mdz\">如果你的模板需要根据变量的值显示不同的文本消息，则需要翻译所有这些备选文本消息。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e2a4h6pg8zigc9wpc5x0gdz7y\">你可以使用 \n<code>select</code> ICU 表达式来处理这种情况。它类似于 \n<code>plural</code> ICU 表达式，不同之处在于你根据字符串值而不是数字在备选翻译中进行选择，并且你定义这些字符串值。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"avcdicucoltg10jccmp5jwrza\">组件模板中的以下格式消息绑定到组件的 \n<code>gender</code> 属性，该属性输出以下字符串值之一：“m”、“f”或“o”。该消息将这些值映射到相应的翻译：</p>\n<code-example path=\"i18n/src/app/app.component.html\" region=\"i18n-select\" title=\"src/app/app.component.html\" linenums=\"false\">\n&lt;span i18n&gt;The author is {gender, select, male {male} female {female} other {other}}&lt;/span&gt;\n\n</code-example>\n<a id=\"nesting-ICUS\"></a>\n<h2 id=\"nesting-plural-and-select-icu-expressions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ds29k0wio00zhekstnec91c5s\"><i class=\"material-icons\">link</i>嵌套 plural 和 select ICU 表达式</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3nsitgqnrg3km2qvglfz1obvi\">你也可以将不同的 ICU 表达式嵌套在一起，如以下示例所示：</p>\n<code-example path=\"i18n/src/app/app.component.html\" region=\"i18n-nested\" title=\"src/app/app.component.html\">\n&lt;span i18n&gt;Updated: {minutes, plural,\n  =0 {just now}\n  =1 {one minute ago}\n  other {{{minutes}} minutes ago by {gender, select, male {male} female {female} other {other}}}}\n&lt;/span&gt;\n\n</code-example>\n<a id=\"ng-xi18n\"></a>\n<h2 id=\"create-a-translation-source-file-with-ng-xi18n\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8vepri9y2zuevo4fjrql2zh7u\"><i class=\"material-icons\">link</i>使用 \n<em>ng xi18n</em> 创建翻译源文件</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"21hvr99nxipsh6luadvk4vth4\">使用 CLI 提供的 \n<code>ng xi18n</code> 命令将用 \n<code>i18n</code> 标记的文本消息提取到翻译源文件中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"id4obyhxmaz5bneyrcclqm95\">在应用项目的根目录下打开一个终端窗口，并输入 \n<code>ng xi18n</code> 命令：</p>\n<code-example language=\"sh\" class=\"code-shell\">\n  ng xi18n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"qqp4ptpgyg76duqd5g9wkxos\">默认情况下，该工具会在 \n<a href=\"https://en.wikipedia.org/wiki/XLIFF\">XML Localization Interchange File Format (XLIFF，版本 1.2)</a> 中生成一个名为 \n<code>messages.xlf</code> 的翻译文件。</p>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d1vk3sy8a1xa8n5fj8bf33dlz\">如果你不使用 CLI，则有两个选项：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5dyvxry8h5w530jyk5cf91cvz\">你可以直接从 \n<code>@angular/compiler-cli</code> 包中使用 \n<code>ng-xi18n</code> 工具。有关更多信息，请参阅 \n<a href=\"https://github.com/angular/angular-cli/wiki/xi18n\">CLI 文档中的 i18n</a>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cjm3odcgu7wr1l7j726hqh5m0\">你可以使用 \n<code>@ngtools/webpack</code> 包中的 CLI Webpack 插件 \n<code>AngularCompilerPlugin</code>。设置参数 \n<code>i18nOutFile</code> 和 \n<code>i18nOutFormat</code> 以触发提取。有关更多信息，请参阅 \n<a href=\"https://github.com/angular/angular-cli/tree/master/packages/%40ngtools/webpack\">Angular Ahead-of-Time Webpack 插件文档</a>。</li>\n</ul>\n</div>\n<a id=\"other-formats\"></a>\n<h3 id=\"other-translation-formats\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bqvmc70lm68t14naxjmm8zbu3\"><i class=\"material-icons\">link</i>其他翻译格式</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b0vg5smpoi44jzrb4zsjv4g0k\">Angular i18n 工具支持三种翻译格式：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4bfufo9cgqn6pchg2idn9ft1i\">XLIFF 1.2（默认）</li>\n<li>XLIFF 2</li>\n<li><a href=\"http://cldr.unicode.org/development/development-process/design-proposals/xmb\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8oddjbgt3ro4nfrptzxf1csel\">XML 消息捆绑包 (XMB)</a></li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5nmhy4z00xuqbt2lgihvs215l\">你可以使用 \n<code>--i18nFormat</code> 标志显式指定翻译格式，如以下示例命令所示：</p>\n<code-example language=\"sh\" class=\"code-shell\">\nng xi18n  --i18nFormat=xlf\nng xi18n  --i18nFormat=xlf2\nng xi18n  --i18nFormat=xmb\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"33p47491lynk6f8utkgviqpxz\">本指南中的示例使用默认的 XLIFF 1.2 格式。</p>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4rml78vff7y7ix48adlk5bus9\">XLIFF 文件的扩展名为 .xlf。XMB 格式生成 .xmb 源文件，但使用 .xtb（XML 翻译捆绑包：XTB）翻译文件。</p>\n</div>\n<a id=\"ng-xi18n-options\"></a>\n<h3 id=\"other-options\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dcwj1icbp0jx0nb9bvw9udbo3\"><i class=\"material-icons\">link</i>其他选项</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6dtyddb83f6j987q5136vswbd\">你可以使用参数 \n<code>--outputPath</code> 指定 CLI 用于提取翻译源文件的输出路径：</p>\n<code-example language=\"sh\" class=\"code-shell\">\n\n  ng xi18n --outputPath src/locale\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ulwhztft9w1b188kus06bsm1\">你可以使用参数 \n<code>--outFile</code> 更改提取工具生成的翻译源文件的名称：</p>\n<code-example language=\"sh\" class=\"code-shell\">\n\n  ng xi18n --outFile source.xlf\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aq6uitrkxudie4cz2t2rwm7fu\">你可以使用参数 \n<code>--locale</code> 指定应用的基本语言环境：</p>\n<code-example language=\"sh\" class=\"code-shell\">\n\n  ng xi18n --locale fr\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"94zvlojwn6s1tt0optcrjgdpa\">提取工具使用语言环境将应用语言环境信息添加到翻译源文件中。此信息不会被 Angular 使用，但外部翻译工具可能需要它。</p>\n<a id=\"translate\"></a>\n<h2 id=\"translate-text-messages\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cubs0fupk8fwmmimxjymsis9i\"><i class=\"material-icons\">link</i>翻译文本消息</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7yqgw1rg84cz5jw3q2vmtd5yx\"><code>ng xi18n</code> 命令在项目 \n<code>src</code> 文件夹中生成一个名为 \n<code>messages.xlf</code> 的翻译源文件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"axhrfhozt5925icc5etvige37\">下一步是将此源文件翻译成特定语言的翻译文件。本指南中的示例创建了一个法语翻译文件。</p>\n<a id=\"localization-folder\"></a>\n<h3 id=\"create-a-localization-folder\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"136iinmu5qx7q3hox5zfj02m6\"><i class=\"material-icons\">link</i>创建本地化文件夹</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bpb7vtcg8o5d8b8poluo1sep4\">大多数应用被翻译成不止一种其他语言。因此，项目结构通常反映整个国际化工作。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4n9xk07dw9brldjbowg7aerb1\">一种方法是为本地化专门设置一个文件夹，并将相关的资产（如国际化文件）存储在那里。</p>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2hoha3xffb3p3moecn6gkw3hn\">本地化和国际化是\n<a href=\"https://en.wikipedia.org/wiki/Internationalization_and_localization\">不同的但密切相关的术语</a>。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9vhtxmqsajo4rbh22os9vvwj\">本指南遵循这种方法。它在 \n<code>src/</code> 下有一个 \n<code>locale</code> 文件夹。该文件夹中的资产具有与其关联的语言环境匹配的文件扩展名。</p>\n<h3 id=\"create-the-translation-files\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"emtbifpsstyorjqidjokjvlga\"><i class=\"material-icons\">link</i>创建翻译文件</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1gfpkvvvgeiywab0u9s8ga2p0\">对于每个翻译源文件，必须至少有一个语言翻译文件用于最终的翻译。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6yl3gov1mkii9hei1hh0eq535\">对于此示例：</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ivmmhk4q1kz4ixshfux2e9mm\">复制 \n<code>messages.xlf</code> 文件。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bsqnvwf35vv1l76odabh1fh7n\">将副本放在 \n<code>locale</code> 文件夹中。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"786f1pomb92gqereub9fd8z4f\">将副本重命名为 \n<code>messages.fr.xlf</code>，用于法语翻译。</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"budby2p6dphuctuup0z25ef34\">如果你要翻译成其他语言，则需要对每种目标语言重复这些步骤。</p>\n<a id=\"translate-text-nodes\"></a>\n<h3 id=\"translate-text-nodes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bae2wj26jggkst81zcl4pblg9\"><i class=\"material-icons\">link</i>翻译文本节点</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"atnbhme7hxh01bi9okwcthll0\">在一个大型翻译项目中，你会将 \n<code>messages.fr.xlf</code> 文件发送给法语翻译人员，他们会使用 XLIFF 文件编辑器输入翻译。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1tzzytsgkvmgjfeszxm0b1yc9\">此示例文件很容易翻译，无需特殊的编辑器或法语知识。</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9vqt88ci1hyfc6h7b4rrfu1g8\">打开 \n<code>messages.fr.xlf</code> 并找到第一个 \n<code>&lt;trans-unit&gt;</code> 部分：</li>\n</ol>\n<blockquote>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translated-hello-before\" title=\"src/locale/messages.fr.xlf (<trans-unit>)\" linenums=\"false\">\n&lt;trans-unit id=\"introductionHeader\" datatype=\"html\"&gt;\n  &lt;source&gt;Hello i18n!&lt;/source&gt;\n  &lt;note priority=\"1\" from=\"description\"&gt;An introduction header for this sample&lt;/note&gt;\n  &lt;note priority=\"1\" from=\"meaning\"&gt;User welcome&lt;/note&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"13ozv4ystpj3a2oy7pav4uhht\">此 XML 元素表示你之前在本指南中使用 \n<code>i18n</code> 属性标记的 \n<code>&lt;h1&gt;</code> 问候标签的翻译。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ai1eavu1m0wb8z5wckplvankg\">请注意，翻译单元 \n<code>id=introductionHeader</code> 是从你之前设置的\n<a href=\"guide/i18n#custom-id\" title=\"Set a custom id\">自定义 <code>id</code></a> 派生的，但没有源 HTML 中所需的 \n<code>@@</code> 前缀。</p>\n</blockquote>\n<ol start=\"2\">\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dxdlv3pt6xif9cbapijoyc01m\">复制 \n<code>&lt;source/&gt;</code> 标签，将其重命名为 \n<code>target</code>，然后用法语问候语替换其内容。如果你正在处理更复杂的翻译，你可以使用源、描述和含义元素提供的信息和上下文来指导你选择合适的法语翻译。</li>\n</ol>\n<blockquote>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translated-hello\" title=\"src/locale/messages.fr.xlf (<trans-unit>, after translation)\" linenums=\"false\">\n&lt;trans-unit id=\"introductionHeader\" datatype=\"html\"&gt;\n  &lt;source&gt;Hello i18n!&lt;/source&gt;\n  &lt;target&gt;Bonjour i18n !&lt;/target&gt;\n  &lt;note priority=\"1\" from=\"description\"&gt;An introduction header for this sample&lt;/note&gt;\n  &lt;note priority=\"1\" from=\"meaning\"&gt;User welcome&lt;/note&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n</blockquote>\n<ol start=\"3\">\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eyr6irmzgn96g2l0qqyu92l9m\">以相同的方式翻译其他文本节点：</li>\n</ol>\n<blockquote>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translated-other-nodes\" title=\"src/locale/messages.fr.xlf (<trans-unit>)\" linenums=\"false\">\n&lt;trans-unit id=\"ba0cc104d3d69bf669f97b8d96a4c5d8d9559aa3\" datatype=\"html\"&gt;\n  &lt;source&gt;I don&amp;apos;t output any element&lt;/source&gt;\n  &lt;target&gt;Je n'affiche aucun élément&lt;/target&gt;\n&lt;/trans-unit&gt;\n&lt;trans-unit id=\"701174153757adf13e7c24a248c8a873ac9f5193\" datatype=\"html\"&gt;\n  &lt;source&gt;Angular logo&lt;/source&gt;\n  &lt;target&gt;Logo d'Angular&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n</blockquote>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"90y479bn3huwvf0zvxzemi88q\"><strong>Angular i18n 工具生成了这些翻译单元的 ID。不要更改它们。</strong>每个 \n<code>id</code> 都取决于模板文本的内容及其分配的含义。如果你更改了文本或含义，则 \n<code>id</code> 会发生变化。有关更多信息，请参阅\n<strong><a href=\"guide/i18n#custom-id\">翻译文件维护讨论</a></strong>。</p>\n</div>\n<a id=\"translate-plural-select\"></a>\n<h2 id=\"translate-plural-and-select-expressions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d6isk2d51sxagzbvur3qjwhru\"><i class=\"material-icons\">link</i>翻译复数和选择表达式</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ymilljpomjewl590t4vv66jc\"><em>复数</em>和\n<em>选择</em> ICU 表达式是单独提取的，因此在准备翻译时需要特别注意。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8u4bqk7pou2is8mr7i33qgirv\">在与你从源模板其他地方识别的其他翻译单元相关的上下文中查找这些表达式。在此示例中，你知道 \n<code>select</code> 的翻译单元必须位于 logo 的翻译单元的正下方。</p>\n<a id=\"translate-plural\"></a>\n<h3 id=\"translate-plural\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qkngz8hfvm0tgqm0bfbtqf3t\"><i class=\"material-icons\">link</i>翻译\n<em>复数</em></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e1jfif3p2552a35qo4ka3g56v\">要翻译 \n<code>plural</code>，请翻译其 ICU 格式匹配值：</p>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translated-plural\" title=\"src/locale/messages.fr.xlf (<trans-unit>)\" linenums=\"false\">\n&lt;trans-unit id=\"5a134dee893586d02bffc9611056b9cadf9abfad\" datatype=\"html\"&gt;\n  &lt;source&gt;{VAR_PLURAL, plural, =0 {just now} =1 {one minute ago} other {&lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes ago} }&lt;/source&gt;\n  &lt;target&gt;{VAR_PLURAL, plural, =0 {à l'instant} =1 {il y <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> une minute} other {il y <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> &lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes} }&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66bb1m8xyomygwttteez94uht\">你可以添加或删除复数情况，每种语言都有自己的基数。（参见\n<a href=\"http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html\">CLDR 复数规则</a>。）</p>\n<a id=\"translate-select\"></a>\n<h3 id=\"translate-select\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"173pvyru6skf4olk7w6opch4u\"><i class=\"material-icons\">link</i>翻译\n<em>选择</em></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bo9mrwtbd1n5z2hsc66oxv64v\">以下是组件模板中示例 \n<code>select</code> ICU 表达式的内容：</p>\n<code-example path=\"i18n/src/app/app.component.html\" region=\"i18n-select\" title=\"src/app/app.component.html\" linenums=\"false\">\n&lt;span i18n&gt;The author is {gender, select, male {male} female {female} other {other}}&lt;/span&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6cnvqlbl18xvq40lpdu6mpte3\">提取工具将其分解为两个翻译单元，因为 ICU 表达式是单独提取的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"enktyz0cghhfzkvnryat01u4o\">第一个单元包含 \n<code>select</code> 之外的文本。在 \n<code>select</code> 的位置是一个占位符 \n<code>&lt;x id=\"ICU\"&gt;</code>，它代表 \n<code>select</code> 消息。翻译文本并根据需要移动占位符，但不要删除它。如果你删除了占位符，则 ICU 表达式将不会出现在翻译后的应用程序中。</p>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translate-select-1\" title=\"src/locale/messages.fr.xlf (<trans-unit>)\" linenums=\"false\">\n&lt;/trans-unit&gt;\n&lt;trans-unit id=\"f99f34ac9bd4606345071bd813858dec29f3b7d1\" datatype=\"html\"&gt;\n  &lt;source&gt;The author is &lt;x id=\"ICU\" equiv-text=\"{gender, select, male {...} female {...} other {...}}\"/&gt;&lt;/source&gt;\n  &lt;target&gt;L'auteur est &lt;x id=\"ICU\" equiv-text=\"{gender, select, male {...} female {...} other {...}}\"/&gt;&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"egdnwvn6xim2otef6rkmqd48k\">第二个翻译单元（紧接在第一个单元的下方）包含 \n<code>select</code> 消息。也翻译它。</p>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translate-select-2\" title=\"src/locale/messages.fr.xlf (<trans-unit>)\" linenums=\"false\">\n&lt;trans-unit id=\"eff74b75ab7364b6fa888f1cbfae901aaaf02295\" datatype=\"html\"&gt;\n  &lt;source&gt;{VAR_SELECT, select, male {male} female {female} other {other} }&lt;/source&gt;\n  &lt;target&gt;{VAR_SELECT, select, male {un homme} female {une femme} other {autre} }&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bqlsf0ykxv00kwp15y0tfuhyf\">以下是它们一起翻译后的样子：</p>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translated-select\" title=\"src/locale/messages.fr.xlf (<trans-unit>)\" linenums=\"false\">\n&lt;/trans-unit&gt;\n&lt;trans-unit id=\"f99f34ac9bd4606345071bd813858dec29f3b7d1\" datatype=\"html\"&gt;\n  &lt;source&gt;The author is &lt;x id=\"ICU\" equiv-text=\"{gender, select, male {...} female {...} other {...}}\"/&gt;&lt;/source&gt;\n  &lt;target&gt;L'auteur est &lt;x id=\"ICU\" equiv-text=\"{gender, select, male {...} female {...} other {...}}\"/&gt;&lt;/target&gt;\n&lt;/trans-unit&gt;\n&lt;trans-unit id=\"eff74b75ab7364b6fa888f1cbfae901aaaf02295\" datatype=\"html\"&gt;\n  &lt;source&gt;{VAR_SELECT, select, male {male} female {female} other {other} }&lt;/source&gt;\n  &lt;target&gt;{VAR_SELECT, select, male {un homme} female {une femme} other {autre} }&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<a id=\"translate-nested\"></a>\n<h3 id=\"translate-a-nested-expression\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"97s2mol0jhacj1x5hg6bt9rgg\"><i class=\"material-icons\">link</i>翻译嵌套表达式</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"csydzzj7tx7p6n89yjf57ma7c\">嵌套表达式类似于前面的示例。与前面的示例一样，有两个翻译单元。第一个单元包含嵌套表达式之外的文本：</p>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translate-nested-1\" title=\"src/locale/messages.fr.xlf (<trans-unit>)\" linenums=\"false\">\n&lt;trans-unit id=\"972cb0cf3e442f7b1c00d7dab168ac08d6bdf20c\" datatype=\"html\"&gt;\n  &lt;source&gt;Updated: &lt;x id=\"ICU\" equiv-text=\"{minutes, plural, =0 {...} =1 {...} other {...}}\"/&gt;&lt;/source&gt;\n  &lt;target&gt;Mis à jour: &lt;x id=\"ICU\" equiv-text=\"{minutes, plural, =0 {...} =1 {...} other {...}}\"/&gt;&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"be72y5n4qsvlmu12vx68ryxcz\">第二个单元包含完整的嵌套表达式：</p>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translate-nested-2\" title=\"src/locale/messages.fr.xlf (<trans-unit>)\" linenums=\"false\">\n&lt;trans-unit id=\"7151c2e67748b726f0864fc443861d45df21d706\" datatype=\"html\"&gt;\n  &lt;source&gt;{VAR_PLURAL, plural, =0 {just now} =1 {one minute ago} other {&lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes ago by {VAR_SELECT, select, male {male} female {female} other {other} }} }&lt;/source&gt;\n  &lt;target&gt;{VAR_PLURAL, plural, =0 {à l'instant} =1 {il y <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> une minute} other {il y <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> &lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes par {VAR_SELECT, select, male {un homme} female {une femme} other {autre} }} }&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9c4n3wsvoveoindzbz7vbs7je\">以下是它们一起翻译后的样子：</p>\n<code-example path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"translate-nested\" title=\"src/locale/messages.fr.xlf (<trans-unit>)\" linenums=\"false\">\n&lt;trans-unit id=\"972cb0cf3e442f7b1c00d7dab168ac08d6bdf20c\" datatype=\"html\"&gt;\n  &lt;source&gt;Updated: &lt;x id=\"ICU\" equiv-text=\"{minutes, plural, =0 {...} =1 {...} other {...}}\"/&gt;&lt;/source&gt;\n  &lt;target&gt;Mis à jour: &lt;x id=\"ICU\" equiv-text=\"{minutes, plural, =0 {...} =1 {...} other {...}}\"/&gt;&lt;/target&gt;\n&lt;/trans-unit&gt;\n&lt;trans-unit id=\"7151c2e67748b726f0864fc443861d45df21d706\" datatype=\"html\"&gt;\n  &lt;source&gt;{VAR_PLURAL, plural, =0 {just now} =1 {one minute ago} other {&lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes ago by {VAR_SELECT, select, male {male} female {female} other {other} }} }&lt;/source&gt;\n  &lt;target&gt;{VAR_PLURAL, plural, =0 {à l'instant} =1 {il y <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> une minute} other {il y <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> &lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes par {VAR_SELECT, select, male {un homme} female {une femme} other {autre} }} }&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47y34p5a2e8qsym82nssbieiv\">整个模板翻译已完成。下一部分介绍如何将该翻译加载到应用程序中。</p>\n<a id=\"app-pre-translation\"></a>\n<h3 id=\"the-app-and-its-translation-file\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4tsy3k4bodtx8luyun5mwf4zc\"><i class=\"material-icons\">link</i>应用程序及其翻译文件</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cry39sgwnd40ujh0pn1alw7a4\">示例应用程序及其翻译文件如下所示：</p>\n<code-tabs>\n  <code-pane title=\"src/app/app.component.html\" path=\"i18n/src/app/app.component.html\">\n&lt;h1 i18n=\"User welcome|An introduction header for this sample@@introductionHeader\"&gt;\n  Hello i18n!\n&lt;/h1&gt;\n\n&lt;ng-container i18n&gt;I don't output any element&lt;/ng-container&gt;\n\n&lt;br /&gt;\n\n&lt;img [src]=\"logo\" i18n-title title=\"Angular logo\" /&gt;\n&lt;br&gt;\n&lt;button (click)=\"inc(1)\"&gt;+&lt;/button&gt; &lt;button (click)=\"inc(-1)\"&gt;-&lt;/button&gt;\n&lt;span i18n&gt;Updated {minutes, plural, =0 {just now} =1 {one minute ago} other {{{minutes}} minutes ago}}&lt;/span&gt;\n({{minutes}})\n&lt;br&gt;&lt;br&gt;\n&lt;button (click)=\"male()\"&gt;&amp;#9794;&lt;/button&gt; &lt;button (click)=\"female()\"&gt;&amp;#9792;&lt;/button&gt; &lt;button (click)=\"other()\"&gt;&amp;#9895;&lt;/button&gt;\n&lt;span i18n&gt;The author is {gender, select, male {male} female {female} other {other}}&lt;/span&gt;\n&lt;br&gt;&lt;br&gt;\n&lt;span i18n&gt;Updated: {minutes, plural,\n  =0 {just now}\n  =1 {one minute ago}\n  other {{{minutes}} minutes ago by {gender, select, male {male} female {female} other {other}}}}\n&lt;/span&gt;\n\n\n</code-pane>\n  <code-pane title=\"src/app/app.component.ts\" path=\"i18n/src/app/app.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  minutes = 0;\n  gender = 'female';\n  fly = true;\n  logo = 'https://angular.io/assets/images/logos/angular/angular.png';\n  heroes: string[] = ['Magneta', 'Celeritas', 'Dynama'];\n  inc(i: number) {\n    this.minutes = Math.min(5, Math.max(0, this.minutes + i));\n  }\n  male() { this.gender = 'male'; }\n  female() { this.gender = 'female'; }\n  other() { this.gender = 'other'; }\n}\n\n\n\n</code-pane>\n  <code-pane title=\"src/app/app.module.ts\" path=\"i18n/src/app/app.module.ts\">\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [ <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> ],\n  declarations: [ AppComponent ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n</code-pane>\n  <code-pane title=\"src/main.ts\" path=\"i18n/doc-files/main.1.ts\">\nimport { <a href=\"api/core/enableProdMode\" class=\"code-anchor\">enableProdMode</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a> } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  <a href=\"api/core/enableProdMode\" class=\"code-anchor\">enableProdMode</a>();\n}\n\n<a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a>().bootstrapModule(AppModule);\n\n\n</code-pane>\n  <code-pane title=\"src/locale/messages.fr.xlf\" path=\"i18n/doc-files/messages.fr.xlf.html\">\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;xliff version=\"1.2\" xmlns=\"urn:oasis:names:tc:xliff:document:1.2\"&gt;\n  &lt;file source-language=\"en\" datatype=\"plaintext\" original=\"ng2.template\"&gt;\n    &lt;body&gt;\n      &lt;trans-unit id=\"introductionHeader\" datatype=\"html\"&gt;\n        &lt;source&gt;Hello i18n!&lt;/source&gt;\n        &lt;note priority=\"1\" from=\"description\"&gt;An introduction header for this sample&lt;/note&gt;\n        &lt;note priority=\"1\" from=\"meaning\"&gt;User welcome&lt;/note&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"introductionHeader\" datatype=\"html\"&gt;\n        &lt;source&gt;Hello i18n!&lt;/source&gt;\n        &lt;target&gt;Bonjour i18n !&lt;/target&gt;\n        &lt;note priority=\"1\" from=\"description\"&gt;An introduction header for this sample&lt;/note&gt;\n        &lt;note priority=\"1\" from=\"meaning\"&gt;User welcome&lt;/note&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"ba0cc104d3d69bf669f97b8d96a4c5d8d9559aa3\" datatype=\"html\"&gt;\n        &lt;source&gt;I don&amp;apos;t output any element&lt;/source&gt;\n        &lt;target&gt;Je n'affiche aucun élément&lt;/target&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"701174153757adf13e7c24a248c8a873ac9f5193\" datatype=\"html\"&gt;\n        &lt;source&gt;Angular logo&lt;/source&gt;\n        &lt;target&gt;Logo d'Angular&lt;/target&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"5a134dee893586d02bffc9611056b9cadf9abfad\" datatype=\"html\"&gt;\n        &lt;source&gt;{VAR_PLURAL, plural, =0 {just now} =1 {one minute ago} other {&lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes ago} }&lt;/source&gt;\n        &lt;target&gt;{VAR_PLURAL, plural, =0 {à l'instant} =1 {il y <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> une minute} other {il y <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> &lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes} }&lt;/target&gt;\n      &lt;/trans-unit&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"f99f34ac9bd4606345071bd813858dec29f3b7d1\" datatype=\"html\"&gt;\n        &lt;source&gt;The author is &lt;x id=\"ICU\" equiv-text=\"{gender, select, male {...} female {...} other {...}}\"/&gt;&lt;/source&gt;\n        &lt;target&gt;L'auteur est &lt;x id=\"ICU\" equiv-text=\"{gender, select, male {...} female {...} other {...}}\"/&gt;&lt;/target&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"eff74b75ab7364b6fa888f1cbfae901aaaf02295\" datatype=\"html\"&gt;\n        &lt;source&gt;{VAR_SELECT, select, male {male} female {female} other {other} }&lt;/source&gt;\n        &lt;target&gt;{VAR_SELECT, select, male {un homme} female {une femme} other {autre} }&lt;/target&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"972cb0cf3e442f7b1c00d7dab168ac08d6bdf20c\" datatype=\"html\"&gt;\n        &lt;source&gt;Updated: &lt;x id=\"ICU\" equiv-text=\"{minutes, plural, =0 {...} =1 {...} other {...}}\"/&gt;&lt;/source&gt;\n        &lt;target&gt;Mis à jour: &lt;x id=\"ICU\" equiv-text=\"{minutes, plural, =0 {...} =1 {...} other {...}}\"/&gt;&lt;/target&gt;\n      &lt;/trans-unit&gt;\n      &lt;trans-unit id=\"7151c2e67748b726f0864fc443861d45df21d706\" datatype=\"html\"&gt;\n        &lt;source&gt;{VAR_PLURAL, plural, =0 {just now} =1 {one minute ago} other {&lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes ago by {VAR_SELECT, select, male {male} female {female} other {other} }} }&lt;/source&gt;\n        &lt;target&gt;{VAR_PLURAL, plural, =0 {à l'instant} =1 {il y <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> une minute} other {il y <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> &lt;x id=\"INTERPOLATION\" equiv-text=\"{{minutes}}\"/&gt; minutes par {VAR_SELECT, select, male {un homme} female {une femme} other {autre} }} }&lt;/target&gt;\n      &lt;/trans-unit&gt;\n    &lt;/body&gt;\n  &lt;/file&gt;\n&lt;/xliff&gt;\n\n\n\n</code-pane>\n</code-tabs>\n<a id=\"merge\"></a>\n<h2 id=\"merge-the-completed-translation-file-into-the-app\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"469zuelqdfme3uirpo85nlmnb\"><i class=\"material-icons\">link</i>将完成的翻译文件合并到应用程序中</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5egcwsrlagye1350xv0soq63p\">要将翻译后的文本合并到组件模板中，请使用完成的翻译文件编译应用程序。为 Angular 编译器提供三个特定于翻译的信息：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8stmm4kpulmhipb2wqwn998u0\">翻译文件。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dh5oxrfj4jxuig1tpzufxc684\">翻译文件格式。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"gelwu8pent9vt2d9zcacs47l\">语言环境（例如 \n<code>fr</code> 或 \n<code>en-US</code>）。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5tfy00g04nttkwvxbc0bze95x\">无论翻译文件是 \n<code>.xlf</code> 格式还是 Angular 理解的其他格式（如 \n<code>.xtb</code>），编译过程都是相同的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4cgljr0dm9xz7l5bn71dfypbp\">你提供此信息的方式取决于你是使用 JIT 编译器还是 AOT 编译器进行编译。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3x2l2uv1q81xoox4zn7voacna\">使用\n<a href=\"guide/i18n#merge-aot\">AOT</a>，你将信息作为 CLI 参数传递。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f0o3kumbxvdoqoe0zjw7292pj\">使用\n<a href=\"guide/i18n#merge-jit\">JIT</a>，你在引导时提供信息。</li>\n</ul>\n<a id=\"merge-aot\"></a>\n<h3 id=\"merge-with-the-aot-compiler\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ogy0xqi87wfdrtfz74112447\"><i class=\"material-icons\">link</i>与 AOT 编译器合并</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"br9j8moisft72jrtjfy9g120i\">AOT（\n<em>预先编译</em>）编译器是构建过程的一部分，该过程会生成一个小型、快速、可立即运行的应用程序包。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"68w4vox87160xu88xhj9zwchp\">使用 AOT 编译器进行国际化时，你必须为每种语言预先构建一个单独的应用程序包，并根据服务器端语言检测或 URL 参数提供相应的包。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"77rpvt5av5wyrmhsex27d242x\">你还需要指示 AOT 编译器使用你的翻译文件。为此，你使用 \n<code>ng serve</code> 或 \n<code>ng build</code> 命令的三个选项：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c0qz44iqh0noxb5s0uq1hxpsj\"><code>--i18nFile</code>：翻译文件的路径。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qafruo1mzcxcqh4n5kb4ipk5\"><code>--i18nFormat</code>：翻译文件的格式。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"758qmkc99zqip0ojz99msbnpm\"><code>--locale</code>：语言环境 ID。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1bd065phf5bqz7xwptmfgokep\">以下示例展示了如何提供本指南前面部分创建的法国语言文件：</p>\n<code-example language=\"sh\" class=\"code-shell\">\n  ng serve --aot --i18nFile=src/locale/messages.fr.xlf --i18nFormat=xlf --locale=fr\n</code-example>\n<a id=\"merge-jit\"></a>\n<h3 id=\"merge-with-the-jit-compiler\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"289dk86bzyy7cqo7b6ntz2b8r\"><i class=\"material-icons\">link</i>与 JIT 编译器合并</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"41w6mz1yvwwkzeehuiy07kh1y\">JIT 编译器在应用加载时在浏览器中编译应用。 使用 JIT 编译器进行翻译是一个动态过程，包括：</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"clauojaxqudh3rl1ieypvzvm4\">将相应的语言翻译文件作为字符串常量导入。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eawd54gofk89oh2l1w5kyoyj7\">为 JIT 编译器创建相应的翻译提供者。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6kt6hubgrgszmo15vj7u1tept\">使用这些提供者引导应用。</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"al7uga99yrat0u9r6975fhtwk\">三个提供者告诉 JIT 编译器如何在编译应用时为特定语言翻译模板文本：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a3slwth53l0e6xkcqi44fct8s\"><code><a href=\"api/core/TRANSLATIONS\" class=\"code-anchor\">TRANSLATIONS</a></code> 是一个包含翻译文件内容的字符串。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5lkl3lzc9ux3fapgo1ny1dqxc\"><code><a href=\"api/core/TRANSLATIONS_FORMAT\" class=\"code-anchor\">TRANSLATIONS_FORMAT</a></code> 是文件的格式：\n<code>xlf</code>、\n<code>xlf2</code> 或 \n<code>xtb</code>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1r61y0v929qqglw93d3pqy38d\"><code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> 是目标语言的语言环境。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6slc7fxl93rc0xk1splsejjcr\">Angular 的 \n<code>bootstrapModule</code> 方法有一个第二个 \n<code>compilerOptions</code> 参数，可以影响 编译器的行为。你可以使用它来提供翻译提供者：</p>\n<code-example path=\"i18n/doc-files/main.2.ts\" title=\"src/main.ts\">\nimport { <a href=\"api/core/enableProdMode\" class=\"code-anchor\">enableProdMode</a>, <a href=\"api/core/TRANSLATIONS\" class=\"code-anchor\">TRANSLATIONS</a>, <a href=\"api/core/TRANSLATIONS_FORMAT\" class=\"code-anchor\">TRANSLATIONS_FORMAT</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a> } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  <a href=\"api/core/enableProdMode\" class=\"code-anchor\">enableProdMode</a>();\n}\n\n// use the require method provided by webpack\ndeclare const require;\n// we use the webpack raw-loader to return the content as <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> string\nconst translations = require(`raw-loader!./locale/messages.fr.xlf`);\n\n<a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a>().bootstrapModule(AppModule, {\n  providers: [\n    {provide: <a href=\"api/core/TRANSLATIONS\" class=\"code-anchor\">TRANSLATIONS</a>, useValue: translations},\n    {provide: <a href=\"api/core/TRANSLATIONS_FORMAT\" class=\"code-anchor\">TRANSLATIONS_FORMAT</a>, useValue: 'xlf'}\n  ]\n});\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bhrwpds14lhtmj7hkaajjzst7\">然后在主模块中提供 \n<code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code>：</p>\n<code-example path=\"i18n/doc-files/app.module.ts\" title=\"src/app/app.module.ts\" linenums=\"false\">\nimport { <a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a>, <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\n\nimport { AppComponent } from '../src/app/app.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [ <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> ],\n  declarations: [ AppComponent ],\n  providers: [ { provide: <a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a>, useValue: 'fr' } ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n</code-example>\n<a id=\"missing-translation\"></a>\n<h3 id=\"report-missing-translations\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"gnvart5c1iwtpev1nrrrghgh\"><i class=\"material-icons\">link</i>报告遗漏的翻译</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e96feu5iitscq9peag5yn2du2\">默认情况下，当翻译缺失时，构建会成功，但会生成类似 \n<code>Missing translation for message \"foo\"</code> 的警告。你可以配置 Angular 编译器生成的警告级别：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d52z0n6l9zmuqk7tvec9omt1q\">错误：抛出错误。如果你使用的是 AOT 编译，构建将失败。如果你使用的是 JIT 编译，应用将无法加载。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f29ooqk002mb9ii2qejcjq6o\">警告（默认）：在控制台或 shell 中显示“翻译缺失”警告。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"5epfa7sdkbivw84adh3gintp2\">Ignore：什么都不做。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zx7s1j21uuj6vtdnnt0pqzvg\">如果你使用 AOT 编译器，请使用 CLI 参数 \n<code>--missingTranslation</code> 指定警告级别。以下示例展示了如何将警告级别设置为错误：</p>\n<code-example language=\"sh\" class=\"code-shell\">\n  ng serve --aot --missingTranslation=error\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"53o1v4jyvzmris02uzzmbxzix\">如果你使用 JIT 编译器，请在引导时通过添加 'MissingTranslationStrategy' 属性在编译器配置中指定警告级别。以下示例展示了如何将警告级别设置为 错误：</p>\n<code-example path=\"i18n/doc-files/main.3.ts\" title=\"src/main.ts\">\nimport { <a href=\"api/core/MissingTranslationStrategy\" class=\"code-anchor\">MissingTranslationStrategy</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a> } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\n\n// ...\n\n<a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a>().bootstrapModule(AppModule, {\n  missingTranslation: <a href=\"api/core/MissingTranslationStrategy#Error\" class=\"code-anchor\">MissingTranslationStrategy.Error</a>,\n  providers: [\n    // ...\n  ]\n});\n\n\n</code-example>\n\n</div>\n<!-- links to this doc:\n - api/common/DatePipe\n - api/common/getLocaleExtraDayPeriodRules\n - api/common/getLocaleExtraDayPeriods\n - api/common/registerLocaleData\n - api/core/LOCALE_ID\n - api/core/MissingTranslationStrategy\n - api/core/TRANSLATIONS\n - api/core/TRANSLATIONS_FORMAT\n - guide/architecture-next-steps\n - guide/change-log\n-->\n<!-- links from this doc:\n - api/animations/state\n - api/common/CurrencyPipe\n - api/common/DatePipe\n - api/common/DecimalPipe\n - api/common/PercentPipe\n - api/common/registerLocaleData\n - api/core/Component\n - api/core/LOCALE_ID\n - api/core/MissingTranslationStrategy\n - api/core/MissingTranslationStrategy#Error\n - api/core/NgModule\n - api/core/TRANSLATIONS\n - api/core/TRANSLATIONS_FORMAT\n - api/core/enableProdMode\n - api/platform-browser-dynamic/platformBrowserDynamic\n - api/platform-browser/BrowserModule\n - api/router/RouterLinkWithHref\n - guide/i18n#add-i18n-translation-attributes\n - guide/i18n#angular-and-i18n\n - guide/i18n#create-a-localization-folder\n - guide/i18n#create-a-translation-source-file-with-ng-xi18n\n - guide/i18n#create-the-translation-files\n - guide/i18n#custom-id\n - guide/i18n#define-unique-custom-ids\n - guide/i18n#help-the-translator-with-a-description-and-meaning\n - guide/i18n#i18n-pipes\n - guide/i18n#internationalization-i18n\n - guide/i18n#mark-text-with-the-i18n-attribute\n - guide/i18n#merge-aot\n - guide/i18n#merge-jit\n - guide/i18n#merge-the-completed-translation-file-into-the-app\n - guide/i18n#merge-with-the-aot-compiler\n - guide/i18n#merge-with-the-jit-compiler\n - guide/i18n#nesting-plural-and-select-icu-expressions\n - guide/i18n#other-options\n - guide/i18n#other-translation-formats\n - guide/i18n#report-missing-translations\n - guide/i18n#select-among-alternative-text-messages\n - guide/i18n#set-a-custom-id-for-persistence-and-maintenance\n - guide/i18n#setting-up-the-locale-of-your-app\n - guide/i18n#template-translations\n - guide/i18n#the-app-and-its-translation-file\n - guide/i18n#translate-a-nested-expression\n - guide/i18n#translate-plural\n - guide/i18n#translate-plural-and-select-expressions\n - guide/i18n#translate-select\n - guide/i18n#translate-singular-and-plural\n - guide/i18n#translate-text-messages\n - guide/i18n#translate-text-nodes\n - guide/i18n#translate-text-without-creating-an-element\n - guide/i18n#use-a-custom-id-with-a-description\n - http://cldr.unicode.org/\n - http://cldr.unicode.org/core-spec#Unicode_Language_and_Locale_Identifiers\n - http://cldr.unicode.org/development/development-process/design-proposals/xmb\n - http://cldr.unicode.org/index/cldr-spec/plural-rules\n - http://userguide.icu-project.org/formatparse/messages\n - http://www.rfc-editor.org/rfc/bcp/bcp47.txt\n - http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html\n - https://cli.angular.io/\n - https://en.wikipedia.org/wiki/Internationalization_and_localization\n - https://en.wikipedia.org/wiki/XLIFF\n - https://github.com/angular/angular-cli/tree/master/packages/%40ngtools/webpack\n - https://github.com/angular/angular-cli/wiki/xi18n\n - https://github.com/angular/angular/tree/master/packages/common/locales\n-->"
}