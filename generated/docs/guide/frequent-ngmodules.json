{
  "id" : "guide/frequent-ngmodules",
  "title" : "常用模块",
  "contents" : "<div class=\"content\">\n<h1 id=\"frequently-used-modules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2esmcl49v5abop44i0zfguerp\"><i class=\"material-icons\">link</i>常用模块</h1>\n<h4 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\"><i class=\"material-icons\">link</i>先决条件</h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aizpbk74mi09a722ys7yun79v\">对 \n<a href=\"guide/bootstrapping\">引导</a> 的基本了解。</p>\n<hr>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"52kc1rdqyjdtmvhbfjas0s2vy\">一个 Angular 应用至少需要一个模块作为根模块。随着你向应用添加特性，你可以在模块中添加它们。以下是常用 Angular 模块，以及它们包含的一些内容的示例：</p>\n<table>\n <tbody><tr>\n   <th style=\"vertical-align: top\">\n     NgModule\n   </th>\n   <th style=\"vertical-align: top\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"98ncjm7nvpmv4c15g0xgp031a\">从这里导入</th>\n   <th style=\"vertical-align: top\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"26szvyfq9yfx1tbqvm0k5lbvr\">你为什么使用它</th>\n </tr>\n <tr>\n   <td><code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code></td>\n   <td><code>@angular/platform-browser</code></td>\n   <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"78v4xflokvplvgmw56nhua9ad\">当你想要在浏览器中运行你的应用时</td>\n </tr>\n <tr>\n   <td><code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code></td>\n   <td><code>@angular/common</code></td>\n   <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8rrsf6zmr0emhphqdeexof6i7\">当你想要使用 \n<code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code>、\n<code>NgFor</code> 时</td>\n </tr>\n <tr>\n   <td><code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code></td>\n   <td><code>@angular/forms</code></td>\n   <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ahaf5z0idniipzjx6hr8l67b\">当你构建模板驱动表单（包括 \n<code><a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a></code>）时</td>\n </tr>\n <tr>\n   <td><code><a href=\"api/forms/ReactiveFormsModule\" class=\"code-anchor\">ReactiveFormsModule</a></code></td>\n   <td><code>@angular/forms</code></td>\n   <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7k97ue0awhymp55rjm6du9wlc\">当你构建响应式表单时</td>\n </tr>\n <tr>\n   <td><code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code></td>\n   <td><code>@angular/router</code></td>\n   <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7119gy2y5lpb84tam5fjmo341\">用于路由，以及当你想要使用 \n<code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code>、\n<code>.forRoot()</code> 和 \n<code>.forChild()</code> 时</td>\n </tr>\n <tr>\n   <td><code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code></td>\n   <td><code>@angular/common/http</code></td>\n   <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dnov225p7a3vfup5pumdyp9uk\">当你想要与服务器通信时</td>\n </tr>\n</tbody></table>\n<h2 id=\"importing-modules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2o21vs33ixrprndcto3rlor1y\"><i class=\"material-icons\">link</i>导入模块</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5j4nqpv4husj7pmog639vv4wr\">当你使用这些 Angular 模块时，在 \n<code>AppModule</code> 或你的特性模块中导入它们，并将它们列在 \n<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的 \n<code>imports</code> 数组中。例如，在 CLI 生成的基本应用中，\n<code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 是 \n<code>AppModule</code>（\n<code>app.module.ts</code>）顶部第一个导入的模块。</p>\n<code-example language=\"typescript\">\n/* import modules so that AppModule can access them */\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ /* add modules here so Angular knows to use them */\n    <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"asjexmkqio6v6gn61ouddbtx8\">数组顶部的导入是 JavaScript 导入语句，而 \n<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 中的 \n<code>imports</code> 数组是 Angular 特定的。有关差异的更多信息，请参阅 \n<a href=\"guide/ngmodule-vs-jsmodule\">JavaScript 模块与 NgModules</a>。</p>\n<h2 id=\"browsermodule-and-commonmodule\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eb3qtsflw8g6v1k4ylbffq6v1\"><i class=\"material-icons\">link</i><code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 和 \n<code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ed4phk5eax5lodybmkmecsbbx\"><code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 导入 \n<code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>，它提供了许多常见的指令，例如 \n<code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 和 \n<code><a href=\"api/common/NgForOf\" class=\"code-anchor\">ngFor</a></code>。此外，\n<code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 重新导出 \n<code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>，使其所有指令都可用于导入 \n<code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 的任何模块。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cmcfaaactmiwkajt1clt2scq7\">对于在浏览器中运行的应用，在根 \n<code>AppModule</code> 中导入 \n<code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>，因为它提供了启动和运行浏览器应用所必需的服务。\n<code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 的提供者适用于整个应用，因此它应该只在根模块中，而不是在特性模块中。特性模块只需要 \n<code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> 中的常见指令；它们不需要重新安装应用范围内的提供者。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7rwgrv3s6qdnoh7ymw0d5tf6v\">如果你确实将 \n<code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 导入到一个惰性加载的特性模块中，Angular 会返回一个错误，告诉你应该使用 \n<code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> 代替。</p>\n<figure>\n <img src=\"generated/images/guide/frequent-ngmodules/browser-module-error.gif\" width=\"750\" alt=\"BrowserModule error\">\n</figure>\n<hr>\n<h2 id=\"more-on-ngmodules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4zpukz8usqrzb3byrzbogm52l\"><i class=\"material-icons\">link</i>关于 NgModules 的更多信息</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"320pd4quk21g01cifflgmc0pj\">你可能还会对以下内容感兴趣：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7t22zgv8ykbwmu1loddo1606h\"><a href=\"guide/bootstrapping\">引导</a>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ep3irm3ivsn2o0g2mgwnl8umg\"><a href=\"guide/ngmodules\">NgModules</a>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bb4qsq6zvscyfkwgoajja4d9x\"><a href=\"guide/ngmodule-vs-jsmodule\">JavaScript 模块与 NgModules</a>。</li>\n</ul>\n\n</div>\n<!-- links to this doc:\n - guide/feature-modules\n - guide/lazy-loading-ngmodules\n - guide/module-types\n - guide/ngmodule-vs-jsmodule\n - guide/providers\n - guide/sharing-ngmodules\n-->\n<!-- links from this doc:\n - api/common/CommonModule\n - api/common/NgForOf\n - api/common/NgIf\n - api/common/http/HttpClientModule\n - api/core/NgModule\n - api/forms/FormsModule\n - api/forms/NgModel\n - api/forms/ReactiveFormsModule\n - api/platform-browser/BrowserModule\n - api/router/RouterLink\n - api/router/RouterModule\n - guide/bootstrapping\n - guide/frequent-ngmodules#browsermodule-and-commonmodule\n - guide/frequent-ngmodules#frequently-used-modules\n - guide/frequent-ngmodules#importing-modules\n - guide/frequent-ngmodules#more-on-ngmodules\n - guide/frequent-ngmodules#prerequisites\n - guide/ngmodule-vs-jsmodule\n - guide/ngmodules\n-->"
}