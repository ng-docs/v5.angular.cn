{
  "id" : "guide/docs-style-guide",
  "title" : "作者风格指南",
  "contents" : "<div class=\"content\">\n<h1 id=\"authors-style-guide\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"44eaoc2s6s90d1sv6qhm4oo3l\"><i class=\"material-icons\">link</i>作者风格指南</h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"123dq77wjoqa25c4q0eik096k\">此页面介绍了 Angular 文档页面的设计和布局指南。所有指南页面作者都应遵循这些指南。偏差必须由文档编辑批准。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eded85b658e3l33jwc4mowecn\">大多数指南页面应该有 \n<a href=\"guide/docs-style-guide#from-code-samples\">配套的示例代码</a>，以及页面上代码片段的 \n<a href=\"guide/docs-style-guide#source-code-markup\">特殊标记</a>。代码示例应遵循 \n<a href=\"guide/styleguide\" title=\"Application Code Style Guide\">Angular 应用程序的风格指南</a>，因为读者期望一致性。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cfhrs41a3ht3jmt9luvsr95m2\">为了清晰和准确，\n<em>此</em> 页面上的每个指南都用一个工作示例来说明，然后是该示例的页面标记……如这里所示。</p>\n<code-example language=\"html\">\n  followed by the page markup for that example ... as shown here.\n</code-example>\n<h2 id=\"doc-generation-and-tooling\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ykkf0l94qlsv12qaacru5e4o\"><i class=\"material-icons\">link</i>文档生成和工具</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dzqk23thu06ngkhebju0kjmmv\">要更改文档页面和示例代码，请克隆 \n<a href=\"https://github.com/angular/angular\" title=\"Angular repo\">Angular github 仓库</a> 并转到 \n<code>aio/</code> 文件夹。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4j3011nm2niewovl4iidefc6p\"><a href=\"https://github.com/angular/angular/blob/master/aio/README.md\" title=\"AIO ReadMe\">aio/README.md</a> 解释了如何安装和使用工具来编辑和测试你的更改。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5hten3rfftdrc2d1j3hd8z0xq\">以下是指南页面作者的一些基本命令。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9et02ilqb38j2radr3h46x905\"><code>yarn setup</code> — 安装包；构建文档、stackblitz 并压缩。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7rkye2e1anls8qggdn9b308b6\"><code>yarn docs-watch --watch-only</code> — 监视已保存的内容更改并刷新浏览器。可选的 \n<code>--watch-only</code> 标志会跳过初始文档重建。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e2i0tnlkyf89lwriwyegbsrlg\"><code>yarn start</code> — 启动文档查看器应用程序，以便你可以在浏览器中查看本地更改。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bqhcbp4vd931ozczebadq3rl1\"><a href=\"http://localhost:4200/\">http://localhost:4200/</a> — 浏览到本地运行的应用程序。</p>\n</li>\n</ol>\n<h2 id=\"guide-pages\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5dug3lu3vk810vizzgj4rvo2q\"><i class=\"material-icons\">link</i>指南页面</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bahpkaj5fx13v0jnnj0geeyml\">除了少数几个指南页面之外，所有指南页面都是带有 \n<code>.md</code> 扩展名的 \n<a href=\"https://daringfireball.net/projects/markdown/syntax\" title=\"markdown\">markdown</a> 文件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eki1qbpk3vteok36uuz21prvm\">每个指南页面文件都存储在 \n<code>content/guide</code> 目录中。虽然 \n<a href=\"guide/docs-style-guide#navigation\">侧边导航</a> 面板显示为层次结构，但目录是扁平的，没有子文件夹。扁平文件夹方法允许我们重新排列明显的导航结构，而无需移动页面文件或重定向旧页面 URL。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"80dnkblouai6nczvzzw1rpgng\">文档生成过程会使用 \n<code>content/guide</code> 目录中的 markdown 文件，并在 \n<code>src/generated/docs/guide</code> 目录中生成 JSON 文件，该目录也是扁平的。这些 JSON 文件包含文档元数据和 HTML 内容的组合。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6b346cdf4ag9jsdem94vaijzh\">读者通过其页面 URL 请求页面。文档查看器会获取相应的 JSON 文件，对其进行解释，并将其渲染为完整的 HTML 页面。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5amkpghyjdnyeamjilmhst14h\">页面 URL 镜像 \n<code>content</code> 文件结构。指南页面的 URL 形式为 \n<code>guide/{page-name}</code>。\n<em>此</em> \"作者风格指南\" 的页面位于 \n<code>content/guide/docs-style-guide.md</code>，其 URL 为 \n<code>guide/docs-style-guide</code>。</p>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"autfvwqi6qi3e12gtaogjrurn\"><em>教程</em> 页面与指南页面完全相同。唯一的区别是它们位于 \n<code>content/tutorial</code> 而不是 \n<code>content/guide</code> 中，并且具有类似 \n<code>tutorial/{page-name}</code> 的 URL。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"arxwehbbn79hqxu7bxtq019im\"><em>API</em> 页面是从 Angular 源代码生成到 \n<code>src/generated/docs/api</code> 目录中的。文档查看器会将以 \n<code>api/</code> 开头的 URL 转换为对该目录中文档 JSON 文件的请求。本风格指南不讨论 API 页面的创建或维护。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"l9lvpujg8wzpur07fzs7e0wk\"><em>营销</em> 页面类似于指南页面。它们位于 \n<code>content/marketing</code> 目录中。虽然它们可以是 markdown 文件，但它们也可能是静态 HTML 页面或使用 JSON 数据渲染的动态 HTML 页面。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1m4bf581vampbg89v0c8o0t7u\">只有少数人被授权编写营销页面。本风格指南不讨论营销页面的创建或维护。</p>\n</div>\n<h2 id=\"markdown-and-html\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dqwyy2mq6etnlzcn601jmqq0t\"><i class=\"material-icons\">link</i>Markdown 和 HTML</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dp2bg17n37qov6br6eihbp6an\">虽然文档指南页面最终会渲染为 HTML，但几乎所有页面都是用 \n<a href=\"https://daringfireball.net/projects/markdown/syntax\" title=\"markdown\">Markdown</a> 编写的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9ta5j3vsq02vsj9u8m66ktf0\">Markdown 比 HTML 更易于阅读和编辑。许多编辑器（包括 Visual Studio Code）可以在你输入时渲染 Markdown。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2q5en6nwuaed85qcpq2lblrpt\">有时你可能需要离开 Markdown，用 HTML 编写文档的一部分。Markdown 允许你在同一个文档中混合使用 HTML 和 Markdown。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bm752m4aiug7no2iuy5g3jtkq\">标准的 Markdown 处理器不允许你在 HTML 标签\n<em>内部</em>放置 Markdown。但 Angular 文档的 Markdown 处理器\n<strong>支持在 HTML 中使用 Markdown</strong>，只要你遵循一条规则：</p>\n<div class=\"alert is-critical\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9y1j0e8s4dvpnyh8n7nh1y5mo\"><strong>始终</strong>在每个 HTML 开启标签和关闭标签之后\n<em>添加一个空行</em>。</p>\n</div>\n<code-example language=\"html\">\n&lt;div class=\"alert is-critical\"&gt;\n\n  **Always** follow every opening and closing HTML tag with _a blank line_.\n\n&lt;/div&gt;\n</code-example>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ip2b1dei1dlozke37kyvy4t0\">通常情况下，在\n<em>关闭 HTML</em> 标签之前也\n<em>添加一个空行</em>，但这并非强制要求。</p>\n</div>\n<h2 id=\"title\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"av6c6t8qksxzo8tyqhfsxy00r\"><i class=\"material-icons\">link</i>标题</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"afsgnwohm6h7yxvo8ivivwste\">每个指南文档都必须有一个标题。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6qhw287jz1oqja2z9o42rrzog\">标题应该出现在物理页面的顶部。 用 Markdown 的 \n<code>#</code> 字符开始标题。或者，你可以编写等效的 \n<code>&lt;h1&gt;</code>。</p>\n<code-example language=\"html\">\n  # Authors Style Guide\n</code-example>\n<p><strong data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d2gubkciqq6jsrt54c2fbkhwk\">每个文档只能有一个标题（\n<code>&lt;h1&gt;</code>）！</strong></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zercepebb6lyqqx2pnsvmk04\">标题文本应该使用“标题大小写”，这意味着你使用大写字母来开始第一个单词和所有\n<em>主要</em>单词。对于\n<em>次要</em>单词（如“in”、“of”和“the”）使用小写字母。</p>\n<code-example language=\"html\">\n  # The Meat of the Matter\n</code-example>\n<p><strong data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"12towumjzrvbexfx635fgt3i1\">标题之后始终至少要有一个空行。</strong></p>\n<h2 id=\"sections\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"7w88zr2vle94hg5329lphobbh\"><i class=\"material-icons\">link</i>部分</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"658l2p8jhjxzdi0s5vip06uuu\">一个典型的文档被分成多个部分。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bfwoofd2xt3cg30t2al9c2v6a\">所有部分标题文本都应该使用“句子大小写”，这意味着第一个单词首字母大写，其他所有单词都小写。</p>\n<p><strong data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"90kj8pe3sp2d3n28yhlzbiif1\">部分标题之后始终至少要有一个空行。</strong></p>\n<h2 class=\"no-toc\" id=\"main-section-heading\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6pybpsyl2vs4goxtnadjowbqh\"><i class=\"material-icons\">link</i>主要部分标题</h2>\nThere are usually one or more main sections that may be further divided into secondary sections.\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7q2kkmabc3plu4hq1vq6xx97l\">用 Markdown 的 \n<code>##</code> 字符开始主要部分标题。或者，你可以编写等效的 \n<code>&lt;h2&gt;</code> HTML 标签。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6sglulzcck89bmrg6tyzxa7qd\">主要部分标题之后应该有一个空行，然后是该标题的内容。</p>\n<code-example language=\"html\">\n  ## Sections\n\n  A typical document is divided into sections.\n</code-example>\n<h3 class=\"no-toc\" id=\"secondary-section-heading\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3l5eec557pnipmfvf74lyqo49\"><i class=\"material-icons\">link</i>次要部分标题</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3v1b6oiv91a7j1eepqp7ak6dd\">次要部分标题与主要标题相关，并且\n<em>在文本上位于</em>该主要标题的范围内。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7s78o0wfla8m8lnr1ojwe66uc\">用 Markdown 的 \n<code>###</code> 字符开始次要部分标题。或者，你可以编写等效的 \n<code>&lt;h3&gt;</code> HTML 标签。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9pjxoe14xy75219k7m2xy1vdl\">次要部分标题之后应该有一个空行，然后是该标题的内容。</p>\n<code-example language=\"html\">\n  ### Secondary section heading\n\n  A secondary section ...\n</code-example>\n<h4 id=\"additional-section-headings\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f3o9ngw6d6gwwgh33ujz5wz76\"><i class=\"material-icons\">link</i>其他部分标题</h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d6tkzkmyfjkbvtvgpkn3tm0av\">尽量减少标题深度，最好只有两级。但如果需要，可以添加更多标题，比如这个标题，只要它们有意义。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"287yrnron3w6fcye5fbupxk5a\"><strong>注意</strong>：\n<a href=\"guide/docs-style-guide#table-of-contents\">目录</a>生成器只考虑主要（\n<code>&lt;h2&gt;</code>）和次要（\n<code>&lt;h3&gt;</code>）标题。</p>\n<code-example language=\"html\">\n  #### Additional section headings\n\n  Try to minimize ...\n</code-example>\n<h2 id=\"subsections\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"39wymnf3npsg5et7fqcbrmgfv\"><i class=\"material-icons\">link</i>小节</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ivoisx57t7ua3tvomrea4s9h\">小节通常提供额外的细节和对其他页面的引用。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aoi0k9274edltvrooeo0wng4w\">使用小节来提供\n<em>丰富</em>读者对前面文本理解的评论。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"byirz5w1temrtzqfoki084fb7\">小节\n<em>不能</em>包含任何对理解\n<em>至关重要</em>的内容。不要将关键指令或教程步骤放在小节中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ev1mobtqgqpopoi0du41iorwv\">小节是 \n<code>&lt;div&gt;</code> 中的内容，该 \n<code>&lt;div&gt;</code> 具有 \n<code>l-sub-section</code> CSS 类。你应该用 Markdown 编写小节内容。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ddqivan0g5nrl9j83bhci9r6j\">这是一个用 Markdown 编写的小节内容，它被一个 \n<code>&lt;div&gt;</code> 包裹的示例。</p>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dwdw93n72oab9s63ezveu4dgx\">你将在下面的 \n<a href=\"guide/docs-style-guide#live-examples\" title=\"Live examples\">部分</a>中了解有关动态示例样式的信息。</p>\n</div>\n<code-example language=\"html\">\n&lt;div class=\"l-sub-section\"&gt;\n\nYou'll learn about styles for live examples in the [section below](guide/docs-style-guide#live-examples \"Live examples\").\n\n&lt;/div&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3mhibikmy4uz571buqyw7mmjt\">请注意，在打开的 \n<code>&lt;div&gt;</code> 之后必须至少有一个空行。在关闭的 \n<code>&lt;/div&gt;</code> 之前有一个空行是惯例，但不是必需的。</p>\n<h2 id=\"table-of-contents\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5augsnk5gnmf6laz1c5nhpacu\"><i class=\"material-icons\">link</i>目录</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7lajspoz2e9wnp6dg3ha31go7\">大多数页面都会显示一个目录（TOC）。当视窗宽度足够时，TOC 会出现在右侧面板中。当视窗宽度较窄时，TOC 会出现在页面顶部附近的一个可展开/折叠区域中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dzfw2vz30n7cfpyrn77cv8d08\">你不应该手动创建自己的 TOC。TOC 是根据页面的主要和次要部分标题自动生成的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9mj3tzhv54uhcf4qyydiuk9xe\">要从 TOC 中排除标题，请将标题创建为具有 \n<code>no-toc</code> 类的 \n<code>&lt;h2&gt;</code> 或 \n<code>&lt;h3&gt;</code> 元素。你不能用 Markdown 来做到这一点。</p>\n<code-example language=\"html\">\n&lt;h3 class=\"no-toc\"&gt;\nThis heading is not displayed in the TOC\n&lt;/h3&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bhhde0qawz8hcq4q0gmjoizz4\">你可以通过使用 \n<code>&lt;h1&gt;</code> 标签和 \n<code>no-toc</code> 类来编写标题，从而关闭整个页面的 TOC 生成。</p>\n<code-example language=\"html\">\n&lt;h1 class=\"no-toc\"&gt;\nA guide without <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> TOC\n&lt;/h1&gt;\n</code-example>\n<h2 id=\"navigation\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"7u60u4e2e88xny39qfkq3np8d\"><i class=\"material-icons\">link</i>导航</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"18imossjlroqge8poquxcox60\">屏幕顶部、左侧和底部的导航链接是从 JSON 配置文件 \n<code>content/navigation.json</code> 生成的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47dhpiiyqp06u02mgq1zc6f41\">更改 \n<code>navigation.json</code> 文件的权限仅限于少数核心团队成员。 但对于新的指南页面，你应该建议一个导航标题和在左侧导航面板（称为“侧边导航”）中的位置。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"atdznwf6s9fnrvhgz3c35je1z\">在 \n<code>navigation.json</code> 中查找 \n<code>SideNav</code> 节点。\n<code>SideNav</code> 节点是一个导航节点数组。每个节点要么是单个文档的\n<em>条目</em>节点，要么是具有子节点的\n<em>标题</em>节点。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"34e2lox2woo7kgka418se4ch0\">找到你页面的标题。例如，描述 Angular 特性的指南页面可能是 \n<code>Fundamentals</code> 标题的子节点。</p>\n<code-example language=\"html\">\n{\n  \"title\": \"Fundamentals\",\n  \"tooltip\": \"The fundamentals of Angular\",\n  \"children\": [ ... ]\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zh3h35z1id5t3n3yfvv8wo18\"><em>标题</em>节点的子节点可以是\n<em>条目</em>节点或另一个\n<em>标题</em>节点。如果你的指南页面属于子标题下，请在 JSON 中找到该子标题。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bp27adenxxgitcqb851jeq7gm\">将你的指南页面的\n<em>条目</em>节点添加为相应\n<em>标题</em>节点的子节点。它可能看起来像这样。</p>\n<code-example language=\"html\">\n{\n  \"url\": \"guide/architecture\",\n  \"title\": \"Architecture\",\n  \"tooltip\": \"The basic building blocks of Angular applications.\"\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9zvf1d0v5pu78y90crvowiixo\">导航节点具有以下属性：</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9c32kvm5cvd0w2ltmx28bo9ms\"><code>url</code>- 指南页面的 URL（\n<em>仅条目节点</em>）。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2jwqhjkpyb1nzluxhf4w5oy83\"><code>title</code>- 在侧边导航中显示的文本。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3vds6rhy0l4czjnerttxb6kwk\"><code>tooltip</code> - 当读者将鼠标悬停在导航链接上时出现的文本。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"69d29bqgoxuovdipeg1ou1cub\"><code>children</code> - 子节点数组（\n<em>仅限于头节点</em>）。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9d9lizf6liel9m02rwg3prpw8\"><code>hidden</code> - 如果此页面是指南页面，且\n<em>不</em>应在导航面板中显示，则定义并设置为 true。很少需要，它是一种在导航中隐藏页面，同时使其可供应知晓该页面的读者使用的方法。\n<em>此</em>“作者样式指南”是一个隐藏页面。</p>\n</li>\n</ul>\n<div class=\"alert is-critical\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a1lmamdjrqrvvii4d10xcpwbm\">不要创建既是\n<em>头节点</em>又是\n<em>条目节点</em>的节点。也就是说，不要为\n<em>头节点</em>指定 \n<code>url</code> 属性。</p>\n</div>\n<div class=\"alert is-critical\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bkr41pd10fngveyhltt43wu88\">当前指南允许使用具有两个头级别的三级导航结构。不要添加第三个头级别。</p>\n</div>\n<h2 id=\"code-snippets\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ep6m1jml6f0vykcjrgfxk15rv\"><i class=\"material-icons\">link</i>代码片段</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"558nh39atythxeoquxfkbtz8c\">指南中包含大量关于 Angular 代码示例。示例代码可以是终端窗口中输入的命令、TypeScript 或 HTML 片段，或整个代码文件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ryvrp9orjo5e5cjs7w6lyjp\">无论来源如何，文档查看器都会将它们渲染为“代码片段”，可以单独使用 \n<a href=\"guide/docs-style-guide#code-example\" title=\"code-example\"><em>code-example</em></a> 组件，也可以使用 \n<a href=\"guide/docs-style-guide#code-tabs\" title=\"code-tabs\"><em>code-tabs</em></a> 组件作为选项卡式集合。</p>\n<a id=\"code-example\"></a>\n<h3 id=\"code-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dpfmggzaifncvd8oj6mpl8pta\"><i class=\"material-icons\">link</i>代码示例</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3pp0ss6vf1iv1u0xr2f9net6e\">可以使用 Markdown 反引号语法显示简单的内联代码片段。 我们通常更喜欢使用 Angular 文档 \n<em>code-example</em> 组件显示代码片段，该组件由 \n<code>&lt;code-example&gt;</code> 标签表示。</p>\n<h3 class=\"no-toc\" id=\"inline-code-snippets\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ml42drvso5xjb3xuotnjvhw5\"><i class=\"material-icons\">link</i>内联代码片段</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7444blevkq8g1vov181ryceq2\">如果可能，应从 \n<a href=\"guide/docs-style-guide#from-code-samples\">有效的示例代码</a> 中获取代码片段。 但有时内联片段是更好的选择。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"346k3kizdbjypngp5fqydhgcx\">对于终端输入和输出，将内容放在 \n<code>&lt;code-example&gt;</code> 标签之间，将 CSS 类设置为 \n<code>code-shell</code>，并将语言属性设置为 \n<code>sh</code>，如本例所示。</p>\n<code-example language=\"sh\" class=\"code-shell\">\n  npm start\n</code-example>\n<code-example language=\"html\">\n&lt;code-example language=\"sh\" class=\"code-shell\"&gt;\n  npm start\n&lt;/code-example&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9uzuyrzp0zmcjlnmwyrdshthr\">像这样的内联手写代码片段\n<em>不可</em>测试，因此本质上不可靠。 此示例属于一小部分预先批准的内联片段，其中包括命令 shell 中的用户输入或某些进程的\n<em>输出</em>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7un66r90aj59s916xdp49tjnq\"><strong>不要编写内联代码片段</strong>，除非你有充分的理由，并且编辑允许你这样做。 在所有其他情况下，代码片段应从经过测试的代码示例中自动生成。</p>\n<a id=\"from-code-samples\"></a>\n<h3 class=\"no-toc\" id=\"code-snippets-and-code-samples\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2lzm4nnk7me5azmsrfmopkw2g\"><i class=\"material-icons\">link</i>代码片段和代码示例</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47huie22rd8m9fan1bsv1affu\">文档设计目标之一是指南页面代码片段应该是真实有效代码的示例。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bd8upv7n5kiem5ljnrjxy1rs7\">我们通过显示直接从独立代码示例（专门为这些指南页面编写）派生的代码片段来实现此目标。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3dy9cho2cd0pjxo00yy7fyt4j\">指南页面的作者负责支持该页面的代码示例。 作者还必须为该示例编写端到端测试。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ansjvkdwnj54sh7txi34e1rx\">代码示例位于 \n<code>angular/angular</code> 存储库的 \n<code>content/examples</code> 目录的子文件夹中。示例文件夹名称应与它支持的指南页面相同。</p>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ocgigtfndz765jfoeaabaoke\">指南页面可能没有自己的示例代码。它可能改为引用属于另一个页面的示例。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"69t5q27ykf09cf4v3c3juukt1\">Angular CI 进程会为每个 Angular PR 运行所有端到端测试。Angular 会在每个新版本的示例和每个新版本的 Angular 本身之后重新测试示例。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5zvcwv1s5h02d1htkk7iewikk\">如果可能，指南页面上的每个代码片段都应从代码示例文件中派生。你可以通过配置 \n<code>&lt;code-example&gt;</code> 属性来告诉 Angular 文档引擎显示哪个代码文件（或代码文件的片段）。</p>\n<h4 id=\"code-snippet-from-a-file\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e7xppca8cvzl0e0cde3o6u7zg\"><i class=\"material-icons\">link</i>来自文件的代码片段</h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bu58nwr96ugiolkzie1caf6wx\"><em>此</em>“作者文档样式指南”有自己的示例应用程序，位于 \n<code>content/examples/docs-style-guide</code> 文件夹中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ve5x9zcuha59yyiojr50i8em\">以下 \n<em>code-example</em> 显示了示例的 \n<code>app.module.ts</code>。</p>\n<code-example path=\"docs-style-guide/src/app/app.module.ts\" title=\"src/app/app.module.ts\">\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> }      from '@angular/core';\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\nimport { <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a> }   from '@angular/forms';\n\nimport { AppComponent }  from './app.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports:      [ <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>, <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a> ],\n  declarations: [ AppComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eeiu188c0g78ys0uhtoz7wflu\">以下是生成该长代码片段的简短标记：</p>\n<code-example language=\"html\">\n&lt;code-example\n  path=\"docs-style-guide/src/app/app.module.ts\"\n  title=\"src/app/app.module.ts\"&gt;\n&lt;/code-example&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cz0sjpgum95g1zgpn43psas32\">通过将 \n<code>path</code> 属性设置为示例文件夹在 \n<code>content/examples</code> 中的位置来标识代码片段的源文件。 在本例中，该路径为 \n<code>docs-style-guide/src/app/app.module.ts</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5vykd80sphh2cogpkrharmsz\">添加了一个标题来告诉读者在哪里可以找到该文件，方法是将 \n<code>title</code> 属性设置为该文件在示例根文件夹中的位置。 按照惯例，将 \n<code>title</code> 属性设置为文件在示例根文件夹中的位置。</p>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pur5c178qn36p2eahn0mdel8\">除非另有说明，否则此页面中的所有代码片段都来自位于 \n<code>content/examples/docs-style-guide</code> 目录中的示例源代码。</p>\n</div>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3sfiwxpiby4izdc53hc6la4rd\">如果在路径中标识的文件不存在\n<strong>或被<em>git</em>忽略</strong>，则文档工具会报告错误。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edsoe0lkxx16k2z96m4ivfb1t\">大多数 \n<code>.js</code> 文件都被\n<em>git</em>忽略。 如果你想在项目中包含一个被忽略的代码文件，并在指南中显示它，则必须\n<em>取消忽略</em>它。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9nfaetgfqyvb1wephu8gnbqul\">取消忽略文件的首选方法是更新 \n<code>content/examples/.gitignore</code>，如下所示：</p>\n<code-example title=\"content/examples/.gitignore\">\n  # my-guide\n  !my-guide/src/something.js\n  !my-guide/more-javascript*.js\n</code-example>\n</div>\n<h4 id=\"code-example-attributes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"arubh2wsr38aen8jhenbvmcap\"><i class=\"material-icons\">link</i>Code-example 属性</h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5xu9s0s4xo2hvm0ivk0w7eiuf\">可以通过设置一个或多个属性来控制 \n<em>code-example</em> 输出：</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cxlvqnbdc72l1wsenbkr5ncn1\"><code>path</code> - \n<code>content/examples</code> 文件夹中文件的路径。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5kw340pw5yi31oh5bsusd8ag3\"><code>title</code> - 代码列表的标题。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1e95aezn8e5n6kd7rmaqnopru\"><code>region</code> - 显示具有该区域名称的源文件片段；区域由源文件中的 \n<em>docregion</em> 标记标识，如 \n<a href=\"guide/docs-style-guide#region\" title=\"Displaying a code fragment\">下方</a> 所述。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"809uq6z9ye4l5ub3odgezaznk\"><code>linenums</code> - 值可以是 \n<code>true</code>、\n<code>false</code> 或 \n<code>number</code>。如果未指定，则当代码行数超过 10 行时，会自动显示行号。很少使用的 \n<code>number</code> 选项从给定值开始编号。\n<code>linenums=4</code> 将起始行号设置为 4。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4mdu41zmlcfevimnfg3z7clzy\"><code>class</code> - 代码片段可以使用 CSS 类 \n<code>no-box</code>、\n<code>code-shell</code> 和 \n<code>avoid</code> 进行样式设置。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8o1h2tiyvnpgpg2lgxnoqsnsy\"><code>hideCopy</code> - 隐藏复制按钮</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bi6cuc58mpi355cydedktip3y\"><code>language</code> - 源代码语言，例如 \n<code>javascript</code>、\n<code>html</code>、\n<code>css</code>、\n<code>typescript</code>、\n<code><a href=\"api/common/JsonPipe\" class=\"code-anchor\">json</a></code> 或 \n<code>sh</code>。此属性仅适用于内联示例。</p>\n</li>\n</ul>\n<a id=\"region\"></a>\n<h4 id=\"displaying-a-code-fragment\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e087l9y0u6ql7pu7v006vtx4e\"><i class=\"material-icons\">link</i>显示代码片段</h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"el7jx5me8chymuj99rq5hfsdf\">通常，你希望关注示例代码文件中的代码片段。在本例中，你关注 \n<code>AppModule</code> 类及其 \n<code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 元数据。</p>\n<code-example path=\"docs-style-guide/src/app/app.module.ts\" region=\"class\">\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports:      [ <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>, <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a> ],\n  declarations: [ AppComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4she7v7ahjzs5nhc1fkz55a1h\">首先，如 \n<a href=\"guide/docs-style-guide#source-code-markup\">下方</a> 所述，在源文件中用命名 \n<em>docregion</em> 将该片段包围起来。 然后，像这样在 \n<code>&lt;code-example&gt;</code> 的 \n<code>region</code> 属性中引用该 \n<em>docregion</em></p>\n<code-example language=\"html\">\n&lt;code-example\n  path=\"docs-style-guide/src/app/app.module.ts\"\n  region=\"class\"&gt;\n&lt;/code-example&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9dobp9c3b752zq2aln939r07t\">一些观察结果：</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74la83g12r0irzpt7kaoiwy3s\"><code>region</code> 值 \n<code>\"class\"</code> 是源文件中 \n<code>#docregion</code> 的名称。通过查看 \n<code>content/examples/docs-style-guide/src/app/app.module.ts</code> 来确认这一点。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b0ot5hnxwpdlgsoj6t8ycbo7o\">当片段的来源很明显时，省略 \n<code>title</code> 就可以了。我们刚刚说过，这是一个 \n<code>app.module.ts</code> 文件的片段，该文件在上面完整显示，并带有标题。 无需重复标题。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e6ppji2s68zk11015qcdf595d\">行号消失了。默认情况下，当代码行数少于 10 行时，文档查看器会省略行号；超过 10 行后，它会添加行号。可以通过设置 \n<code>linenums</code> 属性来显式地打开或关闭行号。</p>\n</li>\n</ol>\n<h4 id=\"example-of-bad-code\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"12la22o6qrfxo5u7y0eb34ls\"><i class=\"material-icons\">link</i>错误代码示例</h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dsehynyzn7moz8dq1p91d8v9f\">有时你希望显示错误代码或错误设计的示例。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4sxmdg53w9331p5cykszmzuql\">你应该小心。读者并不总是仔细阅读，他们很可能会将你提供的错误代码示例复制粘贴到自己的应用程序中。因此，不要经常展示错误代码。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5izurkpiipaweuck5m88umlnv\">当你展示错误代码时，请将 \n<code>class</code> 设置为 \n<code>avoid</code>。代码片段将用鲜红色框起来，以吸引读者的注意。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5il3af6n7qapw8ppur0jk3pey\">以下是“避免”示例在 \n<a href=\"guide/styleguide#style-05-03\" title=\"Style 05-03: components as elements\"><em>Angular 风格指南</em></a> 中的标记。</p>\n<code-example language=\"html\">\n&lt;code-example\n  path=\"styleguide/src/05-03/app/heroes/shared/hero-button/hero-button.component.avoid.ts\"\n  region=\"example\"\n  title=\"app/heroes/hero-button/hero-button.component.ts\"&gt;\n&lt;/code-example&gt;\n</code-example>\n<code-example path=\"styleguide/src/05-03/app/heroes/shared/hero-button/hero-button.component.avoid.ts\" region=\"example\" title=\"app/heroes/hero-button/hero-button.component.ts\">\n/* avoid */\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: '[tohHeroButton]',\n  templateUrl: './hero-button.component.html'\n})\nexport class HeroButtonComponent {}\n\n</code-example>\n<a id=\"code-tabs\"></a>\n<h3 id=\"code-tabs\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ga5ych2colt3kch3bmoo5gru\"><i class=\"material-icons\">link</i>代码选项卡</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bxbumri5llymegdze7erxlm36\">代码选项卡显示代码的方式与\n<em>代码示例</em>类似。它们额外的优势是可以使用选项卡界面显示多个代码示例。每个选项卡都使用\n<em>代码窗格</em>显示。</p>\n<h4 id=\"code-tabs-attributes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"anohvescv2stswpi2hnqc2vpe\"><i class=\"material-icons\">link</i>代码选项卡属性</h4>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6960yxesjal4rgxdurakfvtn5\"><code>linenums</code>：该值可以是 \n<code>true</code>、\n<code>false</code> 或一个表示起始行号的数字。如果未指定，则只有当代码选项卡窗格的代码行数超过 10 行时，才会启用行号。</li>\n</ul>\n<h4 id=\"code-pane-attributes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eus2ayff7sppmd12mmlqqs0jw\"><i class=\"material-icons\">link</i>代码窗格属性</h4>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b7pfhatexcds0y6f0iqxgh7rp\"><code>path</code> - content/examples 文件夹中的一个文件</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8gx870fe59cg3ea9mbnyiohl7\"><code>title</code> - 在选项卡标题中显示</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ytsqgbowto70dsat0sz6z8ov\"><code>linenums</code> - 覆盖 \n<code>code-tabs</code> 级别上此特定窗格的 \n<code>linenums</code> 属性。该值可以是 \n<code>true</code>、\n<code>false</code> 或一个表示起始行号的数字。如果未指定，则只有当代码行数超过 10 行时，才会启用行号。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bh4yt5pxdjfmvpgxvnoekrdul\">下一个示例显示多个代码选项卡，每个选项卡都有自己的标题。它演示了在 \n<code>&lt;code-tabs&gt;</code> 和 \n<code>&lt;code-pane&gt;</code> 级别上控制行号显示。</p>\n<code-tabs linenums=\"false\">\n  <code-pane title=\"app.component.html\" path=\"docs-style-guide/src/app/app.component.html\">\n&lt;h1&gt;{{title}}&lt;/h1&gt;\n&lt;h2&gt;My Heroes&lt;/h2&gt;\n&lt;ul class=\"heroes\"&gt;\n  &lt;li *<a href=\"api/common/NgForOf\" class=\"code-anchor\">ngFor</a>=\"let hero of heroes\"\n    [class.selected]=\"hero === selectedHero\"\n    (click)=\"onSelect(hero)\"&gt;\n    &lt;span class=\"badge\"&gt;{{hero.id}}&lt;/span&gt; {{hero.name}}\n  &lt;/li&gt;\n&lt;/ul&gt;\n&lt;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"selectedHero\"&gt;\n  &lt;h2&gt;{{selectedHero.name}} details!&lt;/h2&gt;\n  &lt;div&gt;&lt;label&gt;id: &lt;/label&gt;{{selectedHero.id}}&lt;/div&gt;\n  &lt;div&gt;\n    &lt;label&gt;name: &lt;/label&gt;\n    &lt;input [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"selectedHero.name\" placeholder=\"name\"/&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n\n\n</code-pane>\n  <code-pane title=\"app.component.ts\" path=\"docs-style-guide/src/app/app.component.ts\" linenums=\"true\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { Hero, HEROES } from './hero';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Authors Style Guide Sample';\n  heroes = HEROES;\n  selectedHero: Hero;\n\n  onSelect(hero: Hero): void {\n    this.selectedHero = hero;\n  }\n}\n\n\n</code-pane>\n  <code-pane title=\"app.component.css (heroes)\" path=\"docs-style-guide/src/app/app.component.css\" region=\"heroes\">\n.heroes {\n  margin: 0 0 2em 0;\n  list-style-type: none;\n  padding: 0;\n  width: 15em;\n}\n\n</code-pane>\n  <code-pane title=\"package.json (scripts)\" path=\"docs-style-guide/package.1.json\">\n{\n  \"scripts\": {\n    \"start\": \"concurrently \\\"npm run build:watch\\\" \\\"npm run serve\\\"\",\n    \"test\": \"concurrently \\\"npm run build:watch\\\" \\\"karma start karma.conf.js\\\"\",\n    \"lint\": \"tslint ./src/**/*.ts -t verbose\"\n  }\n}\n\n\n</code-pane>\n</code-tabs>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"84awd6aw9bxs60sn2k0yb8utu\">以下是该示例的标记。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6je36zl1d6nexfqlhc4uk2t14\">注意 \n<code>&lt;code-tabs&gt;</code> 中的 \n<code>linenums</code> 属性如何显式地为所有窗格禁用编号。第二个窗格中的 \n<code>linenums</code> 属性仅为\n<em>自身</em>恢复行号。</p>\n<code-example language=\"html\">\n&lt;code-tabs linenums=\"false\"&gt;\n  &lt;code-pane\n    title=\"app.component.html\"\n    path=\"docs-style-guide/src/app/app.component.html\"&gt;\n  &lt;/code-pane&gt;\n  &lt;code-pane\n    title=\"app.component.ts\"\n    path=\"docs-style-guide/src/app/app.component.ts\"\n    linenums=\"true\"&gt;\n  &lt;/code-pane&gt;\n  &lt;code-pane\n    title=\"app.component.css (heroes)\"\n    path=\"docs-style-guide/src/app/app.component.css\"\n    region=\"heroes\"&gt;\n  &lt;/code-pane&gt;\n  &lt;code-pane\n    title=\"package.json (scripts)\"\n    path=\"docs-style-guide/package.1.json\"&gt;\n  &lt;/code-pane&gt;\n&lt;/code-tabs&gt;\n</code-example>\n<a id=\"source-code-markup\"></a>\n<h2 id=\"source-code-markup\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a897xx755jaj0ojux6aezyier\"><i class=\"material-icons\">link</i>源代码标记</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6muymziznuxiaopuh3sfarwcy\">你必须在示例源代码文件中添加特殊的代码片段标记，才能让 \n<code>&lt;code-example&gt;</code> 和 \n<code>&lt;code-tabs&gt;</code> 组件显示它们。</p>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ctgxiyuuura8762299yfhqpnp\">此页面的示例源代码位于 \n<code>context/examples/docs-style-guide</code> 中，包含本节中描述的每个代码片段标记的示例。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4f3dok6sltk8mg29d6m43vofj\">代码片段标记始终以注释的形式出现。以下是 TypeScript 或 JavaScript 文件的默认\n<em>docregion</em> 标记：</p>\n<code-example>\n// #docregion\n... some code ...\n// #enddocregion\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9nv7ofz4lq3jrski6ev06mgpu\">不同的文件类型有不同的注释语法，因此请相应调整。</p>\n<code-example language=\"html\">\n&lt;!-- #docregion --&gt;\n... some HTML ...\n&lt;!-- #enddocregion --&gt;\n</code-example>\n<code-example>\n/* #docregion */\n... some CSS ...\n/* #enddocregion */\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"btl09czarhvsjyk8t1v2fabde\">文档生成过程会在将这些注释显示在文档查看器中之前将其删除。它还会从 stackblitz 和示例代码下载中删除它们。</p>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2zzmcqnsl30t8o6eut3jmebkd\">JSON 文件不支持代码片段标记，因为 JSON 文件中不允许使用注释。有关详细信息和解决方法，请参阅\n<a href=\"guide/docs-style-guide#json-files\">下方</a>。</p>\n</div>\n<h4 id=\"docregion\"><em>#docregion</em></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"xs04h8c9qen2awlijr30z9wa\"><em>#docregion</em> 是最重要的代码片段标记。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ek9ugrkcs0qn02xc2ddi52d2s\"><code>&lt;code-example&gt;</code> 和 \n<code>&lt;code-tabs&gt;</code> 组件不会显示源代码文件，除非它包含\n<em>#docregion</em>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5mfog4p54ez3gssqczbywznx4\"><em>#docregion</em> 注释开始一个代码片段区域。该注释\n<em>之后</em>的每一行代码都属于该区域，\n<em>直到</em>代码片段处理器遇到文件末尾或一个结束的\n<em>#enddocregion</em>。</p>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8uenj260ea5x1yb5qly7e2vx0\"><code>src/main.ts</code> 是一个简单的示例文件，它在文件顶部包含一个单独的\n<em>#docregion</em>。</p>\n<code-example path=\"docs-style-guide/src/main.ts\" title=\"src/main.ts\">\nimport { <a href=\"api/core/enableProdMode\" class=\"code-anchor\">enableProdMode</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a> } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  <a href=\"api/core/enableProdMode\" class=\"code-anchor\">enableProdMode</a>();\n}\n\n<a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a>().bootstrapModule(AppModule);\n\n\n</code-example>\n</div>\n<h4 id=\"named-docregions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1h6dl1cgh1wx8sk20m25a38bg\"><i class=\"material-icons\">link</i>命名\n<em>#docregions</em></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dewhmrog5bdtrzegfdzgca01s\">你通常会从同一个文件中的不同片段显示多个代码片段。你可以通过为每个片段指定一个\n<em>#docregion 名称</em>来区分它们，如下所示。</p>\n<code-example>\n// #docregion region-name\n... some code ...\n// #enddocregion region-name\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2pcupcl7g5mnvu1l03bc50tv5\">请记住，在 \n<code>&lt;code-example&gt;</code> 或 \n<code>&lt;code-pane&gt;</code> 的 \n<code>region</code> 属性中引用此区域，就像你在上面的示例中所做的那样：</p>\n<code-example language=\"html\">\n&lt;code-example\n  path=\"docs-style-guide/src/app/app.module.ts\"\n  region=\"class\"&gt;&lt;/code-example&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2gs490hmyprqammyl4838kq48\">没有名称的\n<em>#docregion</em> 是\n<em>默认区域</em>。在引用默认\n<em>#docregion</em> 时，\n<em>不要</em>设置 \n<code>region</code> 属性。</p>\n<h4 id=\"nested-docregions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2cvww38d3haxdpc44yd403he1\"><i class=\"material-icons\">link</i>嵌套\n<em>#docregions</em></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"y90tfkp9h77wgop4hh8wh87c\">你可以在\n<em>#docregions</em> 中嵌套\n<em>#docregions</em></p>\n<code-example>\n// #docregion\n... some code ...\n// #docregion inner-region\n... more code ...\n// #enddocregion inner-region\n... yet more code ...\n/// #enddocregion\n</code-example>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9vo1nl60s6eay5yy7vhpqarv3\"><code>src/app/app.module.ts</code> 文件包含一个嵌套区域的良好示例。</p>\n</div>\n<h4 id=\"combining-fragments\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ln70rhwkixii8xz20q3rkqy9\"><i class=\"material-icons\">link</i>组合片段</h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"384xi9pnl0udzzrij28ssflec\">你可以通过定义多个具有\n<em>相同区域名称</em>的\n<em>#docregions</em>，将同一个文件中的多个片段组合成一个代码片段。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"22q5dqiem7v93urtg9mh5retc\">检查 \n<code>src/app/app.component.ts</code> 文件，它定义了两个嵌套的\n<em>#docregions</em>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5qafti2npyokzq5dze7axitx1\">内部的 \n<code>class-skeleton</code> 区域出现了两次，一次用于捕获打开类定义的代码，一次用于捕获关闭类定义的代码。</p>\n<code-example linenums=\"false\">\n// #docplaster\n...\n// #docregion class, class-skeleton\nexport class AppComponent {\n// #enddocregion class-skeleton\n  title = 'Authors Style Guide Sample';\n  heroes = HEROES;\n  selectedHero: Hero;\n\n  onSelect(hero: Hero): void {\n    this.selectedHero = hero;\n  }\n// #docregion class-skeleton\n}\n// #enddocregion class, class-skeleton\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9q7gmpzr1hu089kkl6taiy65n\">以下是并排显示的两个对应代码片段。</p>\n<code-tabs>\n  <code-pane title=\"app.component.ts (class)\" path=\"docs-style-guide/src/app/app.component.ts\" region=\"class\">\nexport class AppComponent {\n  title = 'Authors Style Guide Sample';\n  heroes = HEROES;\n  selectedHero: Hero;\n\n  onSelect(hero: Hero): void {\n    this.selectedHero = hero;\n  }\n}\n\n</code-pane>\n  <code-pane title=\"app.component.ts (class-skeleton)\" path=\"docs-style-guide/src/app/app.component.ts\" region=\"class-skeleton\">\nexport class AppComponent {\n}\n\n</code-pane>\n</code-tabs>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8mr9jkcigefpx2skhs8w7wd75\">一些观察结果：</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7glhhqf9grelv7lru1smctpbv\">顶部的 \n<code>#docplaster</code> 是另一个代码片段标记。它告诉处理器如何将片段连接成一个代码片段。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7l06noingfhw3ievm2p90dkcx\">在这个示例中，我们告诉处理器将片段放在一起，中间没有任何内容 - 没有任何“灰泥”。大多数示例文件都定义了这种\n<em>空灰泥</em>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4eq60zzjgmd6a3pijtdd8e29k\">如果我们忘记添加 \n<code>#docplaster</code>，处理器将在片段之间插入\n<em>默认</em>灰泥 - 一个省略号注释。尝试自己删除 \n<code>#docplaster</code> 注释以查看效果。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5a8377xa5hllga5q565j7mfie\">一个 \n<code>#docregion</code> 注释提到了\n<strong><em>两个</em></strong>区域名称，一个 \n<code>#enddocregion</code> 注释也是如此。这是一种在同一行代码上开始（或停止）多个区域的便捷方法。你可以将这些注释放在不同的行上，许多作者更喜欢这样做。</p>\n</li>\n</ul>\n<h4 id=\"json-files\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"x862ayqhjjq5tldnrot3gmug\"><i class=\"material-icons\">link</i>JSON 文件</h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8pu1nwsrmga63f6wvq9hw22dg\">JSON 文件不支持代码片段标记，因为 JSON 文件中不允许使用注释。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"do4ylvc7pnulz3xr7hahbf3f1\">你可以通过在 \n<code>src</code> 属性中引用 JSON 文件来显示整个 JSON 文件。但你无法显示 JSON 片段，因为你无法在文件中添加 \n<code>#docregion</code> 标签。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ruzxc2xi2524letksmu1nuli\">如果 JSON 文件太大，你可以将感兴趣的节点复制到 markdown 反引号中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1axak6yxmfpqaqx3r1gbkoyto\">不幸的是，很容易错误地创建无效的 JSON。首选方法是创建一个包含要显示的片段的 JSON 部分文件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1njp0v5aqrkec37g6wsi9271u\">你无法测试此部分文件，并且你永远不会在应用程序中使用它。但至少你的 IDE 可以确认它在语法上是正确的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1q3lgfm7xxsuw8mjym2uvpxhq\">这是一个从 \n<code>package.json</code> 中提取某些脚本到名为 \n<code>package.1.json</code> 的部分文件的示例。</p>\n<code-example path=\"docs-style-guide/package.1.json\" title=\"package.json (selected scripts)\">\n{\n  \"scripts\": {\n    \"start\": \"concurrently \\\"npm run build:watch\\\" \\\"npm run serve\\\"\",\n    \"test\": \"concurrently \\\"npm run build:watch\\\" \\\"karma start karma.conf.js\\\"\",\n    \"lint\": \"tslint ./src/**/*.ts -t verbose\"\n  }\n}\n\n\n</code-example>\n<code-example language=\"html\">\n&lt;code-example\n  path=\"docs-style-guide/package.1.json\"\n  title=\"package.json (selected scripts)\"&gt;&lt;/code-example&gt;\n</code-example>\n<h4 id=\"partial-file-naming\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bq7f1cy4ckva0xnxchnsq4b7l\"><i class=\"material-icons\">link</i>部分文件命名</h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"as4x7ut4rmohc4svgey1i9mzr\">许多指南讲述了一个故事。在这个故事中，应用逐步发展，通常伴随着简化的或不完整的代码。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c3n6l1sym175g7tlytlssue65\">为了在代码中讲述这个故事，你通常需要创建部分文件或最终源代码文件的中间版本，其中包含一些在最终应用中不会出现的代码片段。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bzm574afgy6dly2pbg05acinx\">这些部分文件和中间文件需要有自己的名称。 遵循文档示例命名约定。在文件扩展名之前添加一个数字，如这里所示：</p>\n<code-example language=\"html\">\npackage.1.json\napp.component.1.ts\napp.component.2.ts\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"95gfaam5pdvtes6s2f8p8p1ya\">你将在 Angular 文档中的示例中找到许多这样的文件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6o6esqlmd5d6z5mqqz9mbzber\">请记住，通过在 \n<code>stackblitz.json</code> 中列出这些文件，将它们从 stackblitz 中排除，如这里所示。</p>\n<code-example path=\"docs-style-guide/stackblitz.json\" title=\"stackblitz.json\">\n{\n  \"description\": \"Authors <a href=\"api/animations/style\" class=\"code-anchor\">style</a> guide\",\n  \"files\": [\n    \"!**/*.d.ts\",\n    \"!**/*.js\",\n    \"!**/*.[1,2,3].*\"\n  ],\n  \"tags\": [\"author\", \"<a href=\"api/animations/style\" class=\"code-anchor\">style</a> guide\"]\n}\n\n\n</code-example>\n<a id=\"live-examples\"></a>\n<h2 id=\"live-examples\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"38sz8rvb9vqvrt86ky5j4m3ps\"><i class=\"material-icons\">link</i>动态示例</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9nzq85oct2xogkczua3u5jh0m\">通过在页面中添加 \n<code>&lt;live-example&gt;</code>，你将生成链接，这些链接在 Stackblitz 动态编码环境中运行示例代码，并将该代码下载到读者的文件系统中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"exeb29pwqkpjwhwunixy8p8rd\">动态示例（也称为“stackblitz”）由代码示例文件夹根目录中的一个或多个 \n<code>stackblitz.json</code> 文件定义。每个示例文件夹通常只有一个未命名的定义文件，即默认的 \n<code>stackblitz.json</code>。</p>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9iao50jec4o5lgdkxqnj7o9v5\">你可以在 \n<code>name.stackblitz.json</code> 的形式下创建额外的命名定义文件。请参阅 \n<code>content/examples/testing</code> 以获取示例。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4dte700c2jw94c2tplsqv8u1e\"><code>stackblitz.json</code> 的模式尚未记录，但查看示例文件夹中的 \n<code>stackblitz.json</code> 文件应该可以告诉你你需要知道的大部分内容。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7fgfnpd9up56zpj3oanpqf659\">在页面中添加 \n<code>&lt;live-example&gt;&lt;/live-example&gt;</code> 将生成两个默认链接。</p>\n<p><live-example></live-example></p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"nj82hsy3jj8qs7n42b4zdv92\">一个指向由默认 \n<code>stackblitz.json</code> 文件定义的 Stackblitz 的链接，该文件位于与指南页面同名的代码示例文件夹中。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dke3btxtu96t3wtexj1cqtybx\">一个下载该示例的链接。</p>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9zma7u6bn4rpylpxrhwathpke\">点击第一个链接将在新的浏览器标签页中打开 StackBlitz 上的代码示例。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b3fx3dmjrz3m0gbcbyscwmxqf\">你可以使用属性和类来更改动态示例的外观和行为。</p>\n<h3 class=\"no-toc\" id=\"custom-label-and-tooltip\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"22hq7hllwzp0zq7wviv5mi2pn\"><i class=\"material-icons\">link</i>自定义标签和工具提示</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"en681gv1365elxjigarpahmvg\">通过设置 \n<code>title</code> 属性，为动态示例锚点提供自定义标签和工具提示。</p>\n<p><live-example title=\"Live Example with title\"></live-example></p>\n<code-example language=\"html\">\n&lt;live-example title=\"Live Example with title\"&gt;&lt;/live-example&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"amza98ptib9hlojzrsmw3tm97\">你也可以通过将标签放在 \n<code>&lt;live-example&gt;</code> 标签之间来实现相同的效果：</p>\n<p><live-example>Live example with content label</live-example></p>\n<code-example language=\"html\">\n&lt;live-example&gt;Live example with content label&lt;/live-example&gt;\n</code-example>\n<h3 class=\"no-toc\" id=\"live-example-from-another-guide\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qv49y1svosxqxbaa0xynsi8z\"><i class=\"material-icons\">link</i>来自另一个指南的动态示例</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"euge3aeyhi88nvohbk2ffmb5s\">要链接到一个文件夹中的 Stackblitz，该文件夹的名称与当前指南页面不同，请将 \n<code>name</code> 属性设置为该文件夹的名称。</p>\n<p><live-example name=\"router\">Live Example from the Router guide</live-example></p>\n<code-example language=\"html\">\n&lt;live-example name=\"router\"&gt;Live Example from the <a href=\"api/router/Router\" class=\"code-anchor\">Router</a> guide&lt;/live-example&gt;\n</code-example>\n<h3 class=\"no-toc\" id=\"live-example-for-named-stackblitz\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"82axd2lv0fzz0w3w0lwz60axj\"><i class=\"material-icons\">link</i>命名 Stackblitz 的动态示例</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"o06inmsm6apm59cyc2nub249\">要链接到由命名 \n<code>stackblitz.json</code> 文件定义的 Stackblitz，请设置 \n<code>stackblitz</code> 属性。以下示例链接到当前指南目录中由 \n<code>second.stackblitz.json</code> 定义的 Stackblitz。</p>\n<p><live-example stackblitz=\"second\"></live-example></p>\n<code-example language=\"html\">\n&lt;live-example stackblitz=\"second\"&gt;&lt;/live-example&gt;\n</code-example>\n<h3 class=\"no-toc\" id=\"live-example-without-download\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ekby63bn6mvngn1p4vtj1mj4e\"><i class=\"material-icons\">link</i>没有下载的动态示例</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bkc0u68gmouijx1vg22sfq1fx\">要跳过下载链接，请添加 \n<code>noDownload</code> 属性。</p>\n<p><live-example nodownload=\"\">Just the Stackblitz</live-example></p>\n<code-example language=\"html\">\n&lt;live-example noDownload&gt;Just the Stackblitz&lt;/live-example&gt;\n</code-example>\n<h3 class=\"no-toc\" id=\"live-example-with-download-only\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9db0ci17tpvk888akupnna4dv\"><i class=\"material-icons\">link</i>仅下载的动态示例</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2y7b18jijbywp9fegbgstj19q\">要跳过动态 Stackblitz 链接，只链接到下载，请添加 \n<code>downloadOnly</code> 属性。</p>\n<p><live-example downloadonly=\"\">Download only</live-example></p>\n<code-example language=\"html\">\n&lt;live-example downloadOnly&gt;Download only&lt;/live-example&gt;\n</code-example>\n<h3 class=\"no-toc\" id=\"embedded-live-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a6oz0070h66chsdr3thvzyll2\"><i class=\"material-icons\">link</i>嵌入式动态示例</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ce76voxjd1tw2rab0usdy0tt\">默认情况下，动态示例链接将在单独的浏览器标签页中打开 Stackblitz。 你可以通过添加 \n<code>embedded</code> 属性将 Stackblitz 嵌入指南页面本身。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cowiqhfixy7qhq3y22xnowol1\">出于性能原因，Stackblitz 不会立即启动。读者会看到一张图片。点击图片将启动有时很慢的进程，在页面上的 iframe 中启动嵌入式 Stackblitz。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8cd8ncdj3ff9rsxbbq240qw4p\">这是一个针对本指南的嵌入式动态示例。</p>\n<code-example language=\"html\">\n&lt;live-example embedded&gt;&lt;/live-example&gt;\n</code-example>\n<p><live-example embedded=\"\"></live-example></p>\n<a id=\"anchors\"></a>\n<h2 id=\"anchors\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ne8302iaukwxibp0jsijxnwa\"><i class=\"material-icons\">link</i>锚点</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4e7j7rhzxpcxznm9crodd5z6a\">每个节标题标签也是一个锚点。另一个指南页面可以通过编写以下内容来添加指向本节的链接：</p>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"623dfwi0rljb68atocsw6ojq0\">有关详细信息，请参阅 \n<a href=\"guide/docs-style-guide#anchors\" title=\"Style Guide - Anchors\">\"锚点\"</a> 部分。</p>\n</div>\n<code-example language=\"html\">\n&lt;div class=\"l-sub-section\"&gt;\n\nSee the [\"Anchors\"](guide/docs-style-guide#anchors \"Style Guide - Anchors\") section for details.\n\n&lt;/div&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ao7hq8g3gkzcpzhzc5z5bekuh\">在页面内导航时，你可以省略页面 URL，当指定链接到 \n<a href=\"guide/docs-style-guide#anchors\" title=\"Anchors\">向上滚动</a> 到本节开头时。</p>\n<code-example language=\"html\">\n... the link that [scrolls up](#anchors \"Anchors\") to ...\n</code-example>\n<a id=\"ugly-anchors\"></a>\n<h4 id=\"ugly-long-section-header-anchors\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7soask002fncu7r15llw30z0t\"><i class=\"material-icons\">link</i>难看的、很长的节标题锚点</h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6q6qceg6rqftuzgmfpm42snud\">锁定一个好的锚点名称通常是一个好主意。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b8pv6eljqk74o6r9aeswszkaq\">有时节标题文本会使锚点变得不美观。 \n<a href=\"guide/docs-style-guide#ugly-long-section-header-anchors\">这个</a> 就很糟糕。</p>\n<code-example language=\"html\">\n[This one](#ugly-long-section-header-anchors) is pretty bad.\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2jia09s3mcwp0mm6iyionawen\">更大的危险是，\n<strong>将来对标题文本的重新措辞会破坏</strong>指向本节的链接。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cn3ivqi498gnl9mj5etytgbxw\">出于这些原因，明智的做法通常是显式地添加一个自定义锚点，就在标题或它所应用的文本的正上方，使用特殊的 \n<code><a id=\"name\"></a></code> 语法，如下所示。</p>\n<code-example language=\"html\">\n  {@<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> ugly-anchors}\n\n  #### Ugly, long section header anchors\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3lqsz58mtamudnl4k6h13u4sp\">现在，就像以前一样，\n<a href=\"guide/docs-style-guide#ugly-anchors\">链接到该自定义锚点名称</a>。</p>\n<code-example language=\"html\">\nNow [link to that custom anchor name](#ugly-anchors) as you did before.\n</code-example>\n<div class=\"l-sub-section\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3no320f82ul76727e40a8sj51\">或者，你可以使用 HTML \n<code>&lt;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>&gt;</code> 标签。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9f0o0yz0sgyfzvs90oy5ewzt6\">如果你这样做，请确保设置 \n<code>id</code> 属性，而不是 \n<code>name</code> 属性！文档生成器不会将 \n<code>name</code> 转换为正确的链接 URL。</p>\n<code-example language=\"html\">\n&lt;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> id=\"anchors\"&gt;&lt;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>&gt;\n\n## Anchors\n</code-example>\n</div>\n<h2 id=\"alerts\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d80f01ts56pjy81n8l4aap53n\"><i class=\"material-icons\">link</i>警报</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8r8dg7hmwvcwvih24sqbyr9u9\">警报会引起人们对重要事项的注意。警报不应用于多行内容（使用提示代替）或彼此堆叠。请注意，警报的内容向右缩进两个空格。</p>\n<div class=\"alert is-critical\">\nA critical alert.\n</div>\n<div class=\"alert is-important\">\nAn important alert.\n</div>\n<div class=\"alert is-helpful\">\nA helpful, informational alert.\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7s6o3mca55o4y0a4iys1rbfxc\">以下是这些警报的标记。</p>\n<code-example language=\"html\">\n&lt;div class=\"alert is-critical\"&gt;\nA critical alert.\n&lt;/div&gt;\n\n&lt;div class=\"alert is-important\"&gt;\nAn important alert.\n&lt;/div&gt;\n\n&lt;div class=\"alert is-helpful\"&gt;\nA helpful, informational alert.\n&lt;/div&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3j4m52nockeuaszygnjcg24h0\">警报旨在吸引用户的注意，应谨慎使用。 它们不适用于非正式的旁白或评论。使用 \n<a href=\"guide/docs-style-guide#subsections\" title=\"subsections\">小节</a> 进行评论。</p>\n<h2 id=\"callouts\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ceci81g7gwvpk6vzbm9mfnwma\"><i class=\"material-icons\">link</i>提示</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d1vyuibgm32glbe640gtb2w76\">提示（与警报类似）旨在引起人们对重要事项的注意。当你想要一个引人注目的标题和多行内容时，请使用提示。</p>\n<div class=\"callout is-critical\">\n<header data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2iscb4sty557cxmh5mx8a810c\">关键点</header>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dvaxa89x5iv4ehe3ohjernpbk\"><strong>Pitchfork 连帽衫符号学</strong>，屋顶派对弹出式\n<em>古生物</em>信使包信誉 Carles 蓬乱的 Truffaut 年。符号学病毒式免费赠送 VHS，Shoreditch 打破 McSweeney's。Intelligentsia 羽衣甘蓝片 Vice 四美元吐司，Schlitz 十字架</p>\n</div>\n<div class=\"callout is-important\">\n<header data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7mq471dmayym8lrqugydtfnwu\">重要点</header>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3lq759v6uun2t2ys6x66gn9yq\"><strong>Pitchfork 连帽衫符号学</strong>，屋顶派对弹出式\n<em>古生物</em>信使包信誉 Carles 蓬乱的 Truffaut 年。符号学病毒式免费赠送 VHS，Shoreditch 打破 McSweeney's。Intelligentsia 羽衣甘蓝片 Vice 四美元吐司，Schlitz 十字架</p>\n</div>\n<div class=\"callout is-helpful\">\n<header data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2148ep5fav173xjtcq53h2lqr\">有用点</header>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3lq759v6uun2t2ys6x66gn9yq\"><strong>Pitchfork 连帽衫符号学</strong>，屋顶派对弹出式\n<em>古生物</em>信使包信誉 Carles 蓬乱的 Truffaut 年。符号学病毒式免费赠送 VHS，Shoreditch 打破 McSweeney's。Intelligentsia 羽衣甘蓝片 Vice 四美元吐司，Schlitz 十字架</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7i1g9psyfc17jf9x6g4xzgc6v\">以下是这些提示框中第一个的标记。</p>\n<code-example language=\"html\">\n&lt;div class=\"callout is-critical\"&gt;\n&lt;header&gt;A critical point&lt;/header&gt;\n\n**Pitchfork hoodie semiotics**, roof party pop-up _paleo_ messenger bag cred Carles tousled Truffaut yr. Semiotics viral freegan VHS, Shoreditch disrupt McSweeney's. Intelligentsia kale chips Vice four dollar toast, Schlitz crucifix\n\n&lt;/div&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d6tr1it7y32b2sa9egftmn7ec\">注意</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"843fvczi2zl5k4soqk4n46bub\">提示框标题文本被强制为全大写。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dubg68t6fauap7h0n98apmiv6\">提示框主体可以用 Markdown 编写。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a1bzziub28v81azh0e4yci28l\">空行将 \n<code>&lt;/header&gt;</code> 标签与 Markdown 内容隔开。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ipkovyk2t05pizfzt80dfnqd\">提示框旨在吸引用户的注意力。它们不适合随意使用。请谨慎使用。</p>\n<h2 id=\"trees\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zy4drlj4auxm43xh5hxsmw7a\"><i class=\"material-icons\">link</i>树</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"95hkmh2mj4ravf72ivh2l1mcq\">树可以表示分层数据。</p>\n<div class=\"filetree\">\n  <div class=\"file\">\n    sample-dir\n  </div>\n  <div class=\"children\">\n    <div class=\"file\">\n      src\n    </div>\n    <div class=\"children\">\n      <div class=\"file\">\n        app\n      </div>\n      <div class=\"children\">\n        <div class=\"file\">\n          app.component.ts\n        </div>\n        <div class=\"file\">\n          app.module.ts\n        </div>\n      </div>\n      <div class=\"file\">\n        styles.css\n      </div>\n      <div class=\"file\">\n        tsconfig.json\n      </div>\n    </div>\n    <div class=\"file\">\n      node_modules ...\n    </div>\n    <div class=\"file\">\n      package.json\n    </div>\n  </div>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6l1ufbx9xyn0w1xs4qik0fdc1\">以下是此文件树的标记。</p>\n<code-example language=\"html\">\n&lt;div class='filetree'&gt;\n    &lt;div class='file'&gt;\n        sample-dir\n    &lt;/div&gt;\n    &lt;div class='children'&gt;\n        &lt;div class='file'&gt;\n          src\n        &lt;/div&gt;\n        &lt;div class='children'&gt;\n            &lt;div class='file'&gt;\n              app\n            &lt;/div&gt;\n            &lt;div class='children'&gt;\n                &lt;div class='file'&gt;\n                  app.component.ts\n                &lt;/div&gt;\n                &lt;div class='file'&gt;\n                  app.module.ts\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class='file'&gt;\n              styles.css\n            &lt;/div&gt;\n            &lt;div class='file'&gt;\n              tsconfig.json\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class='file'&gt;\n          node_modules ...\n        &lt;/div&gt;\n        &lt;div class='file'&gt;\n          package.json\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code-example>\n<h2 id=\"tables\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5zhf5u3kza8drbjbmn5d5bwf0\"><i class=\"material-icons\">link</i>表格</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1nlm46omtuo4z5dby410dpniv\">使用 HTML 表格来呈现表格数据。</p>\n<style>\n  td, th {vertical-align: top}\n</style>\n<table>\n  <tbody><tr>\n    <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"fx3njhula3yf69gde4j3eisi\">框架</th>\n    <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dwogaf5sny91fgnhzksfgg76n\">任务</th>\n    <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"421zx0wif8ua943diud4x9i4b\">速度</th>\n  </tr>\n  <tr>\n    <td><code>AngularJS</code></td>\n    <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74nlsxkr1xp06lifpm36dhjjp\">路由</td>\n    <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dcfloa3og3kx452ugqn1bq7mw\">快</td>\n  </tr>\n  <tr>\n    <td><code>Angular v2</code></td>\n    <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74nlsxkr1xp06lifpm36dhjjp\">路由</td>\n    <!-- can use markdown too; remember blank lines -->\n    <td>\n<p>      <em data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7f3vfnq5r4o10e7tv3w5uu4ct\">更快</em></p>\n    </td>\n  </tr>\n  <tr>\n    <td><code>Angular v4</code></td>\n    <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74nlsxkr1xp06lifpm36dhjjp\">路由</td>\n    <td>\n<p>      <strong data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qmkmnwu5a5afxo6dxdywkdbj\">最快 :)</strong></p>\n    </td>\n  </tr>\n</tbody></table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2zupdu4q9x0jis1xhnrltk3b0\">以下是此表格的标记。</p>\n<code-example language=\"html\">\n&lt;<a href=\"api/animations/style\" class=\"code-anchor\">style</a>&gt;\n  td, th {vertical-align: top}\n&lt;/<a href=\"api/animations/style\" class=\"code-anchor\">style</a>&gt;\n\n&lt;table&gt;\n  &lt;tr&gt;\n    &lt;th&gt;Framework&lt;/th&gt;\n    &lt;th&gt;Task&lt;/th&gt;\n    &lt;th&gt;Speed&lt;/th&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;&lt;code&gt;AngularJS&lt;/code&gt;&lt;/td&gt;\n    &lt;td&gt;Routing&lt;/td&gt;\n    &lt;td&gt;Fast&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;&lt;code&gt;Angular v2&lt;/code&gt;&lt;/td&gt;\n    &lt;td&gt;Routing&lt;/td&gt;\n    &lt;!-- can use markdown too; remember blank lines --&gt;\n    &lt;td&gt;\n\n      *Faster*\n\n    &lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;&lt;code&gt;Angular v4&lt;/code&gt;&lt;/td&gt;\n    &lt;td&gt;Routing&lt;/td&gt;\n    &lt;td&gt;\n\n      **Fastest :)**\n\n    &lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;\n</code-example>\n<h2 id=\"images\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f5heaxfpm0nc5np989d1lbgif\"><i class=\"material-icons\">link</i>图像</h2>\n<h3 class=\"no-toc\" id=\"image-location\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8k7claqghnokov3fu9morqn87\"><i class=\"material-icons\">link</i>图像位置</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1xxjplvjlpse6dbryuqonbq2q\">将图像存储在 \n<code>content/images</code> 目录中，放在与指南页面具有相同 URL 的文件夹中。 此“作者样式指南”页面的图像属于 \n<code>content/images/guide/docs-style-guide</code> 文件夹。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1334y10udj5vhz9em5veg7d6b\">Angular 文档生成器会将这些图像文件夹复制到\n<em>运行时</em>位置 \n<code>generated/images</code>。 将图像 \n<code>src</code> 属性设置为从\n<em>该</em>目录开始。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5hxmobhn5u1qoai8xe3nxfov3\">以下是属于此页面的“飞翔英雄”图像的 \n<code>src</code> 属性。</p>\n<code-example>\nsrc=\"generated/images/guide/docs-style-guide/flying-hero.png\"\n</code-example>\n<h3 class=\"no-toc\" id=\"use-the-html-img-tag\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"28rsto6qtukq902ee70550dkj\"><i class=\"material-icons\">link</i>使用 HTML \n<i>&lt;img&gt;</i> 标签</h3>\n<p><strong data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evmk0j3xcwc5lm3c937krfo2a\">不要使用 Markdown 图像语法，![...](...).</strong></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"88qm8w0x6kkh7pl2bcfip06hu\">图像应在 \n<code>&lt;img&gt;</code> 标签中指定。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cukkx27zbhojnh4umwxrb1aqx\">为了无障碍性，始终使用有意义的图像描述设置 \n<code>alt</code> 属性。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2rglee6295h7b8jsy2yt88k2r\">你应该将 \n<code>&lt;img&gt;</code> 标签嵌套在 \n<code>&lt;figure&gt;</code> 标签中，该标签将图像样式化为一个带有阴影的框架。你需要编辑器的许可才能跳过 \n<code>&lt;figure&gt;</code> 标签。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bc1rwsx27sj3l71pj3c172omk\">以下是一个符合规范的示例</p>\n<figure>\n  <img src=\"generated/images/guide/docs-style-guide/flying-hero.png\" alt=\"flying hero\" width=\"3125\" height=\"2374\">\n</figure>\n<code-example language=\"html\">\n&lt;figure&gt;\n  &lt;img src=\"generated/images/guide/docs-style-guide/flying-hero.png\"\n       alt=\"flying hero\"&gt;\n&lt;/figure&gt;\n</code-example>\n<p><em data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5eddfv4z3dtmvpnfwwioitp6v\">注意，HTML 图像元素没有结束标签。</em></p>\n<h3 class=\"no-toc\" id=\"image-dimensions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2kn806gh9f9g956g4730itr6k\"><i class=\"material-icons\">link</i>图像尺寸</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ann0a97fuux70b60dhuoul4oz\">文档生成器会从文件中读取图像尺寸，并自动将宽度和高度属性添加到 \n<code>img</code> 标签。如果你想控制图像的大小，请提供你自己的宽度和高度属性。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3nbsdadcir1ankfl2sfol4u6q\">以下是“飞翔英雄”以更合理的比例显示。</p>\n<figure>\n <img src=\"generated/images/guide/docs-style-guide/flying-hero.png\" alt=\"flying Angular hero\" width=\"200\">\n</figure>\n<code-example language=\"html\">\n&lt;figure&gt;\n &lt;img src=\"generated/images/guide/docs-style-guide/flying-hero.png\"\n   alt=\"flying Angular hero\"\n   width=\"200\"&gt;\n&lt;/figure&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"85cihpc14fgx4lrbmcymleoml\">宽图像可能是个问题。大多数浏览器会尝试重新调整图像大小，但宽图像可能会在某些视口中溢出文档。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2x99z0o2vvskiq5xydqnubdwo\"><strong>不要设置大于 700px 的宽度</strong>。如果你想显示更大的图像，请提供指向实际图像的链接，用户可以点击该链接以单独查看全尺寸图像，例如“预先编译”指南中 \n<code>source-map-explorer</code> 输出的此示例：</p>\n<a href=\"generated/images/guide/docs-style-guide/toh-pt6-bundle.png\" title=\"Click to view larger image\">\n  <figure>\n    <img src=\"generated/images/guide/docs-style-guide/toh-pt6-bundle-700w.png\" alt=\"toh-pt6-bundle\" width=\"300px\">\n  </figure>\n</a>\n<h3 class=\"no-toc\" id=\"image-compression\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dheulgege5oo4wfj1b8e7ufjs\"><i class=\"material-icons\">link</i>图像压缩</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6azxkcygcsi7bwvwrfogd4e0o\">大型图像文件加载速度可能很慢，从而影响用户体验。始终压缩图像。 考虑使用图像压缩网站，例如 \n<a href=\"https://tinypng.com/\" title=\"tinypng\">tinypng</a>。</p>\n<h3 class=\"no-toc\" id=\"floating-images\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6vvszeidy2d1pe872ngp4wx5w\"><i class=\"material-icons\">link</i>浮动图像</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ds728v1n9g80dslnjstbibyjc\">你可以通过分别应用 class=\"left\" 或 class=\"right\" 属性将图像浮动到文本的左侧或右侧。</p>\n<p><img src=\"generated/images/guide/docs-style-guide/flying-hero.png\" alt=\"flying Angular hero\" width=\"200\" class=\"left\"></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ao4ik9ah3ykw9d9a3qwk98a5g\">此文本环绕到浮动“飞翔英雄”图像的右侧。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cwrchbc1wkeiubsycxh3jtveh\">标题和代码示例会自动清除浮动图像。如果你需要强制一段文本清除浮动图像，请在文本应该断开的地方添加 \n<code>&lt;br class=\"clear\"&gt;</code>。</p>\n<br class=\"clear\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dtp82pcv35hjgxam6fo01x2tf\">以上示例的标记为：</p>\n<code-example language=\"html\">\n&lt;img src=\"generated/images/guide/docs-style-guide/flying-hero.png\"\n   alt=\"flying Angular hero\"\n   width=\"200\"\n   class=\"left\"&gt;\n\nThis text wraps around to the right of the floating \"flying hero\" image.\n\nHeadings and code-examples automatically clear <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> floating image. If you need to force <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> piece of text to clear <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> floating image, add `&lt;br class=\"clear\"&gt;` where the text should break.\n\n&lt;br class=\"clear\"&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d8zh48so10arf00sstsvir4se\">注意，你通常不会将浮动图像包装在 \n<code>&lt;figure&gt;</code> 元素中。</p>\n<h4 id=\"floating-within-a-subsection\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3jo65zwro8taot9y0h22mwxan\"><i class=\"material-icons\">link</i>在子部分中浮动</h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6vd3am1ik0fska8a65v8m2er4\">如果在警告框、提示框或子部分中有一个浮动图像，最好将 \n<code>clear-fix</code> 类应用于 \n<code>div</code>，以确保图像不会溢出其容器。例如：</p>\n<div class=\"l-sub-section clear-fix\">\n<p>  <img src=\"generated/images/guide/docs-style-guide/flying-hero.png\" alt=\"flying Angular hero\" width=\"100\" class=\"right\"></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a9iiqxsmvxcmli9ab3l6ej18k\">一个包含 \n<strong>markdown</strong> 格式文本的子部分。</p>\n</div>\n<code-example language=\"html\">\n&lt;div class=\"l-sub-section clear-fix\"&gt;\n\n  &lt;img src=\"generated/images/guide/docs-style-guide/flying-hero.png\"\n    alt=\"flying Angular hero\"\n    width=\"100\"\n    class=\"right\"&gt;\n\n  A subsection with **markdown** formatted text.\n\n&lt;/div&gt;\n</code-example>\n\n</div>\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/animations/style\n - api/common/JsonPipe\n - api/common/NgForOf\n - api/common/NgIf\n - api/core/Component\n - api/core/NgModule\n - api/core/enableProdMode\n - api/forms/FormsModule\n - api/forms/NgModel\n - api/platform-browser-dynamic/platformBrowserDynamic\n - api/platform-browser/BrowserModule\n - api/router/Router\n - api/router/RouterLinkWithHref\n - generated/images/guide/docs-style-guide/toh-pt6-bundle.png\n - guide/docs-style-guide#additional-section-headings\n - guide/docs-style-guide#alerts\n - guide/docs-style-guide#anchors\n - guide/docs-style-guide#authors-style-guide\n - guide/docs-style-guide#callouts\n - guide/docs-style-guide#code-example\n - guide/docs-style-guide#code-example-attributes\n - guide/docs-style-guide#code-pane-attributes\n - guide/docs-style-guide#code-snippet-from-a-file\n - guide/docs-style-guide#code-snippets\n - guide/docs-style-guide#code-snippets-and-code-samples\n - guide/docs-style-guide#code-tabs\n - guide/docs-style-guide#code-tabs-attributes\n - guide/docs-style-guide#combining-fragments\n - guide/docs-style-guide#custom-label-and-tooltip\n - guide/docs-style-guide#displaying-a-code-fragment\n - guide/docs-style-guide#doc-generation-and-tooling\n - guide/docs-style-guide#docregion\n - guide/docs-style-guide#embedded-live-example\n - guide/docs-style-guide#example-of-bad-code\n - guide/docs-style-guide#floating-images\n - guide/docs-style-guide#floating-within-a-subsection\n - guide/docs-style-guide#from-code-samples\n - guide/docs-style-guide#guide-pages\n - guide/docs-style-guide#image-compression\n - guide/docs-style-guide#image-dimensions\n - guide/docs-style-guide#image-location\n - guide/docs-style-guide#images\n - guide/docs-style-guide#inline-code-snippets\n - guide/docs-style-guide#json-files\n - guide/docs-style-guide#live-example-for-named-stackblitz\n - guide/docs-style-guide#live-example-from-another-guide\n - guide/docs-style-guide#live-example-with-download-only\n - guide/docs-style-guide#live-example-without-download\n - guide/docs-style-guide#live-examples\n - guide/docs-style-guide#main-section-heading\n - guide/docs-style-guide#markdown-and-html\n - guide/docs-style-guide#named-docregions\n - guide/docs-style-guide#navigation\n - guide/docs-style-guide#nested-docregions\n - guide/docs-style-guide#partial-file-naming\n - guide/docs-style-guide#region\n - guide/docs-style-guide#secondary-section-heading\n - guide/docs-style-guide#sections\n - guide/docs-style-guide#source-code-markup\n - guide/docs-style-guide#subsections\n - guide/docs-style-guide#table-of-contents\n - guide/docs-style-guide#tables\n - guide/docs-style-guide#title\n - guide/docs-style-guide#trees\n - guide/docs-style-guide#ugly-anchors\n - guide/docs-style-guide#ugly-long-section-header-anchors\n - guide/docs-style-guide#use-the-html-img-tag\n - guide/styleguide\n - guide/styleguide#style-05-03\n - http://localhost:4200/\n - https://daringfireball.net/projects/markdown/syntax\n - https://github.com/angular/angular\n - https://github.com/angular/angular/blob/master/aio/README.md\n - https://tinypng.com/\n-->"
}