{
  "id" : "guide/language-service",
  "title" : "Angular 语言服务",
  "contents" : "<div class=\"content\">\n<h1 id=\"angular-language-service\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"2ha168k1thozk25n4q3jnrajw\"><i class=\"material-icons\">link</i>Angular 语言服务</h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1s0sft2hswgm3ir7dsm99mibg\">Angular 语言服务是一种在 Angular 模板中获取代码补全、错误、 提示和导航的方法，无论它们是外部的 HTML 文件还是嵌入在注解/装饰器中的字符串。Angular 语言服务会自动检测你是否正在打开一个 Angular 文件，读取你的 \n<code>tsconfig.json</code> 文件，找到你应用中的所有 模板，然后为你打开的任何模板提供语言服务。</p>\n<h2 id=\"autocompletion\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"4w9ffi3auytore9nkduori6b1\"><i class=\"material-icons\">link</i>自动补全</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8jiex4r959gcx6t623s9bb2n\">代码补全可以通过在输入时提供上下文可能性和提示来加快你的开发速度。此示例展示了 插值中的代码补全。在输入时，你可以按 Tab 键完成。</p>\n<figure>\n  <img src=\"generated/images/guide/language-service/language-completion.gif\" alt=\"autocompletion\" width=\"480\" height=\"72\">\n</figure>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"alu1or45v1r0oy1zq2srkxmkv\">元素中也有代码补全。作为组件选择器的任何元素都将 显示在代码补全列表中。</p>\n<h2 id=\"error-checking\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"blguyj3yc9hlvge1yvc11dr16\"><i class=\"material-icons\">link</i>错误检查</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eeh5t84m8bxlcgd7r4coiz5vb\">Angular 语言服务还可以预先警告你代码中的错误。 在此示例中，Angular 不知道 \n<code>orders</code> 是什么或它来自哪里。</p>\n<figure>\n  <img src=\"generated/images/guide/language-service/language-error.gif\" alt=\"error checking\" width=\"480\" height=\"126\">\n</figure>\n<h2 id=\"navigation\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"7u60u4e2e88xny39qfkq3np8d\"><i class=\"material-icons\">link</i>导航</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"33t9szhofmsakwxswa9wwi6v0\">导航允许你悬停以 查看组件、指令、模块等的来源，然后 单击并按 F12 直接跳转到其定义。</p>\n<figure>\n  <img src=\"generated/images/guide/language-service/language-navigation.gif\" alt=\"navigation\" width=\"392\" height=\"186\">\n</figure>\n<h2 id=\"angular-language-service-in-your-editor\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"97hsiplyxlq186tso3zl8bb4k\"><i class=\"material-icons\">link</i>在编辑器中使用 Angular 语言服务</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6prntnjqdlq2xijhdtrcurmun\">Angular 语言服务目前适用于 \n<a href=\"https://code.visualstudio.com/\">Visual Studio Code</a> 和 \n<a href=\"https://www.jetbrains.com/webstorm\">WebStorm</a>.</p>\n<h3 id=\"visual-studio-code\">Visual Studio Code</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"97b301g57f4ypqfw1to67z923\">在 Visual Studio Code 中，从商店安装 Angular 语言服务， 该商店可从左侧菜单栏底部的图标访问。 你也可以使用 VS 快速打开（⌘+P）搜索扩展。打开后， 输入以下命令：</p>\n<code-example language=\"sh\">\next install Angular.ng-template\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5mr25xoa3gvbij8m6czx7pw1h\">然后单击安装按钮安装 Angular 语言服务。</p>\n<h3 id=\"webstorm\">WebStorm</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8br3k6u70s9sjk96imdj1wkbg\">在 Webstorm 中，你必须将语言服务安装为开发依赖项。 当 Angular 看到此开发依赖项时，它会在 WebStorm 中提供 语言服务。然后 WebStorm 会在模板中提供颜色标记，并在 Angular 语言服务之外提供代码补全。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dcn48eylm52h5zswbh6890hru\">这是你 需要在 \n<code>package.json</code> 中包含的开发依赖项：</p>\n<code-example language=\"json\">\ndevDependencies {\n\t\"@angular/language-service\": \"^4.0.0\"\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"70jd1x1bsis4sa1pl80ex0hlo\">然后在项目根目录的终端窗口中， 使用 \n<code>npm</code> 或 \n<code>yarn</code> 安装 \n<code>devDependencies</code>：</p>\n<code-example language=\"sh\">\nnpm install \n</code-example>\n<p><em>OR</em> </p>\n<code-example language=\"sh\">\nyarn\n</code-example>\n<p><em>OR</em> </p>\n<code-example language=\"sh\">\nyarn install\n</code-example>\n<h3 id=\"sublime-text\">Sublime Text</h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"95du3fti0827e6o6tr7mpm84s\">在 \n<a href=\"https://www.sublimetext.com/\">Sublime Text</a> 中，你首先需要一个扩展来允许使用 Typescript。 在本地 \n<code>node_modules</code> 目录中安装最新版本的 typescript：</p>\n<code-example language=\"sh\">\nnpm install --save-dev typescript\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ac0xq40h3v7rgswbeo0vkln9\">然后在同一位置安装 Angular 语言服务：</p>\n<code-example language=\"sh\">\nnpm install --save-dev @angular/language-service\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ckwwy3ubb6x9qtubsihkpwrzg\">从 TypeScript 2.3 开始，TypeScript 具有语言服务插件模型，语言服务可以使用该模型。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8s3rjyxe25k7av2dwd7p7qms1\">接下来，在用户首选项（\n<code>Cmd+,</code> 或 \n<code>Ctrl+,</code>）中添加：</p>\n<code-example language=\"json\">\n\"typescript-tsdk\": \"&lt;path to your folder&gt;/node_modules/typescript/lib\"\n</code-example>\n<h2 id=\"installing-in-your-project\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dl9p3yio5ql6j9n7s0rsrrzeu\"><i class=\"material-icons\">link</i>在项目中安装</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ev09m4z8jf36tzjuaa6z336e\">你也可以使用以下 \n<code>npm</code> 命令在项目中安装 Angular 语言服务：</p>\n<code-example language=\"sh\">\nnpm install --save-dev @angular/language-service\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3j9m3gmj6rvuwc4cy4zwefuuc\">此外，将以下内容添加到项目 \n<code>tsconfig.json</code> 的 \n<code>\"compilerOptions\"</code> 部分。</p>\n<code-example language=\"json\">\n  \"plugins\": [\n      {\"name\": \"@angular/language-service\"}\n  ]\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4qn09afpee6im9vrdmoogudpk\">请注意，这仅在 \n<code>.ts</code> 文件中提供诊断和代码补全。你需要一个自定义的 Sublime 插件（或对当前插件的修改） 才能在 HTML 文件中提供代码补全。</p>\n<h2 id=\"how-the-language-service-works\" data-ng_translator_product=\"100\" data-ng_translator_confirmed data-ng_translator_ref_id=\"dfr7wxgbd47jyqbbvcnayntf6\"><i class=\"material-icons\">link</i>语言服务的工作原理</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pmxqzwl1tlsrbnltn5ix7oly\">当你使用带有语言服务的编辑器时，会启动一个编辑器进程，该进程会启动一个单独的语言进程/服务，并通过 \n<a href=\"https://en.wikipedia.org/wiki/Remote_procedure_call\">RPC</a> 与其通信。 你每次在编辑器中输入内容时，它都会将信息发送到另一个进程以 跟踪项目的狀態。当你触发模板中的代码补全列表时，编辑器进程首先将模板解析为 HTML AST 或 \n<a href=\"https://en.wikipedia.org/wiki/Abstract_syntax_tree\">抽象语法树</a>。然后 Angular 编译器会解释 模板所属的模块、你所在的范围和组件选择器。然后它会确定你在模板 AST 中的光标位置。当它确定 上下文时，它就可以确定子节点可以是什么。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8z8kxrktgohkyfkh0cby5pjo7\">如果你在插值中，情况会更复杂一些。如果你在 \n<code>div</code> 中有一个 \n<code>{{data.---}}</code> 的插值，并且需要在 \n<code>data.---</code> 之后获取代码补全列表，编译器就无法使用 HTML AST 来找到答案。HTML AST 只能告诉编译器，有一些文本包含字符“\n<code>{{data.---}}</code>”。这时，模板解析器会生成一个表达式 AST，它位于模板 AST 中。然后 Angular 语言服务会查看其上下文中的 \n<code>data.---</code>，并询问 TypeScript 语言服务 \n<code>data</code> 的成员是什么。然后 TypeScript 会返回可能的列表。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"avoif9yjghdvo49pit4ua8tjt\">有关更深入的信息，请参阅 \n<a href=\"https://github.com/angular/angular/blob/master/packages/language-service/src/types.ts\">Angular 语言服务 API</a></p>\n<hr>\n<h2 id=\"more-on-information\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ep01ujbf9acqc8i1f7fqp5ebt\"><i class=\"material-icons\">link</i>更多信息</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ciq88bpg64t8itd8pzrt4tk66\">有关更多信息，请参阅 \n<a href=\"https://www.youtube.com/watch?v=ez3R0Gi4z5A&amp;t=368s\">Chuck Jazdzewski 关于 Angular 语言 服务的演示</a>，来自 \n<a href=\"https://www.ng-conf.org/\">ng-conf</a> 2017。</p>\n\n</div>\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - guide/language-service#angular-language-service\n - guide/language-service#angular-language-service-in-your-editor\n - guide/language-service#autocompletion\n - guide/language-service#error-checking\n - guide/language-service#how-the-language-service-works\n - guide/language-service#installing-in-your-project\n - guide/language-service#more-on-information\n - guide/language-service#navigation\n - guide/language-service#sublime-text\n - guide/language-service#visual-studio-code\n - guide/language-service#webstorm\n - https://code.visualstudio.com/\n - https://en.wikipedia.org/wiki/Abstract_syntax_tree\n - https://en.wikipedia.org/wiki/Remote_procedure_call\n - https://github.com/angular/angular/blob/master/packages/language-service/src/types.ts\n - https://www.jetbrains.com/webstorm\n - https://www.ng-conf.org/\n - https://www.sublimetext.com/\n - https://www.youtube.com/watch?v=ez3R0Gi4z5A&t=368s\n-->"
}