{
  "id" : "guide/change-log",
  "title" : "变更日志",
  "contents" : "<div class=\"content\">\n<h1 id=\"change-log\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5rph3c7c0l91w5xmkdo8cza2z\"><i class=\"material-icons\">link</i>变更日志</h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8v0f03kvn464d8kty2uvvyh66\">Angular 文档是一个不断改进的活文档。 此日志关注最近的重大变更。</p>\n<h2 id=\"updated-to-angular-40-documentation-for-angular-2x-can-be-found-at-v2angulario\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"avw256cyv1fjxsq7y59sajkfn\"><i class=\"material-icons\">link</i>更新至 Angular 4.0。Angular 2.x 的文档可以在 \n<a href=\"https://v2.angular.io\">v2.angular.io</a> 找到。</h2>\n<h2 id=\"all-mention-of-moduleid-removed-component-relative-paths-guide-deleted-2017-03-13\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"15ukybtowl8rswlrq7rephskv\"><i class=\"material-icons\">link</i>删除了所有关于 moduleId 的提及。删除了“组件相对路径”指南（2017-03-13）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"448mnwd7kkr4jv3t6lex4l1pb\">我们在推荐的 SystemJS 配置中添加了一个新的 SystemJS 插件（systemjs-angular-loader.js）。 此插件会动态地将模板 URL 和样式 URL 中的“组件相对路径”转换为“绝对路径”。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c7jafukbvo64nb60io4tebz4s\">我们强烈建议你只编写组件相对路径。 这是这些文档中讨论的唯一一种 URL 形式。你不再需要编写 @Component({ moduleId: module.id })，也不应该编写。</p>\n<h2 id=\"new-downloadable-examples-for-each-guide-2017-02-28\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e9iadb3zcvlmmteqzsj5t65f3\"><i class=\"material-icons\">link</i>新增：每个指南的可下载示例（2017-02-28）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"32n8kdqyzzdmsweb3xne97dee\">现在你可以下载任何指南的示例代码并在本地运行它。 在“动态示例”链接旁边寻找新的下载链接。</p>\n<h2 id=\"template-syntaxstructural-directives-refreshed-2017-02-06\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ddwhxet1pvtabb2b03x3ia9qf\"><i class=\"material-icons\">link</i>模板语法/结构型指令：更新（2017-02-06）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"tzyyga083ga1hd3cqmlkfgi\">对 \n<a href=\"guide/template-syntax\"><em>模板语法</em></a> 和 \n<a href=\"guide/structural-directives\"><em>结构型指令</em></a> 指南进行了重大修订，以提高清晰度、准确性和当前的推荐实践。 讨论了 \n<code>&lt;ng-container&gt;</code>。 修订后的示例更清晰，涵盖了所有讨论的主题。</p>\n<h2 id=\"new-samples-re-structured-with-src-folder-2017-02-02\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"76voqwxf8tjdobec86o9bqbps\"><i class=\"material-icons\">link</i>新增：使用 \n<code>src/</code> 文件夹重新构建示例（2017-02-02）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"210f50atfjl4zxal4vaq2qcon\">所有文档示例都已与 Angular CLI 的默认文件夹结构重新对齐。 这是将示例基于 Angular CLI 的道路上的一步。 但这本身也很不错。 它有助于将应用程序代码与设置和配置文件清晰地分开。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ad45r5su1lhy8zylap5zj07rf\">所有示例现在在项目根目录中都有一个 \n<code>src/</code> 文件夹。 以前的 \n<code>app/</code> 文件夹移到了 \n<code>src/</code> 下。 在 \n<a href=\"https://github.com/angular/quickstart#updating-to-a-newer-version-of-the-quickstart-repo\" target=\"Migrating samples/quickstart app to the src folder\"> 快速入门仓库更新说明</a> 中阅读有关将现有项目迁移到此结构的信息。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9sl71bivdyijvpgdmfnufatrh\">值得注意的是：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1zlycuiqreyce8fzvfuw8pn9d\"><code>app/main.ts</code> 移到了 \n<code>src/main.ts</code>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9arh77o73f1xwb6ezyncxf52t\"><code>app/</code> 移到了 \n<code>src/app/</code>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1fbujpz2pwajuskhzyesha7dr\"><code>index.html</code>、\n<code>styles.css</code> 和 \n<code>tsconfig.json</code> 移到了 \n<code>src/</code> 内。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4v7ntsdlx5nrk0ycy4mfvfygc\"><code>systemjs.config.js</code> 现在导入 \n<code>main.js</code> 而不是 \n<code>app</code>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"355sxaq0buk77axnsy43djtuc\">添加了 \n<code>lite-server</code> 配置（\n<code>bs-config.json</code>）来服务 \n<code>src/</code>。</li>\n</ul>\n<h2 id=\"new-reactive-forms-guide-2017-01-31\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1jv395v0lkwe96fzt2nfreu2q\"><i class=\"material-icons\">link</i>新增：响应式表单指南（2017-01-31）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5hadxzuk2xvkav1e9wbq3208u\">新的 \n<a href=\"guide/reactive-forms\"><strong>响应式表单</strong></a> 指南解释了如何以及为什么构建“响应式表单”。 “响应式表单”是 \n<a href=\"guide/forms\">表单</a> 指南中介绍的声明式“模板驱动”表单方法的代码化对应方法。 在你决定如何向你的应用程序添加表单之前，请查看它。 还要记住，你可以在同一个应用程序中使用这两种技术， 选择最适合每个场景的方法。</p>\n<h2 id=\"new-deployment-guide-2017-01-30\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2sv44vwitflu0598jrazqcygb\"><i class=\"material-icons\">link</i>新增：部署指南（2017-01-30）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"442twbvmgs5a4qy516k01x7ta\">新的 \n<a href=\"guide/deployment\">部署</a> 指南描述了将应用程序部署到服务器的技术。 它包括有关优化生产环境的重要建议。</p>\n<h2 id=\"hierarchical-dependency-injection-refreshed-2017-01-13\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"etheshljjrl6werx44s3dlg3p\"><i class=\"material-icons\">link</i>分层依赖注入：更新（2017-01-13）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c3ivlluaq9qwzjp4efrloc90d\"><a href=\"guide/hierarchical-dependency-injection\">分层依赖注入</a> 指南进行了重大修订。 关闭问题 #3086。 修订后的示例更清晰，涵盖了所有讨论的主题。</p>\n<h2 id=\"miscellaneous-2017-01-05\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7zlt768t1o483dlmfhy58u1dq\"><i class=\"material-icons\">link</i>其他（2017-01-05）</h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cml9wu1yeikr2ayksp7ccer1b\"><a href=\"guide/setup\">设置</a> 指南： 添加了有关如何删除\n<em>非必要</em>文件的（可选）说明。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak9fyjz8slgzyy2qvwr6v9ycm\">不再在 \n<code>rxjs-extensions</code> 文件中合并 RxJS 操作符导入；每个文件应该导入它需要的部分。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cyevno8s96wmf4aoncuvxa647\">所有示例都将模板/样式 URL 作为最佳实践以 \n<code>./</code> 开头。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c51503k57b399z182tnb2owmo\"><a href=\"guide/styleguide\">样式指南</a>：复制编辑和修订规则。</li>\n</ul>\n<h2 id=\"router-more-detail-2016-12-21\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4a9t83dzfainbaut53kxkxido\"><i class=\"material-icons\">link</i>路由器：更多细节（2016-12-21）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2797a8rankji5f1u28ynz70gh\">在 \n<a href=\"guide/router\">路由器</a> 指南中添加了更多信息， 包括名为出口、通配符路由和预加载策略的部分。</p>\n<h2 id=\"http-how-to-set-default-request-headers-and-other-request-options-2016-12-14\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4veciilcow2y269skx54505tv\"><i class=\"material-icons\">link</i>HTTP：如何设置默认请求标头（和其他请求选项）（2016-12-14）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c5dai7o88qo5hl37xu1hut0lx\">在 HTTP 指南中添加了关于如何设置默认请求标头（以及其他请求选项）的部分。</p>\n<h2 id=\"testing-added-component-test-plunkers-2016-12-02\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a8dhvz3y4va7t5pyulx3fy452\"><i class=\"material-icons\">link</i>测试：添加了组件测试 plunker（2016-12-02）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bk3ovkjufirz6srp9df28vuhd\">添加了两个 plunker，每个 plunker 测试\n<em>一个简单的组件</em>，这样你就可以编写自己的组件测试 plunker：\n<live-example name=\"setup\" plnkr=\"quickstart-specs\">\n 一个\n</live-example> 用于 QuickStart 种子的 \n<code>AppComponent</code>，以及 \n<live-example name=\"testing\" plnkr=\"banner-specs\">\n 另一个\n</live-example> 用于测试指南的 \n<code>BannerComponent</code>。 在“测试”和“设置解剖”指南中链接到这些 plunker。</p>\n<h2 id=\"internationalization-pluralization-and-select-2016-11-30\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7t419uvrw57lh90udlwvwdti7\"><i class=\"material-icons\">link</i>国际化：复数和\n<em>选择</em>（2016-11-30）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d2v54fvnys69oa3l3ept4l4cf\"><a href=\"guide/i18n\">国际化 (i18n)</a> 指南解释了如何使用 \n<code>select</code> 处理复数和备选文本的翻译。 示例也演示了这些功能。</p>\n<h2 id=\"testing-karma-file-updates-2016-11-30\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2wswyaxwkwsgjmulwjup6erry\"><i class=\"material-icons\">link</i>测试：karma 文件更新（2016-11-30）</h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"21nr1rbqq15xqp6ztkhg9l591\"><code>karma.config</code> + \n<code>karma-test-shim</code> 可以处理多个规范源路径； 请参阅 quickstart 问题：\n<a href=\"https://github.com/angular/quickstart/issues/294\">angular/quickstart#294</a>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1aw4o5eshk6pwkfqm312vl907\">在 karma 启动的浏览器中显示 Jasmine Runner 输出。</li>\n</ul>\n<h2 id=\"quickstart-rewrite-2016-11-18\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b9ckv4o8rj5i555vkluc0k1vu\"><i class=\"material-icons\">link</i>QuickStart 重写（2016-11-18）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3bxgf3a2fps4wr8thqn1iq4cn\">QuickStart 已完全重写，因此它实际上很快。 它引用了一个在 Plunker 中运行的最小“Hello Angular”应用程序。 新的 \n<a href=\"guide/setup\">设置</a> 页面告诉你如何通过下载（或克隆）QuickStart github 存储库来安装本地开发环境。 你不再被要求将代码复制粘贴到未解释的设置文件中。</p>\n<h2 id=\"sync-with-angular-v220-2016-11-14\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5q92ds7d1yyky1fofsswqs7hm\"><i class=\"material-icons\">link</i>与 Angular v.2.2.0 同步（2016-11-14）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f24e9v4utu1i0qi4dx2vvrldy\">文档和代码示例已使用 Angular v.2.2.0 更新和测试。</p>\n<h2 id=\"update-ngupgrade-guide-for-the-aot-friendly-upgradestatic-module-2016-11-14\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bp4961tcccq3zcaztn0oqlzfh\"><i class=\"material-icons\">link</i>更新：适用于 AOT 友好\n<em>升级/静态</em>模块的 NgUpgrade 指南（2016-11-14）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ftu04x88zbs21toaxw5cpvo8\">更新的 \n<a href=\"guide/upgrade\">NgUpgrade 指南</a> 涵盖了 v.2.2.0 中发布的新的 AOT 友好 \n<code><a href=\"api/upgrade/static\" class=\"code-anchor\">upgrade/static</a></code> 模块，这是从 AngularJS 迁移到 Angular 的推荐 工具。 v.2.2.0 之前版本的文档已被删除。</p>\n<h2 id=\"es6--described-in-typescript-to-javascript-2016-11-14\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"agj7devada8kjn3hw9lp4lx1b\"><i class=\"material-icons\">link</i>ES6 在“TypeScript 到 JavaScript”中描述（2016-11-14）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2avwdsiq7w5whvq69jrn1ofab\">更新的 TypeScript 到 JavaScript 指南解释了如何通过将 TypeScript 文档示例中的常见习惯用法（以及网络上的其他地方）翻译成 ES6/7 和 ES5 来用 ES6/7 编写应用程序。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8vg2jvp9z7j9lqp6k5r7a5cwm\">这在 \n<a href=\"https://github.com/angular/angular/pull/18694\">2017 年 8 月被删除</a>，但仍然可以在 \n<a href=\"https://v2.angular.io/docs/ts/latest/cookbook/ts-to-js.html\">v2 文档</a> 中查看。</p>\n<h2 id=\"sync-with-angular-v211-2016-10-21\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"76djr1669o17im9m3f96ylb31\"><i class=\"material-icons\">link</i>与 Angular v.2.1.1 同步（2016-10-21）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a9pz885p33vzmbhk3olrhmw8x\">文档和代码示例已使用 Angular v.2.1.1 更新和测试。</p>\n<h2 id=\"npm-types-packages-replace-typings-2016-10-20\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ds0fky55fboycbwjesldxe9g8\"><i class=\"material-icons\">link</i>npm \n<em>@types</em> 包替换\n<em>typings</em>（2016-10-20）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cy0e9526gz45bk7ay2ulir3ye\">文档示例现在从 npm \n<code>@types</code> 包而不是\n<em>typings</em> 工具获取第三方库的 TypeScript 类型信息。 \n<code>typings.json</code> 文件已消失。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1hjgxe504qmb85mufxe14kkxd\"><a href=\"guide/upgrade\">AngularJS 升级</a> 指南反映了此更改。 \n<code>package.json</code> 安装 \n<code>@types/angular</code> 和几个 \n<code>@types/angular-...</code> 包以支持升级；这些对于纯 Angular 开发来说是不需要的。</p>\n<h2 id=\"template-syntax-explains-two-way-data-binding-syntax-2016-10-20\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dc2yfajgxevmuw8ldctq3ro1b\"><i class=\"material-icons\">link</i>“模板语法”解释了双向数据绑定语法（2016-10-20）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ucbn1yht9un3t2bdlsl6px7b\">演示了如何双向数据绑定到自定义 Angular 组件，并 根据基本 \n<code>[()]</code> 语法重新解释 \n<code>[(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]</code>。</p>\n<h2 id=\"breaking-change-in-memory-web-api-v0111-delivered-as-esm-umd-2016-10-19\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1w0d52x5nyqj6t0zgn80q95ma\"><i class=\"material-icons\">link</i>重大变更：\n<code>in-memory-web-api</code>（v.0.1.11）作为 esm umd 提供（2016-10-19）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dd15ard0ylwzqzemptb31vmzx\">此更改支持 ES6 开发人员，并与典型的 Angular 库更好地对齐。 它不会影响模块的 API，但会影响你加载和导入它的方式。 请参阅 \n<code>in-memory-web-api</code> 存储库中的 \n<a href=\"https://github.com/angular/in-memory-web-api/blob/master/CHANGELOG.md#0113-2016-10-20\">更改说明</a>。</p>\n<h2 id=\"router-preload-syntax-and-enterleave-animations-2016-10-19\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"enfikfr4q9lkih4612v21rlhs\"><i class=\"material-icons\">link</i>“路由器”\n<em>预加载</em>语法和\n<em>:enter</em>/:leave 动画（2016-10-19）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3uhb68gxv6vrrinqpqjj9srk1\">路由器可以在应用程序启动\n<em>之后</em>和 用户导航到它们\n<em>之前</em>惰性\n<em>预加载</em>模块，以提高感知性能。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"83dpjk0k51y956nla5xy78ksz\">新的 \n<code>:enter</code> 和 \n<code>:leave</code> 别名使动画更加自然。</p>\n<h2 id=\"sync-with-angular-v210-2016-10-12\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"etvgcgaaeaz0ek28fimoz28tn\"><i class=\"material-icons\">link</i>与 Angular v.2.1.0 同步（2016-10-12）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5srl2wvajxadxiy78tlr589r8\">文档和代码示例已使用 Angular v.2.1.0 更新和测试。</p>\n<h2 id=\"new-ahead-of-time-aot-compilation-guide-2016-10-11\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"41q9ikz7sb1d13f7v6sqfsf1o\"><i class=\"material-icons\">link</i>新的“预先编译 (AOT) 编译”指南（2016-10-11）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"w0ssn1it5cwzfqzpyv7ppp76\">新的 \n<a href=\"guide/aot-compiler\">预先编译 (AOT) 编译</a> 指南 解释了什么是 AOT 编译以及为什么要使用它。 它使用 QuickStart 应用程序演示了基础知识，然后是编译和捆绑英雄之旅的更高级考虑因素。</p>\n<h2 id=\"sync-with-angular-v202-2016-10-6\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9lzv6wb5reg9b8tqiu62f0aet\"><i class=\"material-icons\">link</i>与 Angular v.2.0.2 同步（2016-10-6）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"oufp2z7ewrxcjf9tdqxfl4ny\">文档和代码示例已使用 Angular v.2.0.2 更新和测试。</p>\n<h2 id=\"routing-and-navigation-guide-with-the-router-module-2016-10-5\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2t7qp4tavorkyeda4nliq9s4a\"><i class=\"material-icons\">link</i>“路由和导航”指南，其中包含\n<em>路由模块</em>（2016-10-5）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5hnupncls26h236e5x7kcnu3\"><a href=\"guide/router\">路由和导航</a> 指南现在将路由配置 放在\n<em>路由模块</em>中。 \n<em>路由模块</em>替换了以前涉及 \n<code><a href=\"api/core/ModuleWithProviders\" class=\"code-anchor\">ModuleWithProviders</a></code> 的\n<em>路由对象</em>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ebd3u774iitmx401i8zbnqbb5\">所有带有路由的引导示例都使用\n<em>路由模块</em>，并且散文内容已更新， 最明显的是在 \n<a href=\"guide/ngmodules\">NgModule</a> 指南和 \n<a href=\"guide/ngmodule-faq\">NgModule 常见问题解答</a> 指南中。</p>\n<h2 id=\"new-internationalization-guide-2016-09-30\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b5tin8sa1yb4taajjdrf7oigt\"><i class=\"material-icons\">link</i>新的“国际化”指南（2016-09-30）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"avwrah0a4m7l0hjb568o6iaoc\">添加了一个新的 \n<a href=\"guide/i18n\">国际化 (i18n)</a> 指南，该指南展示了如何 使用 Angular “i18n” 功能将模板文本翻译成多种语言。</p>\n<h2 id=\"angular-in-memory-web-api-package-rename-2016-09-27\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3lfll1mqwtlwn00bjyiqtlnhd\"><i class=\"material-icons\">link</i>“angular-in-memory-web-api” 包重命名（2016-09-27）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"27u9k8571is5sx4a5wykjx2ns\">许多示例使用 \n<code>angular-in-memory-web-api</code> 来模拟远程服务器。 此库在你还没有要通信的服务器的早期开发阶段对你也很有用。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ko8ur3w2ayg0m41d2kr22w22\">包名称已从“angular2-in-memory-web-api”更改，该名称仍在 npm 上冻结。 新的“angular-in-memory-web-api”具有新功能。 \n<a href=\"https://github.com/angular/in-memory-web-api/blob/master/README.md\">在 github 上阅读有关它们的信息</a>。</p>\n<h2 id=\"style-guide-with-ngmodules-2016-09-27\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qh9cb1ddxrfyi3c3nkvzkwol\"><i class=\"material-icons\">link</i>“样式指南”与\n<em>NgModules</em>（2016-09-27）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e3n0ysi19vglz1oggud54qawg\"><a href=\"guide/styleguide\">样式指南</a> 解释了 NgModules 的推荐约定。 桶现在用处不大，已从样式指南中删除； 它们仍然很有价值，但不是 Angular 样式的问题。 还放宽了阻止使用 \n<code>@Component.host</code> 属性的规则。</p>\n<h2 id=\"moduleid-moduleid-everywhere-2016-09-25\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"enrfa39cw2ni8kq48dr4rlyru\"><i class=\"material-icons\">link</i><em>moduleId: module.id</em> 无处不在（2016-09-25）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a38b09qilkf4xg7zcn6pnvzub\">使用 \n<code>templateUrl</code> 或 \n<code>styleUrls</code> 获取模板或样式的示例组件 已转换为\n<em>模块相对</em> URL。 在它们的 \n<code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 元数据中添加了 \n<code>moduleId: module.id</code> 属性和值。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11iyukwci5oqx5ajibbldf74\">当应用程序使用 SystemJS 加载模块时，此更改是使用 AOT 编译器进行编译的要求，就像示例当前所做的那样。</p>\n<h2 id=\"lifecycle-hooks-guide-simplified-2016-09-24\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6siqxb6x5yr9r5gl4nr2zp85e\"><i class=\"material-icons\">link</i>“生命周期钩子”指南简化（2016-09-24）</h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ph9v89dv4mff0bgddz0whvmc\"><a href=\"guide/lifecycle-hooks\">生命周期钩子</a> 指南更短、更简单，并且 更关注 Angular 调用钩子的顺序。</p>\n\n</div>\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/core/ModuleWithProviders\n - api/forms/NgModel\n - api/upgrade/static\n - guide/aot-compiler\n - guide/change-log#all-mention-of-moduleid-removed-component-relative-paths-guide-deleted-2017-03-13\n - guide/change-log#angular-in-memory-web-api-package-rename-2016-09-27\n - guide/change-log#breaking-change-in-memory-web-api-v0111-delivered-as-esm-umd-2016-10-19\n - guide/change-log#change-log\n - guide/change-log#es6--described-in-typescript-to-javascript-2016-11-14\n - guide/change-log#hierarchical-dependency-injection-refreshed-2017-01-13\n - guide/change-log#http-how-to-set-default-request-headers-and-other-request-options-2016-12-14\n - guide/change-log#internationalization-pluralization-and-select-2016-11-30\n - guide/change-log#lifecycle-hooks-guide-simplified-2016-09-24\n - guide/change-log#miscellaneous-2017-01-05\n - guide/change-log#moduleid-moduleid-everywhere-2016-09-25\n - guide/change-log#new-ahead-of-time-aot-compilation-guide-2016-10-11\n - guide/change-log#new-deployment-guide-2017-01-30\n - guide/change-log#new-downloadable-examples-for-each-guide-2017-02-28\n - guide/change-log#new-internationalization-guide-2016-09-30\n - guide/change-log#new-reactive-forms-guide-2017-01-31\n - guide/change-log#new-samples-re-structured-with-src-folder-2017-02-02\n - guide/change-log#npm-types-packages-replace-typings-2016-10-20\n - guide/change-log#quickstart-rewrite-2016-11-18\n - guide/change-log#router-more-detail-2016-12-21\n - guide/change-log#router-preload-syntax-and-enterleave-animations-2016-10-19\n - guide/change-log#routing-and-navigation-guide-with-the-router-module-2016-10-5\n - guide/change-log#style-guide-with-ngmodules-2016-09-27\n - guide/change-log#sync-with-angular-v202-2016-10-6\n - guide/change-log#sync-with-angular-v210-2016-10-12\n - guide/change-log#sync-with-angular-v211-2016-10-21\n - guide/change-log#sync-with-angular-v220-2016-11-14\n - guide/change-log#template-syntax-explains-two-way-data-binding-syntax-2016-10-20\n - guide/change-log#template-syntaxstructural-directives-refreshed-2017-02-06\n - guide/change-log#testing-added-component-test-plunkers-2016-12-02\n - guide/change-log#testing-karma-file-updates-2016-11-30\n - guide/change-log#update-ngupgrade-guide-for-the-aot-friendly-upgradestatic-module-2016-11-14\n - guide/change-log#updated-to-angular-40-documentation-for-angular-2x-can-be-found-at-v2angulario\n - guide/deployment\n - guide/forms\n - guide/hierarchical-dependency-injection\n - guide/i18n\n - guide/lifecycle-hooks\n - guide/ngmodule-faq\n - guide/ngmodules\n - guide/reactive-forms\n - guide/router\n - guide/setup\n - guide/structural-directives\n - guide/styleguide\n - guide/template-syntax\n - guide/upgrade\n - https://github.com/angular/angular/pull/18694\n - https://github.com/angular/in-memory-web-api/blob/master/CHANGELOG.md#0113-2016-10-20\n - https://github.com/angular/in-memory-web-api/blob/master/README.md\n - https://github.com/angular/quickstart#updating-to-a-newer-version-of-the-quickstart-repo\n - https://github.com/angular/quickstart/issues/294\n - https://v2.angular.io\n - https://v2.angular.io/docs/ts/latest/cookbook/ts-to-js.html\n-->"
}