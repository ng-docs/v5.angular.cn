{
  "id": "tutorial/toh-pt0",
  "title": "The Application Shell",
  "contents": "\n<div class=\"content\">\n<h1 id=\"the-application-shell\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/toh-pt0#the-application-shell\"><i class=\"material-icons\">link</i></a>The Application Shell</h1>\n<h2 id=\"install-the-angular-cli\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/toh-pt0#install-the-angular-cli\"><i class=\"material-icons\">link</i></a>Install the Angular CLI</h2>\n<p> Install the <a href=\"https://github.com/angular/angular-cli\">Angular CLI</a>, if you haven't already done so.</p>\n<code-example language=\"sh\" class=\"code-shell\">\n  npm install -g @angular/cli\n</code-example>\n<h2 id=\"create-a-new-application\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/toh-pt0#create-a-new-application\"><i class=\"material-icons\">link</i></a>Create a new application</h2>\n<p>Create a new project named <code>angular-tour-of-heroes</code> with this CLI command.</p>\n<code-example language=\"sh\" class=\"code-shell\">\n  ng new angular-tour-of-heroes\n</code-example>\n<p>The Angular CLI generated a new project with a default application and supporting files. </p>\n<h2 id=\"serve-the-application\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/toh-pt0#serve-the-application\"><i class=\"material-icons\">link</i></a>Serve the application</h2>\n<p>Go to the project directory and launch the application.</p>\n<code-example language=\"sh\" class=\"code-shell\">\n  cd angular-tour-of-heroes\n  ng serve --open\n</code-example>\n<div class=\"l-sub-section\">\n<p>The <code>ng serve</code> command builds the app, starts the development server,\nwatches the source files, and rebuilds the app as you make changes to those files.</p>\n<p>The <code>--open</code> flag  opens a browser to <code>http://localhost:4200/</code>.</p>\n</div>\n<p>You should see the app running in your browser.</p>\n<h2 id=\"angular-components\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/toh-pt0#angular-components\"><i class=\"material-icons\">link</i></a>Angular components</h2>\n<p>The page you see is the <em>application shell</em>.\nThe shell is controlled by an Angular <strong>component</strong> named <code>AppComponent</code>.</p>\n<p><em>Components</em> are the fundamental building blocks of Angular applications.\nThey display data on the screen, listen for user input, and take action based on that input.</p>\n<h2 id=\"change-the-application-title\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/toh-pt0#change-the-application-title\"><i class=\"material-icons\">link</i></a>Change the application title</h2>\n<p>Open the project in your favorite editor or IDE and navigate to the <code>src/app</code> folder.</p>\n<p>You'll find the implementation of the shell <code>AppComponent</code> distributed over three files:</p>\n<ol>\n<li><code>app.component.ts</code>— the component class code, written in TypeScript. </li>\n<li><code>app.component.html</code>— the component template, written in HTML.</li>\n<li><code>app.component.css</code>— the component's private CSS styles.</li>\n</ol>\n<p>Open the component class file (<code>app.component.ts</code>) and change the value of the <code>title</code> property to 'Tour of Heroes'.</p>\n<code-example path=\"toh-pt0/src/app/app.component.ts\" region=\"set-title\" title=\"app.component.ts (class title property)\" linenums=\"false\">\ntitle = 'Tour of Heroes';\n\n</code-example>\n<p>Open the component template file (<code>app.component.html</code>) and\ndelete the default template generated by the Angular CLI.\nReplace it with the following line of HTML.</p>\n<code-example path=\"toh-pt0/src/app/app.component.html\" title=\"app.component.html (template)\" linenums=\"false\">\n&#x3C;h1>{{title}}&#x3C;/h1>\n\n\n</code-example>\n<p>The double curly braces are Angular's <em>interpolation binding</em> syntax.\nThis interpolation binding presents the component's <code>title</code> property value\ninside the HTML header tag.</p>\n<p>The browser refreshes and displays the new application title.</p>\n<a id=\"app-wide-styles\"></a>\n<h2 id=\"add-application-styles\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/toh-pt0#add-application-styles\"><i class=\"material-icons\">link</i></a>Add application styles</h2>\n<p>Most apps strive for a consistent look across the application.\nThe CLI generated an empty <code>styles.css</code> for this purpose.\nPut your application-wide styles there.</p>\n<p>Here's an excerpt from the <code>styles.css</code> for the <em>Tour of Heroes</em> sample app.</p>\n<code-example path=\"toh-pt0/src/styles.1.css\" title=\"src/styles.css (excerpt)\">\n/* Application-wide Styles */\nh1 {\n  color: #369;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 250%;\n}\nh2, h3 {\n  color: #444;\n  font-family: Arial, Helvetica, sans-serif;\n  font-weight: lighter;\n}\nbody {\n  margin: 2em;\n}\nbody, input[text], button {\n  color: #888;\n  font-family: Cambria, Georgia;\n}\n/* everywhere else */\n* {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n\n</code-example>\n<h2 id=\"final-code-review\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/toh-pt0#final-code-review\"><i class=\"material-icons\">link</i></a>Final code review</h2>\n<p>The source code for this tutorial and the complete <em>Tour of Heroes</em> global styles\nare available in the <live-example></live-example>. </p>\n<p>Here are the code files discussed on this page. </p>\n<code-tabs>\n\n  <code-pane title=\"src/app/app.component.ts\" path=\"toh-pt0/src/app/app.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Tour of Heroes';\n}\n\n\n</code-pane>\n\n  <code-pane title=\"src/app/app.component.html\" path=\"toh-pt0/src/app/app.component.html\">\n&#x3C;h1>{{title}}&#x3C;/h1>\n\n\n</code-pane>\n\n  <code-pane title=\"src/styles.css (excerpt)\" path=\"toh-pt0/src/styles.1.css\">\n/* Application-wide Styles */\nh1 {\n  color: #369;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 250%;\n}\nh2, h3 {\n  color: #444;\n  font-family: Arial, Helvetica, sans-serif;\n  font-weight: lighter;\n}\nbody {\n  margin: 2em;\n}\nbody, input[text], button {\n  color: #888;\n  font-family: Cambria, Georgia;\n}\n/* everywhere else */\n* {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n\n</code-pane>\n</code-tabs>\n<h2 id=\"summary\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/toh-pt0#summary\"><i class=\"material-icons\">link</i></a>Summary</h2>\n<ul>\n<li>You created the initial application structure using the Angular CLI.</li>\n<li>You learned that Angular components display data.</li>\n<li>You used the double curly braces of interpolation to display the app title. </li>\n</ul>\n\n</div>\n<!-- links to this doc:\n - tutorial/toh-pt2\n-->\n<!-- links from this doc:\n - api/core/Component\n - tutorial/toh-pt0#add-application-styles\n - tutorial/toh-pt0#angular-components\n - tutorial/toh-pt0#change-the-application-title\n - tutorial/toh-pt0#create-a-new-application\n - tutorial/toh-pt0#final-code-review\n - tutorial/toh-pt0#install-the-angular-cli\n - tutorial/toh-pt0#serve-the-application\n - tutorial/toh-pt0#summary\n - tutorial/toh-pt0#the-application-shell\n - https://github.com/angular/angular-cli\n-->"
}